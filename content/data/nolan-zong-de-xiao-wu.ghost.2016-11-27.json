{"meta":{"exported_on":1480234882805,"version":"003"},"data":{"posts":[{"id":2,"uuid":"a01d089d-7327-403c-b05b-21430be1547f","title":"版权声明","slug":"declaration","markdown":"\n<!DOCTYPE html>\n<head>\n</head>\n\n<body>\n<div id=\"deed\" class=\"yellow\">\n<div id=\"deed-head\">\n<div id=\"cc-logo\">\n<img src=\"https://creativecommons.org/images/deed/cc-logo.jpg\" alt=\"\"/>\n</div>\n<h1><span>知识共享许可协议法律文本</span></h1>\n<div id=\"deed-license\">\n<h2>署名-非商业性使用-相同方式共享 3.0中国大陆</h2>\n</div>\n</div>\n<div id=\"deed-main\">\n<div id=\"deed-main-content\">\n<img src=\"https://creativecommons.org/images/international/cn.png\" alt=\"\"/>\n<blockquote>\n“知识共享”（Creative Commons）不是一家律师事务所也不对外提供法律服务。提供本许可协议文本并不导致“律师—当事人”关系的建立。“知识共享”按其现状（As Is）提供这些信息。“知识共享”对于所提供的信息不提供任何担保，也不对因使用该信息而造成的损失承担损害赔偿责任。\n</blockquote>\n<h3><em>协议文本</em></h3>\n<p>本作品（定义如下）的提供是以适用“知识共享公共许可协议”（ 简称“CCPL”或 “许可”）为前提的。本作品受《中华人民共和国著作权法》以及其他可适用法律的保护。对本作品的使用不得超越本许可协议授权的范围。</p>\n<p>如您行使本许可授予的使用本作品的权利，就表明您接受并同意遵守本许可协议的所有条款。鉴于本许可为合同，在您接受这些条款和规定的前提下，许可人授予您本许可所包括的权利。 </p>\n<p><strong>第一条 定义</strong> </p>\n<ol type=\"1\">\n<li>\n<strong>本作品：</strong>指根据本许可协议提供的以任何方式和形式（包括以数字形式）表达之文学、艺术和科学领域的作品，例如：书籍、手册等文字作品；讲课、演讲、讲道及其他同类性质的作品；戏剧或音乐戏剧作品；曲艺作品；舞蹈作品及哑剧作品；配词或不配词的音乐作品；电影作品和以类似摄制电影的方法创作的作品；素描、绘画、书法、建筑、雕塑、雕刻或版画等作品；摄影作品以及以类似摄影的方法创作的作品；杂技艺术作品；实用艺术作品；与地理、地形、建筑或科学有关的插图、地图、设计图、草图及立体的造型作品；以及法律、行政法规规定的其他文学艺术作品。为本许可协议之目的，本协议有关“本作品”的规定适用于表演、录音制品及广播电视节目。\n</li>\n<li>\n<strong>原始作者：</strong>就文学或艺术作品而言，指创作本作品的自然人或依法视为本作品作者的法人或其他组织。为本许可之目的，下述情形下的自然人、法人或其他组织适用本许可有关“原始作者”的规定：（1）就表演而言，指演员、歌唱家、音乐家、舞蹈家和其他表演、演唱、演说、朗诵、演奏、表现或者以其它方式表演文学、艺术作品或民间文学艺术的人员；（2）就录音制品而言，指首次将表演的声音或其他声音录制下来的自然人、法人或其他组织；（3）就广播电视节目而言，指传播广播电视节目的组织；（4）作者身份不明的，指行使作品著作权（除署名权外）的作品原件所有人（比如出版社）。</li>\n<li>\n<strong>演绎作品：</strong>指基于本作品，或基于本作品与其他已存在的作品而创作的作品，例如翻译、改编、编曲或对文学、艺术和科学作品的其他变更，包括以摄制电影的方法对作品的改编，或其他任何对本作品进行改造、转换、或改编后的形式，包含任何可确认为源自原始作品的修改形式。在本许可定义之下构成汇编作品的作品不视为演绎作品。为避免疑义，并为本许可之目的，当演绎对象为音乐作品时，将其依时间序列关系与动态影像配合一致而形成的结果，视为演绎作品。</li>\n<li>\n<strong>汇编作品：</strong>指由于对内容的选择和编排具有独创性而构成智力创作的文学、艺术或科学作品的集合，其中本作品以完整且未经修改的形式和另外一部或多部作品组成集合的整体，而各组成作品本身是分开且独立的，例如百科全书、文选、数据汇编作品，以及本条第1项所列作品之外的作品或者标的。在本许可定义之下构成汇编作品的作品不视为演绎作品（定义如上）。</li>\n<li>\n<strong>许可人：</strong>指根据本许可提供本作品的自然人、法人或者其他组织。</li>\n<li>\n<strong>您：</strong>指以前就本作品没有违反过本许可协议、或曾违反过协议但已获得许可人明示同意、依据本许可行使权利的自然人、法人或者其他组织。</li>\n<li>\n<strong>授权要素：</strong>是指许可人所选择的、并标示在本许可文本标题中的下列基本属性：署名、非商业性使用、相同方式共享。</li>\n<li>\n<strong>发行：</strong>指以出售或者其他权利移转方式向公众提供本作品或者演绎作品的原件或者复制件。</li>\n<li>\n<strong>公开传播：</strong>指公开朗诵本作品以及以任何方式或程序，包括以有线、无线的方式或通过信息网络公开传播本作品的公开朗诵；或向公众提供本作品，使公众可以在自己选定的地点获得本作品；或以任何方式或程序公开表演本作品或向公众传播本作品的表演，包括通过信息网络传播本作品的表演；或以任何方式，包括符号、声音或图像，广播或转播本作品。上述定义包括相关法律规定的“展览”、“表演”、“放映”、“广播”或通过信息网络向公众传播作品等传播方式。</li>\n<li>\n<strong>复制：</strong>指以印刷、复印、拓印、录音、录像、翻录、翻拍等方式制作本作品的复制件。</li>\n<li><strong>人身权：</strong>指相关法律赋予作者对本作品所享有的发表权、署名权、修改权以及保护作品完整权。</li></ol>\n<p><strong>第二条 合理使用</strong> </p>\n<p>本许可无意削减、限制或约束您基于《中华人民共和国著作权法》或其他相关法律有关著作权保护的限制或例外的规定对本作品的合理使用。</p>\n<p><strong>第三条 授权</strong></p>\n<p>根据本许可的条款和条件，许可人在此授予您全球性、免版税、非独占并且在本作品的著作权存续期间内均有效的许可，就本作品行使以下权利：</p>\n<ol type=\"1\">\n<li>\n复制本作品或将本作品收入一个或多个汇编作品中，以及复制汇编作品中收录的本作品；</li>\n<li>\n创作和复制演绎作品，但是任何演绎作品，包括任何形式的翻译作品，均需以合理方式清楚地标示、区分或以其他方法表明原始作品已经被修改或变更。例如，翻译作品可以标明“原作品已由英文翻译为西班牙文”，改编作品可以标明“原作品已作修改”；</li>\n<li>\n发行、公开传播本作品（包括汇编作品中收录的本作品）；\n</li>\n<li>\n发行、公开传播演绎作品。</li>\n</ol>\n<p>\n以上权利可在任何现有的或者以后出现的并为可适用的法律认可的媒体和形式上行使。上述权利包括为在其他媒体和形式上行使权利而必须进行技术性修改的权利。许可人在此保留所有未明示授予的权利，包括但不限于第四条第5项所规定的权利。</p>\n<p><strong>第四条 限制</strong></p>\n<p>第三条的授权须受以下规定的限制： </p>\n<ol type=\"1\">\n<li>\n您在发行或公开传播本作品时，必须遵守本许可协议。在您发行或公开传播的本作品的每一份复制件中，您必须附上一份本许可协议的复制件或本许可协议的网址（Uniform Resource Identifier）。您不得就本作品提出或增加任何条款，从而限制本许可协议或者限制获得本作品的第三方行使本许可协议所赋予的权利。您不得对本作品进行再许可。您必须在您发行或公开传播的每份作品复制件中完整保留所有与本许可协议及免责条款相关的声明。\n在发行或公开传播本作品时，您不得对本作品施加任何技术措施，从而限制从您处获得本作品的第三方行使本许可协议授予的权利。本项（第四条第1项）规定同样适用于收录在汇编作品中的本作品，但并不要求汇编作品中除本作品外的其他作品受本许可协议的约束。在创作汇编作品时，若接到任一许可人的通知，您必须按照其要求，在可行范围内删除汇编作品中根据本协议第四条第4项的要求所作的有关原始作者的身份及其他有关原始作品相关信息的标注。在创作演绎作品时，若接到任一许可人的通知，您必须根据其要求，在可行范围内删除演绎作品中根据第四条第4项的要求所作的有关原始作者的身份及其他有关原始作品的相关信息的标注。<br/>\n</li>\n<li>\n您必须以下述许可条款发行或公开传播演绎作品：（1）本许可协议；（2）与本许可协议具有相同授权要素的后续版本；或者（3）与本许可协议具有相同授权要素的其他司法管辖区的知识共享许可协议或其后续版本（例如：署名-非商业性使用-相同方式共享 3.0 美国）（以上三类协议统称为“可适用的协议”）。在您发行或公开传播的每件演绎作品的复制件中，您必须附上一份“可适用的协议”的复制件或网址。您不得就演绎作品提出或增加任何条款，从而限制“可适用的协议”的规定，或者限制获得演绎作品的第三方行使“可适用的协议”所赋予的权利。在发行或公开传播包含本作品的演绎作品时，您必须在本作品的每一份复制件中完整地保留所有与“可适用的协议”及免责条款相关的声明。在发行或公开传播演绎作品时，您不得对演绎作品施加任何技术措施，从而限制从您处获得演绎作品的第三方行使“可适用的协议”所赋予的权利。本项（第四条第2项）规定同样适用于收录在汇编作品中的演绎作品，但并不要求汇编作品中除基于本作品而创作的演绎作品之外的其他作品受“可适用的协议”的约束。\n</li>\n<li>\n您不得以任何形式行使本协议第三条授予您的权利去谋取或获得商业利益或私人金钱报酬。若交换过程中未涉及任何商业利益或私人金钱报酬，通过数字文件共享方式或其他方式用本作品去交换其他受著作权保护的作品，将不被视为谋取或获得商业利益或私人金钱报酬。</li>\n<li>在发行或公开传播本作品、任何演绎作品或汇编作品时，除非有依据第四条第1项之要求，否则您必须完整保留所有关于本作品的著作权声明，并以适于所使用的媒介或方法的形式提供下述信息：（1）在原始作者的姓名（或笔名）已被提供的情况下，给出该姓名或笔名，或者在原始作者或许可人以许可人的著作权声明或其他合理的方式，指定可以在作品上署名的他方当事人姓名的情况下，指明该他方当事人的名称（“署名人”）；（2）在本作品标题已被提供的情况下，给出本作品的标题；（3）在合理可行的范围内，标明许可人指定需与本作品同时出现的网址，除非该网址没有涉及到本作品的著作权声明或者关于本作品的许可信息；（4）若为演绎作品，则依第三条第2项之要求，必须注明演绎作品中使用的本作品的作者姓名和作品名称（例如，“某作者作品的法语译本”，或“基于某作者作品的电影剧本”）。本项（第四条第4项）要求的对作者姓名和作品名称的指明可采取任何合理方式，但在演绎作品或汇编作品中，如果已经指明了演绎作品的所有作者或汇编作品中所有内含作品的作者，那么对本作品名称和作者姓名的指明须同时出现在任何其他作者姓名出现的地方，并至少与对其他作者的指明一样显著。为避免疑义，本条有关标示作者姓名和作品名称之规定，仅适用于前述署名的用途；除非您事先另行取得原始作者、许可人或署名人的书面同意，否则您不得以明示或者默示的方式主张或暗示，您本人或您对作品的使用与原始作者、许可人或署名人有关联或者已获得上述人士的赞助或者支持。</li>\n<li><p>为避免疑义，针对不同司法管辖区的著作权许可体系作出如下约定：</p>\n<ol type=\"i\">\n<li><strong>权利不能放弃的强制许可体系</strong>。<br/><br/>\n在那些许可人不能放弃通过任何法定的或强制的许可方案收取许可使用费的权利的司法管辖区，许可人保留因您行使本许可协议授予的权利而向您收取许可使用费的专有权；</li>\n<li><strong>权利可以放弃的强制许可体系</strong>。<br/><br/>\n在那些许可人可以放弃通过任何法定的或强制的许可方案收取许可使用费的权利的司法管辖区，许可人放弃因您行使本许可协议授予的权利而向您收取许可使用费的专有权；但若您行使本许可协议授予的权利时未遵守本许可协议第四条第3项有关非商业性使用的规定，则许可人保留向您收取本作品许可使用费的权利；</li>\n<li><strong>自愿许可体系</strong>。<br/><br/>\n在实行著作权自愿许可的司法管辖区，若您行使本许可协议授予的权利时未遵守本许可协议第四条第3项有关非商业性使用的规定，则许可人保留向您收取本作品许可使用费的权利，许可人可以自行或者通过所参加的著作权集体管理组织向您收取本作品的许可使用费。</li>\n</ol>\n</li>\n<li>\n除非其他法律法规另有规定，您在复制、发行或者公开表演本作品，或者复制、发行或者公开表演作为任何演绎作品或汇编作品一部分的本作品时，不得歪曲、损害或者以其他方式损害本作品，导致原始作者的名誉或者荣誉受损。</li>\n</ol>\n<p><strong>第五条 声明、保证和免责</strong></p>\n<p>\n除非本许可的当事人相互以书面的方式做出相反约定，且在相关法律所允许的最大范围内，否则许可人按其现状提供本作品，对本作品不作任何明示或者默示、依照法律或者其他规定的陈述或担保，包括但是不限于任何有关可否商业性使用、是否符合特定的目的、不具有潜在的或者其他缺陷、准确性或者不存在不论能否被发现的错误的担保。有些司法管辖区不允许排除前述默示保证，因此这些排除性规定并不一定适用于您。</p>\n<p><strong>第六条 责任限制</strong></p>\n<p>\n除非属于相关法律所要求的范围，许可人在任何情况下都不对您因本许可或因使用本作品而产生的任何直接损失、间接损失或惩罚性赔偿负责，即使许可人已被告知发生此类损害的可能性。 </p>\n<p><strong>第七条 许可终止</strong> </p>\n<ol type=\"1\">\n<li>\n在您违反本许可协议任何条款时，本许可及其所授予的权利将自动终止。然而，根据本许可从您处获取演绎作品或汇编作品的自然人、法人或者其他组织，如果他们仍完全遵守相关条款，则对他们的许可不会随之终止。即使本许可被终止，第一条、第二条、第五条、第六条、第七条以及第八条仍然有效。</li>\n<li>\n在上述条款及条件的前提下，此处授予的许可在法定著作权保护期限内有效。即便如此，许可人保留依其他许可条款发行本作品及在任何时候停止发行本作品的权利；但是，许可人的上述权利不能被用于撤销本许可或任何其他在本许可条款下授予的或必须授予的许可，除本条第1项指明的终止外，本许可将保持其完全效力。</li>\n</ol>\n<p><strong>第八条 其他事项</strong> </p>\n<ol type=\"1\">\n<li>\n当您发行、公开传播本作品或其汇编作品时，许可人给获得作品的第三方提供本作品的许可，其条款和条件与您所获得的许可相同。</li>\n<li>\n当您发行或公开传播演绎作品时，许可人给获得作品的第三方提供本作品的许可，其条款和条件与您所获得的许可相同。</li>\n<li>\n如因相关法律，本许可的某一条款无效或不能履行，本许可其余条款的有效性和可履行性不受影响。如本许可的当事人未采取进一步措施，此类无效条款应在必要范围内进行最低限度的修改以使其有效和可履行。</li>\n<li>\n除非当事人书面同意并签字放弃某条款和允许某违约行为，本许可的任何条款或规定都不应被视为已被放弃，或被视为允许此违约行为。</li>\n<li>\n本许可构成相关当事人与本授权作品相关的全部协议。除已在此处确认的之外，并不存在任何与本作品相关的谅解备忘录、协议或声明。许可人不受您提出的任何附加规定的约束。未经许可人和您双方书面同意，本许可不得更改。</li>\n</ol>\n \n<blockquote>\n<h3>“知识共享”（Creative Commons）声明</h3>\n<p>\n“知识共享”不是本许可协议的一方，对本作品不作任何相关保证。“知识共享”不对您或任何其他方的任何损失负责，包括但不限于与本许可相关的直接损失和间接损失。虽然有上述两点，但如果“知识共享”已明确标识自己为许可人，它将承担许可人的全部权利和义务。 </p>\n<p>\n除用于向公众表明本作品是依照知识共享公共许可协议（CCPL）授权以外，如未经“知识共享”事先书面同意，任何一方均不得使用“知识共享”（Creative Commons）商标和其他相关商标及标识。任何被允许的使用都必须符合“知识共享”的现行商标使用准则。该准则已在其网站上发布或可应要求随时提供。为避免疑义，本段关于商标的限制性规定不构成本许可之一部分。</p>\n<p>您可以通过<a href=\"https://creativecommons.org/\">https://creativecommons.org/</a>联系“知识共享”。</p>\n</blockquote>\n</div>\n</div>\n</div>\n</body>\n</html>\n","html":"<p><!DOCTYPE html> <br />\n<head> <br />\n</head></p>\n\n<p><body>  </p>\n\n<div id=\"deed\" class=\"yellow\">  \n<div id=\"deed-head\">  \n<div id=\"cc-logo\">  \n<img src=\"https://creativecommons.org/images/deed/cc-logo.jpg\" alt=\"\"/>  \n</div>  \n\n<h1><span>知识共享许可协议法律文本</span></h1>  \n\n<div id=\"deed-license\">  \n<h2>署名-非商业性使用-相同方式共享 3.0中国大陆</h2>  \n</div>  \n\n<p></div>  </p>\n\n<div id=\"deed-main\">  \n<div id=\"deed-main-content\">  \n<img src=\"https://creativecommons.org/images/international/cn.png\" alt=\"\"/>  \n<blockquote>  \n“知识共享”（Creative Commons）不是一家律师事务所也不对外提供法律服务。提供本许可协议文本并不导致“律师—当事人”关系的建立。“知识共享”按其现状（As Is）提供这些信息。“知识共享”对于所提供的信息不提供任何担保，也不对因使用该信息而造成的损失承担损害赔偿责任。\n</blockquote>  \n<h3><em>协议文本</em></h3>  \n<p>本作品（定义如下）的提供是以适用“知识共享公共许可协议”（ 简称“CCPL”或 “许可”）为前提的。本作品受《中华人民共和国著作权法》以及其他可适用法律的保护。对本作品的使用不得超越本许可协议授权的范围。</p>  \n<p>如您行使本许可授予的使用本作品的权利，就表明您接受并同意遵守本许可协议的所有条款。鉴于本许可为合同，在您接受这些条款和规定的前提下，许可人授予您本许可所包括的权利。 </p>  \n<p><strong>第一条 定义</strong> </p>  \n<ol type=\"1\">  \n<li>  \n<strong>本作品：</strong>指根据本许可协议提供的以任何方式和形式（包括以数字形式）表达之文学、艺术和科学领域的作品，例如：书籍、手册等文字作品；讲课、演讲、讲道及其他同类性质的作品；戏剧或音乐戏剧作品；曲艺作品；舞蹈作品及哑剧作品；配词或不配词的音乐作品；电影作品和以类似摄制电影的方法创作的作品；素描、绘画、书法、建筑、雕塑、雕刻或版画等作品；摄影作品以及以类似摄影的方法创作的作品；杂技艺术作品；实用艺术作品；与地理、地形、建筑或科学有关的插图、地图、设计图、草图及立体的造型作品；以及法律、行政法规规定的其他文学艺术作品。为本许可协议之目的，本协议有关“本作品”的规定适用于表演、录音制品及广播电视节目。  \n</li>  \n<li>  \n<strong>原始作者：</strong>就文学或艺术作品而言，指创作本作品的自然人或依法视为本作品作者的法人或其他组织。为本许可之目的，下述情形下的自然人、法人或其他组织适用本许可有关“原始作者”的规定：（1）就表演而言，指演员、歌唱家、音乐家、舞蹈家和其他表演、演唱、演说、朗诵、演奏、表现或者以其它方式表演文学、艺术作品或民间文学艺术的人员；（2）就录音制品而言，指首次将表演的声音或其他声音录制下来的自然人、法人或其他组织；（3）就广播电视节目而言，指传播广播电视节目的组织；（4）作者身份不明的，指行使作品著作权（除署名权外）的作品原件所有人（比如出版社）。</li>  \n<li>  \n<strong>演绎作品：</strong>指基于本作品，或基于本作品与其他已存在的作品而创作的作品，例如翻译、改编、编曲或对文学、艺术和科学作品的其他变更，包括以摄制电影的方法对作品的改编，或其他任何对本作品进行改造、转换、或改编后的形式，包含任何可确认为源自原始作品的修改形式。在本许可定义之下构成汇编作品的作品不视为演绎作品。为避免疑义，并为本许可之目的，当演绎对象为音乐作品时，将其依时间序列关系与动态影像配合一致而形成的结果，视为演绎作品。</li>  \n<li>  \n<strong>汇编作品：</strong>指由于对内容的选择和编排具有独创性而构成智力创作的文学、艺术或科学作品的集合，其中本作品以完整且未经修改的形式和另外一部或多部作品组成集合的整体，而各组成作品本身是分开且独立的，例如百科全书、文选、数据汇编作品，以及本条第1项所列作品之外的作品或者标的。在本许可定义之下构成汇编作品的作品不视为演绎作品（定义如上）。</li>  \n<li>  \n<strong>许可人：</strong>指根据本许可提供本作品的自然人、法人或者其他组织。</li>  \n<li>  \n<strong>您：</strong>指以前就本作品没有违反过本许可协议、或曾违反过协议但已获得许可人明示同意、依据本许可行使权利的自然人、法人或者其他组织。</li>  \n<li>  \n<strong>授权要素：</strong>是指许可人所选择的、并标示在本许可文本标题中的下列基本属性：署名、非商业性使用、相同方式共享。</li>  \n<li>  \n<strong>发行：</strong>指以出售或者其他权利移转方式向公众提供本作品或者演绎作品的原件或者复制件。</li>  \n<li>  \n<strong>公开传播：</strong>指公开朗诵本作品以及以任何方式或程序，包括以有线、无线的方式或通过信息网络公开传播本作品的公开朗诵；或向公众提供本作品，使公众可以在自己选定的地点获得本作品；或以任何方式或程序公开表演本作品或向公众传播本作品的表演，包括通过信息网络传播本作品的表演；或以任何方式，包括符号、声音或图像，广播或转播本作品。上述定义包括相关法律规定的“展览”、“表演”、“放映”、“广播”或通过信息网络向公众传播作品等传播方式。</li>  \n<li>  \n<strong>复制：</strong>指以印刷、复印、拓印、录音、录像、翻录、翻拍等方式制作本作品的复制件。</li>  \n<li><strong>人身权：</strong>指相关法律赋予作者对本作品所享有的发表权、署名权、修改权以及保护作品完整权。</li></ol>  \n<p><strong>第二条 合理使用</strong> </p>  \n<p>本许可无意削减、限制或约束您基于《中华人民共和国著作权法》或其他相关法律有关著作权保护的限制或例外的规定对本作品的合理使用。</p>  \n<p><strong>第三条 授权</strong></p>  \n<p>根据本许可的条款和条件，许可人在此授予您全球性、免版税、非独占并且在本作品的著作权存续期间内均有效的许可，就本作品行使以下权利：</p>  \n<ol type=\"1\">  \n<li>  \n复制本作品或将本作品收入一个或多个汇编作品中，以及复制汇编作品中收录的本作品；</li>\n<li>  \n创作和复制演绎作品，但是任何演绎作品，包括任何形式的翻译作品，均需以合理方式清楚地标示、区分或以其他方法表明原始作品已经被修改或变更。例如，翻译作品可以标明“原作品已由英文翻译为西班牙文”，改编作品可以标明“原作品已作修改”；</li>\n<li>  \n发行、公开传播本作品（包括汇编作品中收录的本作品）；\n</li>  \n<li>  \n发行、公开传播演绎作品。</li>\n</ol>  \n<p>  \n以上权利可在任何现有的或者以后出现的并为可适用的法律认可的媒体和形式上行使。上述权利包括为在其他媒体和形式上行使权利而必须进行技术性修改的权利。许可人在此保留所有未明示授予的权利，包括但不限于第四条第5项所规定的权利。</p>\n<p><strong>第四条 限制</strong></p>  \n<p>第三条的授权须受以下规定的限制： </p>  \n<ol type=\"1\">  \n<li>  \n您在发行或公开传播本作品时，必须遵守本许可协议。在您发行或公开传播的本作品的每一份复制件中，您必须附上一份本许可协议的复制件或本许可协议的网址（Uniform Resource Identifier）。您不得就本作品提出或增加任何条款，从而限制本许可协议或者限制获得本作品的第三方行使本许可协议所赋予的权利。您不得对本作品进行再许可。您必须在您发行或公开传播的每份作品复制件中完整保留所有与本许可协议及免责条款相关的声明。\n在发行或公开传播本作品时，您不得对本作品施加任何技术措施，从而限制从您处获得本作品的第三方行使本许可协议授予的权利。本项（第四条第1项）规定同样适用于收录在汇编作品中的本作品，但并不要求汇编作品中除本作品外的其他作品受本许可协议的约束。在创作汇编作品时，若接到任一许可人的通知，您必须按照其要求，在可行范围内删除汇编作品中根据本协议第四条第4项的要求所作的有关原始作者的身份及其他有关原始作品相关信息的标注。在创作演绎作品时，若接到任一许可人的通知，您必须根据其要求，在可行范围内删除演绎作品中根据第四条第4项的要求所作的有关原始作者的身份及其他有关原始作品的相关信息的标注。<br/>\n</li>  \n<li>  \n您必须以下述许可条款发行或公开传播演绎作品：（1）本许可协议；（2）与本许可协议具有相同授权要素的后续版本；或者（3）与本许可协议具有相同授权要素的其他司法管辖区的知识共享许可协议或其后续版本（例如：署名-非商业性使用-相同方式共享 3.0 美国）（以上三类协议统称为“可适用的协议”）。在您发行或公开传播的每件演绎作品的复制件中，您必须附上一份“可适用的协议”的复制件或网址。您不得就演绎作品提出或增加任何条款，从而限制“可适用的协议”的规定，或者限制获得演绎作品的第三方行使“可适用的协议”所赋予的权利。在发行或公开传播包含本作品的演绎作品时，您必须在本作品的每一份复制件中完整地保留所有与“可适用的协议”及免责条款相关的声明。在发行或公开传播演绎作品时，您不得对演绎作品施加任何技术措施，从而限制从您处获得演绎作品的第三方行使“可适用的协议”所赋予的权利。本项（第四条第2项）规定同样适用于收录在汇编作品中的演绎作品，但并不要求汇编作品中除基于本作品而创作的演绎作品之外的其他作品受“可适用的协议”的约束。\n</li>  \n<li>  \n您不得以任何形式行使本协议第三条授予您的权利去谋取或获得商业利益或私人金钱报酬。若交换过程中未涉及任何商业利益或私人金钱报酬，通过数字文件共享方式或其他方式用本作品去交换其他受著作权保护的作品，将不被视为谋取或获得商业利益或私人金钱报酬。</li>\n<li>在发行或公开传播本作品、任何演绎作品或汇编作品时，除非有依据第四条第1项之要求，否则您必须完整保留所有关于本作品的著作权声明，并以适于所使用的媒介或方法的形式提供下述信息：（1）在原始作者的姓名（或笔名）已被提供的情况下，给出该姓名或笔名，或者在原始作者或许可人以许可人的著作权声明或其他合理的方式，指定可以在作品上署名的他方当事人姓名的情况下，指明该他方当事人的名称（“署名人”）；（2）在本作品标题已被提供的情况下，给出本作品的标题；（3）在合理可行的范围内，标明许可人指定需与本作品同时出现的网址，除非该网址没有涉及到本作品的著作权声明或者关于本作品的许可信息；（4）若为演绎作品，则依第三条第2项之要求，必须注明演绎作品中使用的本作品的作者姓名和作品名称（例如，“某作者作品的法语译本”，或“基于某作者作品的电影剧本”）。本项（第四条第4项）要求的对作者姓名和作品名称的指明可采取任何合理方式，但在演绎作品或汇编作品中，如果已经指明了演绎作品的所有作者或汇编作品中所有内含作品的作者，那么对本作品名称和作者姓名的指明须同时出现在任何其他作者姓名出现的地方，并至少与对其他作者的指明一样显著。为避免疑义，本条有关标示作者姓名和作品名称之规定，仅适用于前述署名的用途；除非您事先另行取得原始作者、许可人或署名人的书面同意，否则您不得以明示或者默示的方式主张或暗示，您本人或您对作品的使用与原始作者、许可人或署名人有关联或者已获得上述人士的赞助或者支持。</li>  \n<li><p>为避免疑义，针对不同司法管辖区的著作权许可体系作出如下约定：</p>  \n<ol type=\"i\">  \n<li><strong>权利不能放弃的强制许可体系</strong>。<br/><br/>  \n在那些许可人不能放弃通过任何法定的或强制的许可方案收取许可使用费的权利的司法管辖区，许可人保留因您行使本许可协议授予的权利而向您收取许可使用费的专有权；</li>\n<li><strong>权利可以放弃的强制许可体系</strong>。<br/><br/>  \n在那些许可人可以放弃通过任何法定的或强制的许可方案收取许可使用费的权利的司法管辖区，许可人放弃因您行使本许可协议授予的权利而向您收取许可使用费的专有权；但若您行使本许可协议授予的权利时未遵守本许可协议第四条第3项有关非商业性使用的规定，则许可人保留向您收取本作品许可使用费的权利；</li>\n<li><strong>自愿许可体系</strong>。<br/><br/>  \n在实行著作权自愿许可的司法管辖区，若您行使本许可协议授予的权利时未遵守本许可协议第四条第3项有关非商业性使用的规定，则许可人保留向您收取本作品许可使用费的权利，许可人可以自行或者通过所参加的著作权集体管理组织向您收取本作品的许可使用费。</li>\n</ol>  \n</li>  \n<li>  \n除非其他法律法规另有规定，您在复制、发行或者公开表演本作品，或者复制、发行或者公开表演作为任何演绎作品或汇编作品一部分的本作品时，不得歪曲、损害或者以其他方式损害本作品，导致原始作者的名誉或者荣誉受损。</li>\n</ol>  \n<p><strong>第五条 声明、保证和免责</strong></p>  \n<p>  \n除非本许可的当事人相互以书面的方式做出相反约定，且在相关法律所允许的最大范围内，否则许可人按其现状提供本作品，对本作品不作任何明示或者默示、依照法律或者其他规定的陈述或担保，包括但是不限于任何有关可否商业性使用、是否符合特定的目的、不具有潜在的或者其他缺陷、准确性或者不存在不论能否被发现的错误的担保。有些司法管辖区不允许排除前述默示保证，因此这些排除性规定并不一定适用于您。</p>\n<p><strong>第六条 责任限制</strong></p>  \n<p>  \n除非属于相关法律所要求的范围，许可人在任何情况下都不对您因本许可或因使用本作品而产生的任何直接损失、间接损失或惩罚性赔偿负责，即使许可人已被告知发生此类损害的可能性。 </p>\n<p><strong>第七条 许可终止</strong> </p>  \n<ol type=\"1\">  \n<li>  \n在您违反本许可协议任何条款时，本许可及其所授予的权利将自动终止。然而，根据本许可从您处获取演绎作品或汇编作品的自然人、法人或者其他组织，如果他们仍完全遵守相关条款，则对他们的许可不会随之终止。即使本许可被终止，第一条、第二条、第五条、第六条、第七条以及第八条仍然有效。</li>\n<li>  \n在上述条款及条件的前提下，此处授予的许可在法定著作权保护期限内有效。即便如此，许可人保留依其他许可条款发行本作品及在任何时候停止发行本作品的权利；但是，许可人的上述权利不能被用于撤销本许可或任何其他在本许可条款下授予的或必须授予的许可，除本条第1项指明的终止外，本许可将保持其完全效力。</li>\n</ol>  \n<p><strong>第八条 其他事项</strong> </p>  \n<ol type=\"1\">  \n<li>  \n当您发行、公开传播本作品或其汇编作品时，许可人给获得作品的第三方提供本作品的许可，其条款和条件与您所获得的许可相同。</li>\n<li>  \n当您发行或公开传播演绎作品时，许可人给获得作品的第三方提供本作品的许可，其条款和条件与您所获得的许可相同。</li>\n<li>  \n如因相关法律，本许可的某一条款无效或不能履行，本许可其余条款的有效性和可履行性不受影响。如本许可的当事人未采取进一步措施，此类无效条款应在必要范围内进行最低限度的修改以使其有效和可履行。</li>\n<li>  \n除非当事人书面同意并签字放弃某条款和允许某违约行为，本许可的任何条款或规定都不应被视为已被放弃，或被视为允许此违约行为。</li>\n<li>  \n本许可构成相关当事人与本授权作品相关的全部协议。除已在此处确认的之外，并不存在任何与本作品相关的谅解备忘录、协议或声明。许可人不受您提出的任何附加规定的约束。未经许可人和您双方书面同意，本许可不得更改。</li>\n</ol>\n\n<blockquote>  \n<h3>“知识共享”（Creative Commons）声明</h3>  \n<p>  \n“知识共享”不是本许可协议的一方，对本作品不作任何相关保证。“知识共享”不对您或任何其他方的任何损失负责，包括但不限于与本许可相关的直接损失和间接损失。虽然有上述两点，但如果“知识共享”已明确标识自己为许可人，它将承担许可人的全部权利和义务。 </p>\n<p>  \n除用于向公众表明本作品是依照知识共享公共许可协议（CCPL）授权以外，如未经“知识共享”事先书面同意，任何一方均不得使用“知识共享”（Creative Commons）商标和其他相关商标及标识。任何被允许的使用都必须符合“知识共享”的现行商标使用准则。该准则已在其网站上发布或可应要求随时提供。为避免疑义，本段关于商标的限制性规定不构成本许可之一部分。</p>\n<p>您可以通过<a href=\"https://creativecommons.org/\">https://creativecommons.org/</a>联系“知识共享”。</p>  \n</blockquote>  \n</div>  \n\n<p></div> <br />\n</div> <br />\n</body> <br />\n</html></p>","image":null,"featured":0,"page":1,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436000322874,"created_by":1,"updated_at":1436000591680,"updated_by":1,"published_at":1436000591681,"published_by":1},{"id":3,"uuid":"ff178416-1067-4db5-a83f-1d43b1d795ee","title":"作者小像","slug":"myself","markdown":"##对我感兴趣\n* 请在博文中留言即可\n* 坐标：天津\n\n##谁教过我\n* 南开大学 计算机技术（信息安全方向） 工程硕士\n* 首都师范大学 计算机科学与技术（师范） 理学学士。\n\n##谁正雇佣我\n* 无 -- Gap Year 中\n##谁曾雇佣我\n* 深圳某只大企鹅 - 正式员工\n* Singapore Management University - Research Assistant\n* 天津某只大企鹅 - 实习生\n\n##我喜欢啥\n* 周游世界\n* 研究中医、气功，内家武术\n","html":"<h2 id=\"\">对我感兴趣</h2>\n\n<ul>\n<li>请在博文中留言即可</li>\n<li>坐标：天津</li>\n</ul>\n\n<h2 id=\"\">谁教过我</h2>\n\n<ul>\n<li>南开大学 计算机技术（信息安全方向） 工程硕士</li>\n<li>首都师范大学 计算机科学与技术（师范） 理学学士。</li>\n</ul>\n\n<h2 id=\"\">谁正雇佣我</h2>\n\n<ul>\n<li>无 -- Gap Year 中</li>\n</ul>\n\n<h2 id=\"\">谁曾雇佣我</h2>\n\n<ul>\n<li>深圳某只大企鹅 - 正式员工</li>\n<li>Singapore Management University - Research Assistant</li>\n<li>天津某只大企鹅 - 实习生</li>\n</ul>\n\n<h2 id=\"\">我喜欢啥</h2>\n\n<ul>\n<li>周游世界</li>\n<li>研究中医、气功，内家武术</li>\n</ul>","image":null,"featured":0,"page":1,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436007130100,"created_by":1,"updated_at":1460097461022,"updated_by":1,"published_at":1436007298877,"published_by":1},{"id":4,"uuid":"c9513dcf-ff70-4b3c-9fd2-3bd0f4d2f14c","title":"如何选择方向","slug":"xuan-ze-fang-xiang","markdown":"\n方向已定，多说无益。\n\n1. 如果成功了，那这个方向就是方向。\n2. 如果失败了，那又是新的规划。\n3. 当时选择的原则是，尽量让自己的过去为自己的未来产生加分的作用。\n\n---","html":"<p>方向已定，多说无益。</p>\n\n<ol>\n<li>如果成功了，那这个方向就是方向。  </li>\n<li>如果失败了，那又是新的规划。  </li>\n<li>当时选择的原则是，尽量让自己的过去为自己的未来产生加分的作用。</li>\n</ol>\n\n<hr />","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436011855035,"created_by":1,"updated_at":1436238098878,"updated_by":1,"published_at":1436011866493,"published_by":1},{"id":5,"uuid":"726a1f93-dd76-4fea-a554-546cfa246dca","title":"如何把握调研报告","slug":"diao-yan-bao-gao","markdown":"因为是历史文章搬运，所以去掉已经无用的东西，简要概括。\n\n##情况\n* 有三个月时间。\n* 有机会和老师交流，中途调整。\n* 交的是**调查**，即求全不求深。\n##入手\n###如何写中文报告\n当然是用手写。\n###如何写英文报告\n以英文写英文，参考英文论文原句进行转义。\n###切入方向\n* 中文博士论文\n* 英文论文\n* 老师历史\n##相关书籍\n[0day安全：软件漏洞分析技术](http://e.jd.com/30149952.html)\n##穿墙方式\n* Goagent，我一般不用。\n* 花钱，我一般用[CroLAX](https://gocrolax.com/One/index)，现在ShadowSocks比Socks更稳定一些。 \n\n---\n","html":"<p>因为是历史文章搬运，所以去掉已经无用的东西，简要概括。</p>\n\n<h2 id=\"\">情况</h2>\n\n<ul>\n<li>有三个月时间。</li>\n<li>有机会和老师交流，中途调整。</li>\n<li>交的是<strong>调查</strong>，即求全不求深。</li>\n</ul>\n\n<h2 id=\"\">入手</h2>\n\n<h3 id=\"\">如何写中文报告</h3>\n\n<p>当然是用手写。</p>\n\n<h3 id=\"\">如何写英文报告</h3>\n\n<p>以英文写英文，参考英文论文原句进行转义。</p>\n\n<h3 id=\"\">切入方向</h3>\n\n<ul>\n<li>中文博士论文</li>\n<li>英文论文</li>\n<li>老师历史</li>\n</ul>\n\n<h2 id=\"\">相关书籍</h2>\n\n<p><a href=\"http://e.jd.com/30149952.html\">0day安全：软件漏洞分析技术</a></p>\n\n<h2 id=\"\">穿墙方式</h2>\n\n<ul>\n<li>Goagent，我一般不用。</li>\n<li>花钱，我一般用<a href=\"https://gocrolax.com/One/index\">CroLAX</a>，现在ShadowSocks比Socks更稳定一些。 </li>\n</ul>\n\n<hr />","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436075920223,"created_by":1,"updated_at":1436238088190,"updated_by":1,"published_at":1436077201208,"published_by":1},{"id":6,"uuid":"3bd2d1b3-1949-4b22-be5d-86944420b659","title":"如何读论文","slug":"du-lun-wen","markdown":"今天上午有点时间，就模拟了一把读论文，首先是打开[Google Scholar](https://scholar.google.com.sg/)，搜索<strong><em>software vulnerability</em></strong>，得到的搜索结果是这样的。\n\n![](/content/images/2015/07/4.JPG)\n\n很明显可以看到，第一篇的引用率高高在上，并且还是1998年的，所以应该错不了，所以先看这篇。打开之后发现是一篇普渡大学（Purdue University）的博士论文，先看一眼目录。\n![](/content/images/2015/07/5.JPG)\n![](/content/images/2015/07/6.JPG)\n\n可以看到它有对基本术语Error，Faults，Failure的辨析，有对软件漏洞的解释，有对分类的描述，并且相关工作描述了对漏洞的各种分类法，一看这就是我们需要的东西，并且如果相关工作写这些东西，那么此人做的应该也是分类的工作。从目录的情况也不难理解为何引用如此之多，这很明显是基础性的工作。\n\n然后我立刻跳转到Software Vulnerability，文章直接给出了现存的软件漏洞的三种定义，并且每种定义都给出了明确的出处。\n![](/content/images/2015/07/7.JPG)\n![](/content/images/2015/07/8.JPG)\n![](/content/images/2015/07/9.JPG)\n\n考虑到论文的总结性质，引用率，以及1977年之后才有超大规模集成电路，那么如果继续追溯去读这三篇给出定义的文章，基本上就可以认为读到源头了，以后这就是本领域的基础。\n\n这时我想到你貌似发过一篇笔记的照片给我，我去翻了翻，突然发现你总结的就是这三个定义的中文翻译版，所以你应该感到高兴，你走在了***正确的道路上***。\n\n在后续的章节中，文章还重点介绍了Taxonomy 和 Classification 和定义本身的各种辨析，介绍了漏洞的各种分类，没细看，但的确有利于修炼内功和打基础。\n\n接着顺着Scholar的结果往下看，我又分别扫了两眼以下几篇，扫的时候只溜了溜摘要和几句Introduction\n![](/content/images/2015/07/10.JPG)\n![](/content/images/2015/07/11.JPG)\n![](/content/images/2015/07/12.JPG)\n\n第一篇是一个调查，Scholar上面有几篇类似的，貌似是从软工的角度去写的，关注的是life cycles，第二篇提出了一种工具，侧重于检测，目测是静态分析工具，Scholar上也有一些做检测的，第三篇摘要给出了一个软件漏洞的简要定义，然后说漏洞分析分为静态分析和动态分析两种，然后它自己鼓捣出了一个动态的给大伙看看。\n\n懒得再看更多了，总共用了一个小时左右吧，基本上的直觉是（直觉不一定是对的）：\n\n1. 软件漏洞大致有分析（analysis），检测（detection），测试（testing）等等分支，另外有几篇调查性质的没细看它们在做什么，如何归类。\n2. 那篇博士论文非常重要，辨析了众多术语，以及不同概念之间的细微差异，是内功。\n3. 动态分析和静态分析是工具，在文章中看到了几个熟悉的工具名字。\n\n这就是我从零开始了解一个东西的过程，如果让我继续做下去，我会考虑这么几点：\n\n1. 是不是分析，检测，测试等等都让我调研，还是只调研其中某个方面。\n2. 顺着scholar的搜索结果统计，看看有多少分析的，多少检测的等等，做个数量分类；大致看看每篇文章的参考文献，看看他们相关工作引用的文章，和Scholar的结果做个对照，整体把握一下文章数量。\n2. 在找到的分析和检测的文章中，顺着参考文献找下去，统计下常用的静态和动态的工具，统计下他们互相说的对方的优缺点。这已经可以构成不少调研报告的内容。\n3. 抽空细读那篇有各种定义和分类辨析的论文，打打基础。\n\n如果需要本文展示的文章，请点击[这里](http://pan.baidu.com/s/1e4zd8)下载。\n\n---\n","html":"<p>今天上午有点时间，就模拟了一把读论文，首先是打开<a href=\"https://scholar.google.com.sg/\">Google Scholar</a>，搜索<strong><em>software vulnerability</em></strong>，得到的搜索结果是这样的。</p>\n\n<p><img src=\"/content/images/2015/07/4.JPG\" alt=\"\" /></p>\n\n<p>很明显可以看到，第一篇的引用率高高在上，并且还是1998年的，所以应该错不了，所以先看这篇。打开之后发现是一篇普渡大学（Purdue University）的博士论文，先看一眼目录。\n<img src=\"/content/images/2015/07/5.JPG\" alt=\"\" />\n<img src=\"/content/images/2015/07/6.JPG\" alt=\"\" /></p>\n\n<p>可以看到它有对基本术语Error，Faults，Failure的辨析，有对软件漏洞的解释，有对分类的描述，并且相关工作描述了对漏洞的各种分类法，一看这就是我们需要的东西，并且如果相关工作写这些东西，那么此人做的应该也是分类的工作。从目录的情况也不难理解为何引用如此之多，这很明显是基础性的工作。</p>\n\n<p>然后我立刻跳转到Software Vulnerability，文章直接给出了现存的软件漏洞的三种定义，并且每种定义都给出了明确的出处。\n<img src=\"/content/images/2015/07/7.JPG\" alt=\"\" />\n<img src=\"/content/images/2015/07/8.JPG\" alt=\"\" />\n<img src=\"/content/images/2015/07/9.JPG\" alt=\"\" /></p>\n\n<p>考虑到论文的总结性质，引用率，以及1977年之后才有超大规模集成电路，那么如果继续追溯去读这三篇给出定义的文章，基本上就可以认为读到源头了，以后这就是本领域的基础。</p>\n\n<p>这时我想到你貌似发过一篇笔记的照片给我，我去翻了翻，突然发现你总结的就是这三个定义的中文翻译版，所以你应该感到高兴，你走在了<strong><em>正确的道路上</em></strong>。</p>\n\n<p>在后续的章节中，文章还重点介绍了Taxonomy 和 Classification 和定义本身的各种辨析，介绍了漏洞的各种分类，没细看，但的确有利于修炼内功和打基础。</p>\n\n<p>接着顺着Scholar的结果往下看，我又分别扫了两眼以下几篇，扫的时候只溜了溜摘要和几句Introduction\n<img src=\"/content/images/2015/07/10.JPG\" alt=\"\" />\n<img src=\"/content/images/2015/07/11.JPG\" alt=\"\" />\n<img src=\"/content/images/2015/07/12.JPG\" alt=\"\" /></p>\n\n<p>第一篇是一个调查，Scholar上面有几篇类似的，貌似是从软工的角度去写的，关注的是life cycles，第二篇提出了一种工具，侧重于检测，目测是静态分析工具，Scholar上也有一些做检测的，第三篇摘要给出了一个软件漏洞的简要定义，然后说漏洞分析分为静态分析和动态分析两种，然后它自己鼓捣出了一个动态的给大伙看看。</p>\n\n<p>懒得再看更多了，总共用了一个小时左右吧，基本上的直觉是（直觉不一定是对的）：</p>\n\n<ol>\n<li>软件漏洞大致有分析（analysis），检测（detection），测试（testing）等等分支，另外有几篇调查性质的没细看它们在做什么，如何归类。  </li>\n<li>那篇博士论文非常重要，辨析了众多术语，以及不同概念之间的细微差异，是内功。  </li>\n<li>动态分析和静态分析是工具，在文章中看到了几个熟悉的工具名字。</li>\n</ol>\n\n<p>这就是我从零开始了解一个东西的过程，如果让我继续做下去，我会考虑这么几点：</p>\n\n<ol>\n<li>是不是分析，检测，测试等等都让我调研，还是只调研其中某个方面。  </li>\n<li>顺着scholar的搜索结果统计，看看有多少分析的，多少检测的等等，做个数量分类；大致看看每篇文章的参考文献，看看他们相关工作引用的文章，和Scholar的结果做个对照，整体把握一下文章数量。  </li>\n<li>在找到的分析和检测的文章中，顺着参考文献找下去，统计下常用的静态和动态的工具，统计下他们互相说的对方的优缺点。这已经可以构成不少调研报告的内容。  </li>\n<li>抽空细读那篇有各种定义和分类辨析的论文，打打基础。</li>\n</ol>\n\n<p>如果需要本文展示的文章，请点击<a href=\"http://pan.baidu.com/s/1e4zd8\">这里</a>下载。</p>\n\n<hr />","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436077949624,"created_by":1,"updated_at":1436238110497,"updated_by":1,"published_at":1436083918953,"published_by":1},{"id":7,"uuid":"f7339cad-c6c6-4782-95f0-25e62f5bc63a","title":"基于 Ghost 搭建个人博客-本地搭建","slug":"bo-ke-xian-xia","markdown":"<br />\n![height=\"300px\" width=\"400px\"](/content/images/2015/07/ghost.png)\n<br />\n\n[Ghost](https://ghost.org/) 是一套基于 Node.js 构建的开源博客平台，十分简洁易用，博客后台默认采用 Markdown 语法书写文章，十分方便。\n\nGhost 是由 WordPress UI 部门前主管 John O’Nolan 和 WordPress 开发人员 Hannah Wolfe 创立的，与 WordPress 相比较，它最大的优势就是完全从头写起，它仅仅是一个博客，不像 WordPress，已经慢慢变得更像一个 CMS。\n\n本文主要介绍如何在个人电脑上搭建一个 Ghost 博客，供自己测试和感受，下一篇文章将介绍如何在线上环境配置 Ghost，本文所使用的环境为 Ubuntu 14.04 LTS x86_64。\n\n先安装一下基本的编译环境\n\n    sudo apt-get update\n    sudo apt-get install build-essential zip vim\n\n\n##安装 Node.js\nNode.js 目前有 0.10.x 和 0.12.x 两种版本，按照官方文档的说法，更推荐使用 0.10.x 版本，本文使用的是 Node.js 0.10.36，下载地址是 https://nodejs.org/dist/v0.10.36 下载源码后，cd 到一个你觉得合适的目录。\n<pre><code lang=\"shell\">\ntar xvzf node-v0.10.36-linux-x64.tar.gz\ncd node-v0.10.36\n./configure\nmake\nsudo make install\n</code>\n</pre>\n安装完之后，使用`node-v`命令查看一下版本号，如果能正确显示，则表明安装没有问题。\n##安装 npm\nnpm 推荐使用 2.5.0 版本，所以还需要单独再装一下 npm。下载地址是 https://github.com/npm/npm/releases/tag/v2.5.0\n下载完毕后，同样 cd 到一个合适的目录。\n\n    tar xvzf v2.5.0.tar.gz\n    cd npm-2.5.0\n    ./configure\n    make\n    sudo make install\n安装完毕后，同样使用`npm-v`命令查看一下版本，如果正确显示，则表明没有问题。\n\n##安装 Ghost\n在/var/www目录下新建一个目录存放 Ghost，我将其命名为 ghost\n\n    mkdir /var/www/ghost\n下载最新版的 Ghost 源文件，截至成稿，最新版为 0.6.3，Ghost 目前有中文版，中文集成版，英文原版三种。中文版和英文版在安装过程中需要联网下载一些东西，而这个过程在国内可能被墙导致失败，中文集成版则由于集成了这些下载的东西，于是跳过了安装步骤，可以直接使用。\n\n本文使用的是中文集成版，下载地址是：http://dl.ghostchina.com/Ghost-0.6.3-zh-full.zip\n\n下载完毕后，cd 到刚才创建的 ghost 目录，解压缩即可。\n\n    cd /var/www/ghost\n    unzip /path/to/Ghost-0.6.3-zh-full.zip\n\n如果你使用的是中文版或者英文原版，此时需要执行安装命令。如果你使用的是中文集成版，则跳过此步骤\n\n    sudo npm install --production\n现在，Ghost 已经可以运行了，执行\n\n    npm start \n此时，Ghost 已经在开发模式下运行，默认端口是 2368，打开浏览器，输入 127.0.0.1:2368 即可看到博客的欢迎界面。输入 127.0.0.1:2368/ghost 可以进入博客后台。\n\n\n\n##使用\n1. 目前为止，Ghost 已经可以运行了，可以下载一些别人的主题，放在 `/content/themes/`目录下，之后重启 Ghost，在后台的设置页面对主题进行选择。\n\n2. 重启的方式很简单，因为是在终端运行，所以`ctrl + c`即可停止，之后再次 `npm start`即可重新运行。\n\n3. 如果你有基本的前端知识，可以对已有的主题或下载的主题进行细微的调整，使之更符合自己的习惯。\n\n4. Ghost 有不同的运行模式。除去前文默认使用的开发模式，还可以使用命令 `npm start --production`让其以生产模式运行。根据 Ghost 官方的说法，如果你在线上环境使用 Ghost，那么应该让其运行在生产模式（production）。如果让我来做一个比喻的话，那么我理解 Ghost 开发模式和生产模式的区别，就类似编译程序时 Debug 版和 Release 版的区别。\n\n5. 开发模式和生产模式生成不同的数据库，配置也不通用，所以你分别用两种模式运行，会发现自己需要配置两遍。如果真的上线，只配置和使用生产模式即可。\n\n---\n","html":"<p><br /> <br />\n<img src=\"/content/images/2015/07/ghost.png\" alt=\"height=\"300px\" width=\"400px\"\" />\n<br /></p>\n\n<p><a href=\"https://ghost.org/\">Ghost</a> 是一套基于 Node.js 构建的开源博客平台，十分简洁易用，博客后台默认采用 Markdown 语法书写文章，十分方便。</p>\n\n<p>Ghost 是由 WordPress UI 部门前主管 John O’Nolan 和 WordPress 开发人员 Hannah Wolfe 创立的，与 WordPress 相比较，它最大的优势就是完全从头写起，它仅仅是一个博客，不像 WordPress，已经慢慢变得更像一个 CMS。</p>\n\n<p>本文主要介绍如何在个人电脑上搭建一个 Ghost 博客，供自己测试和感受，下一篇文章将介绍如何在线上环境配置 Ghost，本文所使用的环境为 Ubuntu 14.04 LTS x86_64。</p>\n\n<p>先安装一下基本的编译环境</p>\n\n<pre><code>sudo apt-get update\nsudo apt-get install build-essential zip vim\n</code></pre>\n\n<h2 id=\"nodejs\">安装 Node.js</h2>\n\n<p>Node.js 目前有 0.10.x 和 0.12.x 两种版本，按照官方文档的说法，更推荐使用 0.10.x 版本，本文使用的是 Node.js 0.10.36，下载地址是 <a href=\"https://nodejs.org/dist/v0.10.36\">https://nodejs.org/dist/v0.10.36</a> 下载源码后，cd 到一个你觉得合适的目录。  </p>\n\n<pre><code lang=\"shell\">\ntar xvzf node-v0.10.36-linux-x64.tar.gz\ncd node-v0.10.36\n./configure\nmake\nsudo make install\n</code>\n</pre>\n\n<p>安装完之后，使用<code>node-v</code>命令查看一下版本号，如果能正确显示，则表明安装没有问题。</p>\n\n<h2 id=\"npm\">安装 npm</h2>\n\n<p>npm 推荐使用 2.5.0 版本，所以还需要单独再装一下 npm。下载地址是 <a href=\"https://github.com/npm/npm/releases/tag/v2.5.0\">https://github.com/npm/npm/releases/tag/v2.5.0</a> <br />\n下载完毕后，同样 cd 到一个合适的目录。</p>\n\n<pre><code>tar xvzf v2.5.0.tar.gz\ncd npm-2.5.0\n./configure\nmake\nsudo make install\n</code></pre>\n\n<p>安装完毕后，同样使用<code>npm-v</code>命令查看一下版本，如果正确显示，则表明没有问题。</p>\n\n<h2 id=\"ghost\">安装 Ghost</h2>\n\n<p>在/var/www目录下新建一个目录存放 Ghost，我将其命名为 ghost</p>\n\n<pre><code>mkdir /var/www/ghost\n</code></pre>\n\n<p>下载最新版的 Ghost 源文件，截至成稿，最新版为 0.6.3，Ghost 目前有中文版，中文集成版，英文原版三种。中文版和英文版在安装过程中需要联网下载一些东西，而这个过程在国内可能被墙导致失败，中文集成版则由于集成了这些下载的东西，于是跳过了安装步骤，可以直接使用。</p>\n\n<p>本文使用的是中文集成版，下载地址是：<a href=\"http://dl.ghostchina.com/Ghost-0.6.3-zh-full.zip\">http://dl.ghostchina.com/Ghost-0.6.3-zh-full.zip</a></p>\n\n<p>下载完毕后，cd 到刚才创建的 ghost 目录，解压缩即可。</p>\n\n<pre><code>cd /var/www/ghost\nunzip /path/to/Ghost-0.6.3-zh-full.zip\n</code></pre>\n\n<p>如果你使用的是中文版或者英文原版，此时需要执行安装命令。如果你使用的是中文集成版，则跳过此步骤</p>\n\n<pre><code>sudo npm install --production\n</code></pre>\n\n<p>现在，Ghost 已经可以运行了，执行</p>\n\n<pre><code>npm start \n</code></pre>\n\n<p>此时，Ghost 已经在开发模式下运行，默认端口是 2368，打开浏览器，输入 127.0.0.1:2368 即可看到博客的欢迎界面。输入 127.0.0.1:2368/ghost 可以进入博客后台。</p>\n\n<h2 id=\"\">使用</h2>\n\n<ol>\n<li><p>目前为止，Ghost 已经可以运行了，可以下载一些别人的主题，放在 <code>/content/themes/</code>目录下，之后重启 Ghost，在后台的设置页面对主题进行选择。</p></li>\n<li><p>重启的方式很简单，因为是在终端运行，所以<code>ctrl + c</code>即可停止，之后再次 <code>npm start</code>即可重新运行。</p></li>\n<li><p>如果你有基本的前端知识，可以对已有的主题或下载的主题进行细微的调整，使之更符合自己的习惯。</p></li>\n<li><p>Ghost 有不同的运行模式。除去前文默认使用的开发模式，还可以使用命令 <code>npm start --production</code>让其以生产模式运行。根据 Ghost 官方的说法，如果你在线上环境使用 Ghost，那么应该让其运行在生产模式（production）。如果让我来做一个比喻的话，那么我理解 Ghost 开发模式和生产模式的区别，就类似编译程序时 Debug 版和 Release 版的区别。</p></li>\n<li><p>开发模式和生产模式生成不同的数据库，配置也不通用，所以你分别用两种模式运行，会发现自己需要配置两遍。如果真的上线，只配置和使用生产模式即可。</p></li>\n</ol>\n\n<hr />","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436158273228,"created_by":1,"updated_at":1449367400934,"updated_by":1,"published_at":1436162018982,"published_by":1},{"id":8,"uuid":"438d3461-094a-4990-8619-692fae2f7d1a","title":"基于 Ghost 搭建个人博客-部署上线","slug":"bo-ke-xian-shang","markdown":"<br />\n![height=\"300\" width=\"400\"](/content/images/2015/07/ghost.png)\n<br />\n\n前文介绍了如何在本机上搭建一个 Ghost 博客来进行体验，本文介绍如何在线上环境，即 VPS 上配置 Ghost，使其真正成为别人可以访问和浏览的个人网站。\n\n本文的内容分为：\n\n1. 域名注册\n2. DNS 解析设置\n3. VPS 购买\n4. 线上配置和运行 Ghost\n\n##域名注册\n想要拥有一个个人网站，或者说个人博客，注册一个域名是十分重要的。当然，你可以不用域名，让大家直接用 IP 地址来访问，但这样很明显用户体验不够友好，所以首先介绍一下如何注册一个有个性的域名。\n\n域名的来源多种多样，有免费的，有花钱的，据说 GitHub 可以提供一年免费的 me 域名，我没有尝试过。也有不少人将个人网站以 GitHub Page 的形式建在 GitHub 上，这种解决方案不是本文的讨论范围。\n\n域名一般来讲都是花钱的，除去主流的常见顶级域名（比如本站用的 .com），现在还有 .info、.io、.tips、.xyz、.today 等等各种不常见的域名。一般注册域名需要找域名注册商，国内和国外均有。国外比较有名的老牌注册商有 [GoDaddy](https://www.godaddy.com)，[Namecheap](https://www.namecheap.com/) 等等。\n\n本站域名是在 GoDaddy 进行注册的，注册 GoDaddy 域名需要在它的官方网站注册一个账户，另外需要一张可以国际支付的信用卡，没有信用卡的话，可以选择淘宝 GoDaddy 代购服务。\n\n首先是在 GoDaddy 官方网站对自己想注册的域名进行搜索，看看是否已经被人注册过，如果没有的话，那么恭喜你，你可以顺利地成为这个域名的主人了。之后就是按照流程进行支付，如果选择代购的话，代购者会在支付过后将域名过户（Push）给你。\n\n域名注册完毕后，在个人账户下可以看到自己拥有的域名并对其进行管理。\n<br />\n![](/content/images/2015/07/godaddy1.JPG)\n<br />\n点击 manage 后，比较重要的就是对 Nameservers 的设置，GoDaddy 有提供 DNS 解析的服务，但 GoDaddy 的 Nameservers 在国内不是很稳定，所以一般会将其改成国内的 DNSPod 提供的名字解析服务器，本站的设置为\n<br />\n![](/content/images/2015/07/godaddy2.JPG)\n<br />\n\n至于这两个 Nameservers 的地址是如何来的，下节会说明。\n\n##DNS 解析设置\n在国内的话，一般是推荐使用 [DNSPod](https://www.dnspod.cn/) 的解析服务，这个服务是免费的。在官方网站注册一个账号（或用 QQ 号登陆）后，即可以添加想解析的域名。\n\n添加域名后，DNSPod 会自动生成两个默认的 NS 记录，指定了域名解析服务器。然后将上文域名注册商那里的 NS 记录，改成 DNSPod 提供两个服务器即可。\n<br />\n![](/content/images/2015/07/dnspod1.JPG)\n<br />\n\n之后，就是在 DNSPod 上添加 A 记录，将域名解析到自己购买的 VPS 的 IP 地址上。域名注册商那边的 NS 更改，以及 DNSPod 这边的解析记录添加和更改，都需要等待一定的时间才能生效，本人的等待时间在半个小时左右。\n\n##VPS 购买\nVPS 是指（Virtual Private Server），购买的是服务器上开出的一个虚拟机，租用独立的服务器价格较高，对于个人网站这种应用，购买一个 VPS 就已经足够了。\n比较有名的 VPS 提供商有 [Amazon EC2](http://aws.amazon.com/ec2)， [Linode](https://www.linode.com/) 和 [DigitalOcean](https://www.digitalocean.com/) 等等，目前，DigitalOcean 首月使用是免费的，但需要一张可以国际支付的信用卡。因为本人目前没有信用卡，所以目前使用淘宝购买的日本 VPS，根据目前的体验，速度和稳定性都很好，只是不像 Linode 和 DigitalOcean 那样可以自己管理。\n\n国内也有 BAT 等公司提供云主机服务，但国内上线网站需要进行备案，十分麻烦，除非有特别需要，否则不推荐使用国内的主机。\n\n总之，购买 VPS 可以通过信用卡自己注册和购买，也可以淘宝代购。\n\n##线上配置和运行 Ghost\n购买 VPS 后，会得到一个可用的服务器和 IP 地址，将域名和 IP 地址做好解析之后，一切准备工作就完成了。接下来我们可以在 VPS 上上线自己的网站了。\n\n如果使用 Windows 系统的话，可以使用 SecureCRT 远程登陆 VPS，Linux 系统的话，直接使用 ssh 命令即可，如果登陆不了，要确认一下 VPS 开放的是否是 22 端口，以及是否开启了 ssh 服务。\n\n基本的安装流程同上一篇的本地搭建是一样的。首先是给 VPS 安装基本的编译环境，以及 Vim 等工具，然后安装 Node.js 和 npm，最后安装 Ghost，需要注意的是，由于 VPS 本身在墙外，所以三个版本用哪个都无所谓了，根据个人喜好即可。安装完毕后，可以用`npm start`启动开发模式或者用`npm start --production`启动产品模式，能看到正常启动即可。但这时是无法通过域名或 IP 进行访问的，因为在配置文件 *config.js* 中，只监听了本机。可以暂时停止 Ghost，继续往下配置。\n\n###让 Ghost 一直运行\n作为网站，很明显它应该始终处于运行状态，也就是我们应该做些配置，让 Ghost 进程可以一直在后台保持运行。方法有很多种。官方文档中提供了 Forever、PM2、Supervisor、初始化脚本等方法，文档中推荐的是初始化脚本法。本文介绍的是 PM2 法。\n首先 cd 到 Ghost 的安装目录\n\n    cd /var/www/ghost\n然后，安装 PM2，并设置环境变量为***产品模式***，以 ***index.js*** 为入口启动，进程命名为 ***Ghost***\n\n    sudo npm install pm2 -g\n    NODE_ENV=production pm2 start index.js --name \"Ghost\"\n做完之后，PM2 将会守护 Ghost 博客的在线运行状态。可以通过`pm2 l`（是字母l）查看当前进程状态，可以通过`pm2 restart Ghost`重启博客程序（比如做了修改主题的工作后，可以用这个命令重启看效果）。\n\n最后，让 PM2 开机自动运行 Ghost 博客\n\n    pm2 startup Ubuntu\n    pm2 save\n\n###配置 Nginx 反向代理\n在线上环境，一般会在 Ghost 前端配置一个 Nginx 做反向代理。首先是安装和启动 Nginx：\n\n    sudo apt-get install nginx\n    sudo service nginx start\n然后，在`/etc/nginx/conf.d/`下创建一个配置文件`ghost`.\n\n<pre><code>\nvim /etc/nginx/conf.d/ghost.conf\nserver {\n    listen 0.0.0.0:80;\n    server_name xxx.com;\n    access_log /var/log/nginx/xxx.com.log;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header HOST $http_host;\n        proxy_set_header X-NginX-Proxy true;\n\n        proxy_pass http://127.0.0.1:2368;\n        proxy_redirect off;\n    }\n}\n</code></pre>\n其中，`server_name` 改成你自己的域名，之后将配置文件软链接到`site-enabled`下，并重启 Nginx\n\n    ln -s /etc/nginx/sites-available/ghost /etc/nginx/sites-enabled/ghost\n    /etc/init.d/nginx restart\n此时，Nginx 会监听所有 80 端口的请求，并将其 pass 给 2368 端口的 Ghost 服务程序，此时，打开浏览器，输入自己的域名，应该可以看到博客的欢迎界面了。\n\n---\n","html":"<p><br /> <br />\n<img src=\"/content/images/2015/07/ghost.png\" alt=\"height=\"300\" width=\"400\"\" />\n<br /></p>\n\n<p>前文介绍了如何在本机上搭建一个 Ghost 博客来进行体验，本文介绍如何在线上环境，即 VPS 上配置 Ghost，使其真正成为别人可以访问和浏览的个人网站。</p>\n\n<p>本文的内容分为：</p>\n\n<ol>\n<li>域名注册  </li>\n<li>DNS 解析设置  </li>\n<li>VPS 购买  </li>\n<li>线上配置和运行 Ghost</li>\n</ol>\n\n<h2 id=\"\">域名注册</h2>\n\n<p>想要拥有一个个人网站，或者说个人博客，注册一个域名是十分重要的。当然，你可以不用域名，让大家直接用 IP 地址来访问，但这样很明显用户体验不够友好，所以首先介绍一下如何注册一个有个性的域名。</p>\n\n<p>域名的来源多种多样，有免费的，有花钱的，据说 GitHub 可以提供一年免费的 me 域名，我没有尝试过。也有不少人将个人网站以 GitHub Page 的形式建在 GitHub 上，这种解决方案不是本文的讨论范围。</p>\n\n<p>域名一般来讲都是花钱的，除去主流的常见顶级域名（比如本站用的 .com），现在还有 .info、.io、.tips、.xyz、.today 等等各种不常见的域名。一般注册域名需要找域名注册商，国内和国外均有。国外比较有名的老牌注册商有 <a href=\"https://www.godaddy.com\">GoDaddy</a>，<a href=\"https://www.namecheap.com/\">Namecheap</a> 等等。</p>\n\n<p>本站域名是在 GoDaddy 进行注册的，注册 GoDaddy 域名需要在它的官方网站注册一个账户，另外需要一张可以国际支付的信用卡，没有信用卡的话，可以选择淘宝 GoDaddy 代购服务。</p>\n\n<p>首先是在 GoDaddy 官方网站对自己想注册的域名进行搜索，看看是否已经被人注册过，如果没有的话，那么恭喜你，你可以顺利地成为这个域名的主人了。之后就是按照流程进行支付，如果选择代购的话，代购者会在支付过后将域名过户（Push）给你。</p>\n\n<p>域名注册完毕后，在个人账户下可以看到自己拥有的域名并对其进行管理。\n<br /> <br />\n<img src=\"/content/images/2015/07/godaddy1.JPG\" alt=\"\" />\n<br /> <br />\n点击 manage 后，比较重要的就是对 Nameservers 的设置，GoDaddy 有提供 DNS 解析的服务，但 GoDaddy 的 Nameservers 在国内不是很稳定，所以一般会将其改成国内的 DNSPod 提供的名字解析服务器，本站的设置为\n<br /> <br />\n<img src=\"/content/images/2015/07/godaddy2.JPG\" alt=\"\" />\n<br /></p>\n\n<p>至于这两个 Nameservers 的地址是如何来的，下节会说明。</p>\n\n<h2 id=\"dns\">DNS 解析设置</h2>\n\n<p>在国内的话，一般是推荐使用 <a href=\"https://www.dnspod.cn/\">DNSPod</a> 的解析服务，这个服务是免费的。在官方网站注册一个账号（或用 QQ 号登陆）后，即可以添加想解析的域名。</p>\n\n<p>添加域名后，DNSPod 会自动生成两个默认的 NS 记录，指定了域名解析服务器。然后将上文域名注册商那里的 NS 记录，改成 DNSPod 提供两个服务器即可。\n<br /> <br />\n<img src=\"/content/images/2015/07/dnspod1.JPG\" alt=\"\" />\n<br /></p>\n\n<p>之后，就是在 DNSPod 上添加 A 记录，将域名解析到自己购买的 VPS 的 IP 地址上。域名注册商那边的 NS 更改，以及 DNSPod 这边的解析记录添加和更改，都需要等待一定的时间才能生效，本人的等待时间在半个小时左右。</p>\n\n<h2 id=\"vps\">VPS 购买</h2>\n\n<p>VPS 是指（Virtual Private Server），购买的是服务器上开出的一个虚拟机，租用独立的服务器价格较高，对于个人网站这种应用，购买一个 VPS 就已经足够了。 <br />\n比较有名的 VPS 提供商有 <a href=\"http://aws.amazon.com/ec2\">Amazon EC2</a>， <a href=\"https://www.linode.com/\">Linode</a> 和 <a href=\"https://www.digitalocean.com/\">DigitalOcean</a> 等等，目前，DigitalOcean 首月使用是免费的，但需要一张可以国际支付的信用卡。因为本人目前没有信用卡，所以目前使用淘宝购买的日本 VPS，根据目前的体验，速度和稳定性都很好，只是不像 Linode 和 DigitalOcean 那样可以自己管理。</p>\n\n<p>国内也有 BAT 等公司提供云主机服务，但国内上线网站需要进行备案，十分麻烦，除非有特别需要，否则不推荐使用国内的主机。</p>\n\n<p>总之，购买 VPS 可以通过信用卡自己注册和购买，也可以淘宝代购。</p>\n\n<h2 id=\"ghost\">线上配置和运行 Ghost</h2>\n\n<p>购买 VPS 后，会得到一个可用的服务器和 IP 地址，将域名和 IP 地址做好解析之后，一切准备工作就完成了。接下来我们可以在 VPS 上上线自己的网站了。</p>\n\n<p>如果使用 Windows 系统的话，可以使用 SecureCRT 远程登陆 VPS，Linux 系统的话，直接使用 ssh 命令即可，如果登陆不了，要确认一下 VPS 开放的是否是 22 端口，以及是否开启了 ssh 服务。</p>\n\n<p>基本的安装流程同上一篇的本地搭建是一样的。首先是给 VPS 安装基本的编译环境，以及 Vim 等工具，然后安装 Node.js 和 npm，最后安装 Ghost，需要注意的是，由于 VPS 本身在墙外，所以三个版本用哪个都无所谓了，根据个人喜好即可。安装完毕后，可以用<code>npm start</code>启动开发模式或者用<code>npm start --production</code>启动产品模式，能看到正常启动即可。但这时是无法通过域名或 IP 进行访问的，因为在配置文件 <em>config.js</em> 中，只监听了本机。可以暂时停止 Ghost，继续往下配置。</p>\n\n<h3 id=\"ghost\">让 Ghost 一直运行</h3>\n\n<p>作为网站，很明显它应该始终处于运行状态，也就是我们应该做些配置，让 Ghost 进程可以一直在后台保持运行。方法有很多种。官方文档中提供了 Forever、PM2、Supervisor、初始化脚本等方法，文档中推荐的是初始化脚本法。本文介绍的是 PM2 法。\n首先 cd 到 Ghost 的安装目录</p>\n\n<pre><code>cd /var/www/ghost\n</code></pre>\n\n<p>然后，安装 PM2，并设置环境变量为<strong><em>产品模式</em></strong>，以 <strong><em>index.js</em></strong> 为入口启动，进程命名为 <strong><em>Ghost</em></strong></p>\n\n<pre><code>sudo npm install pm2 -g\nNODE_ENV=production pm2 start index.js --name \"Ghost\"\n</code></pre>\n\n<p>做完之后，PM2 将会守护 Ghost 博客的在线运行状态。可以通过<code>pm2 l</code>（是字母l）查看当前进程状态，可以通过<code>pm2 restart Ghost</code>重启博客程序（比如做了修改主题的工作后，可以用这个命令重启看效果）。</p>\n\n<p>最后，让 PM2 开机自动运行 Ghost 博客</p>\n\n<pre><code>pm2 startup Ubuntu\npm2 save\n</code></pre>\n\n<h3 id=\"nginx\">配置 Nginx 反向代理</h3>\n\n<p>在线上环境，一般会在 Ghost 前端配置一个 Nginx 做反向代理。首先是安装和启动 Nginx：</p>\n\n<pre><code>sudo apt-get install nginx\nsudo service nginx start\n</code></pre>\n\n<p>然后，在<code>/etc/nginx/conf.d/</code>下创建一个配置文件<code>ghost</code>.</p>\n\n<pre><code>\nvim /etc/nginx/conf.d/ghost.conf\nserver {\n    listen 0.0.0.0:80;\n    server_name xxx.com;\n    access_log /var/log/nginx/xxx.com.log;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header HOST $http_host;\n        proxy_set_header X-NginX-Proxy true;\n\n        proxy_pass http://127.0.0.1:2368;\n        proxy_redirect off;\n    }\n}\n</code></pre>\n\n<p>其中，<code>server_name</code> 改成你自己的域名，之后将配置文件软链接到<code>site-enabled</code>下，并重启 Nginx</p>\n\n<pre><code>ln -s /etc/nginx/sites-available/ghost /etc/nginx/sites-enabled/ghost\n/etc/init.d/nginx restart\n</code></pre>\n\n<p>此时，Nginx 会监听所有 80 端口的请求，并将其 pass 给 2368 端口的 Ghost 服务程序，此时，打开浏览器，输入自己的域名，应该可以看到博客的欢迎界面了。</p>\n\n<hr />","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436180081937,"created_by":1,"updated_at":1449296267236,"updated_by":1,"published_at":1436180040000,"published_by":1},{"id":9,"uuid":"07285e07-cd87-4053-a959-f0a9eca231b5","title":"基于 Ghost 搭建个人博客-设置和管理","slug":"bo-ke-guan-li","markdown":"<br />\n![height=\"300px\" width=\"400px\"](/content/images/2015/07/ghost.png)\n<br />\n\n上篇文章介绍了如何在 VPS 上搭建个人网站，当可以在浏览器中通过输入域名访问到自己的 Ghost 博客时，基本的搭建工作就完成了，下一步就是对博客本身的配置和管理。\n\n本文主要包括以下内容：\n\n1. 使用 git 对博客进行版本管理\n2. 为博客添加评论系统\n3. 为博客添加分享功能\n4. 为博客添加上一篇和下一篇导航链接\n\n##使用 git 对博客进行版本控制\n由于自己的博客是在不断地修改和更新的，为了防止 VPS 意外挂掉等等问题，最好能够非常及时地保存一份博客代码的副本，同时为了防止自己修改配置的时候把博客玩儿坏，也需要能够对上一个版本进行及时地恢复。很显然，GitHub 或者 SVN 都能提供这样的功能。这里介绍如何使用 GitHub 托管博客代码。\n\n第一步：注册 [GitHub](https://github.com/) 账号\n\n第二步：在 VPS 上安装 git，并和 GitHub 账号进行绑定\n\n安装 git\n\n    sudo apt-get install git\n名称和邮箱绑定\n\n    git config --global user.name \"your name\"  \n    git config --global user.email \"your email\"\n`your name`填你 GitHub 的用户名，`your email`填你注册 GitHub 的邮箱。\n\n设置 SSH 密钥\n\n    ssh-keygen -t rsa -C \"your_email@example.com\"\n这里的邮箱填刚才的邮箱就可以，生成过程中会有一步让你输入`ssh passphrase`，你可以选择输入一个密码，也可以选择直接回车跳过，区别就是最终生成的私钥是否加密，直接回车跳过的话，私钥是不加密的。执行完毕后，在`/root/.ssh`目录下，会生成 id\\_rsa.pub 和 id\\_rsa 两个文件，分别是公钥和私钥。打开 id\\_rsa.pub，将其中的内容复制下来。\n\n在浏览器上登陆 GitHub 账户，在 settings 菜单中选择 SSH Keys，选择 Add SSH Key，标题起一个自己能辨认的，将刚才复制的公钥内容粘贴进去，从图片可以看到，我已经为自己的电脑创建了一个 Key，现在正在为自己的 VPS 添加另一个。\n<br />\n![](/content/images/2015/07/1.JPG)\n<br />\n密钥添加完毕后，在 VPS 上测试是否可以连接成功。\n\n    ssh -T git@github.com  \n第一次连接你需要输入一个 yes，之后看到下面的欢迎信息，则表示成功。\n<br />\n![](/content/images/2015/07/2.JPG)\n<br />\n![](/content/images/2015/07/3.JPG)\n<br />\n\n可以和 GitHub 进行连接后，在自己的 GitHub 上点击`+ New repository`创建一个新的仓库。\n<br />\n![](/content/images/2015/07/repo.JPG)\n<br />\n在创建界面，为自己的仓库起一个名字，描述可以随便写写，由于我们已经把博客建好了，所以并不需要初始化，一会直接把本地代码 push 上去就可以。点击 `Create repository` 后，可以先不管它了。\n\n这时回到 VPS 上，前文已述，Ghost 目录位于 `/var/www/`下，名字是`ghost`，下面执行以下操作使用 git 管理博客代码。\n\n第一步是初始化\n\n    cd /var/www/ghost\n    git init\n第二步是将本地仓库和 GitHub 上的远程仓库进行绑定\n\n    git remote add origin git@github.com:yourname/MyBlog.git  \n其中`yourname`改成你的用户名，也就是上个图片中 Owner 的名字，`MyBlog.git`中的`MyBlog`改成你的仓库名字，如果你也叫 MyBlog，那当然就不用改了。\n\n绑定完毕后，将所有源文件添加跟踪并提交到本地库。\n\n    git add .\n    git commit -m \"message\"\n`message`是一个描述信息，随意写，比如 fist commit 之类的，你修改了什么之类的，是给自己看的。注意这里的 commit 是提交到 VPS 上的本地库了，而并非 GitHub 上，最后\n\n    git push origin master\n将本次修改，提交到 GitHub 上，这样就结束了。在以后的使用中，如果修改了博客代码或者写了新文章，可以用`git status`查看状态，它会显示哪些文件未跟踪，哪些文件修改了。可以用`git add .`或者`git add filename`将新文件加入管理，然后使用`git commit -m \"message\"`和`git push origin master`将修改提交到 GitHub。当然这种只在 master 分支上开发的方法不是特别正规，但个人博客这种项目感觉也就无所谓了。\n\n## 为博客添加 DISQUS 评论系统\n添加评论系统的话，不同的主题会不一样，对于本站使用的主题来说，只需要把在 [disqus](https://disqus.com/) 官网注册的 short_name 填写在 comment.hbs 里面就可以了，之后把 post.hbs 里面的 comment 注释取消即可生效。\n\n如果你用了自定义主题，那么请参考相关主题的说明。对于默认的主题，可以参考官方给出的[说明文档](http://support.ghost.org/add-disqus-to-my-ghost-blog/)。\n\n## 为博客添加分享功能\n如果想添加分享功能的话，这个也和主题有关，本站使用的主题没有分享的代码，所以需要自己添加，有的主题是自带的，所以就可以跳过了。\n\n方法是使用[百度分享](http://share.baidu.com/code)，根据自己的喜好获得代码之后，写用 Markdown 写博客的时候，直接粘贴在编辑器里面就可以。\n\n另外也可以将代码粘贴到主题目录下的 post.hbs 里面，放在 `</article>`和`{{/post}}`之间。\n##为博客添加上一篇和下一篇导航\n有的主题里面，post.hbs 文件里面把代码都写好了，本身自带，如果没有的话，可以把下面这段代码放到上面那个分享代码的后面，或者前面，这个顺序完全看个人喜好。\n<pre><code>\n&lt;nav&gt;\n    &lt;div&gt;\n        {{#if next}}\n        前一篇：&lt;a href=\"{{next.url}}\"&gt;{{{next.title}}}&lt;/a&gt;\n        {{/if}}\n    &lt;/div&gt;\n    &lt;div&gt;\n        {{#if previous}}\n        后一篇：&lt;a href=\"{{previous.url}}\"&gt;{{{previous.title}}}&lt;/a&gt;\n        {{/if}}\n    &lt;/div&gt;\n&lt;/nav&gt;\n</code></pre>","html":"<p><br /> <br />\n<img src=\"/content/images/2015/07/ghost.png\" alt=\"height=\"300px\" width=\"400px\"\" />\n<br /></p>\n\n<p>上篇文章介绍了如何在 VPS 上搭建个人网站，当可以在浏览器中通过输入域名访问到自己的 Ghost 博客时，基本的搭建工作就完成了，下一步就是对博客本身的配置和管理。</p>\n\n<p>本文主要包括以下内容：</p>\n\n<ol>\n<li>使用 git 对博客进行版本管理  </li>\n<li>为博客添加评论系统  </li>\n<li>为博客添加分享功能  </li>\n<li>为博客添加上一篇和下一篇导航链接</li>\n</ol>\n\n<h2 id=\"git\">使用 git 对博客进行版本控制</h2>\n\n<p>由于自己的博客是在不断地修改和更新的，为了防止 VPS 意外挂掉等等问题，最好能够非常及时地保存一份博客代码的副本，同时为了防止自己修改配置的时候把博客玩儿坏，也需要能够对上一个版本进行及时地恢复。很显然，GitHub 或者 SVN 都能提供这样的功能。这里介绍如何使用 GitHub 托管博客代码。</p>\n\n<p>第一步：注册 <a href=\"https://github.com/\">GitHub</a> 账号</p>\n\n<p>第二步：在 VPS 上安装 git，并和 GitHub 账号进行绑定</p>\n\n<p>安装 git</p>\n\n<pre><code>sudo apt-get install git\n</code></pre>\n\n<p>名称和邮箱绑定</p>\n\n<pre><code>git config --global user.name \"your name\"  \ngit config --global user.email \"your email\"\n</code></pre>\n\n<p><code>your name</code>填你 GitHub 的用户名，<code>your email</code>填你注册 GitHub 的邮箱。</p>\n\n<p>设置 SSH 密钥</p>\n\n<pre><code>ssh-keygen -t rsa -C \"your_email@example.com\"\n</code></pre>\n\n<p>这里的邮箱填刚才的邮箱就可以，生成过程中会有一步让你输入<code>ssh passphrase</code>，你可以选择输入一个密码，也可以选择直接回车跳过，区别就是最终生成的私钥是否加密，直接回车跳过的话，私钥是不加密的。执行完毕后，在<code>/root/.ssh</code>目录下，会生成 id_rsa.pub 和 id_rsa 两个文件，分别是公钥和私钥。打开 id_rsa.pub，将其中的内容复制下来。</p>\n\n<p>在浏览器上登陆 GitHub 账户，在 settings 菜单中选择 SSH Keys，选择 Add SSH Key，标题起一个自己能辨认的，将刚才复制的公钥内容粘贴进去，从图片可以看到，我已经为自己的电脑创建了一个 Key，现在正在为自己的 VPS 添加另一个。\n<br /> <br />\n<img src=\"/content/images/2015/07/1.JPG\" alt=\"\" />\n<br /> <br />\n密钥添加完毕后，在 VPS 上测试是否可以连接成功。</p>\n\n<pre><code>ssh -T git@github.com  \n</code></pre>\n\n<p>第一次连接你需要输入一个 yes，之后看到下面的欢迎信息，则表示成功。\n<br /> <br />\n<img src=\"/content/images/2015/07/2.JPG\" alt=\"\" />\n<br /> <br />\n<img src=\"/content/images/2015/07/3.JPG\" alt=\"\" />\n<br /></p>\n\n<p>可以和 GitHub 进行连接后，在自己的 GitHub 上点击<code>+ New repository</code>创建一个新的仓库。\n<br /> <br />\n<img src=\"/content/images/2015/07/repo.JPG\" alt=\"\" />\n<br /> <br />\n在创建界面，为自己的仓库起一个名字，描述可以随便写写，由于我们已经把博客建好了，所以并不需要初始化，一会直接把本地代码 push 上去就可以。点击 <code>Create repository</code> 后，可以先不管它了。</p>\n\n<p>这时回到 VPS 上，前文已述，Ghost 目录位于 <code>/var/www/</code>下，名字是<code>ghost</code>，下面执行以下操作使用 git 管理博客代码。</p>\n\n<p>第一步是初始化</p>\n\n<pre><code>cd /var/www/ghost\ngit init\n</code></pre>\n\n<p>第二步是将本地仓库和 GitHub 上的远程仓库进行绑定</p>\n\n<pre><code>git remote add origin git@github.com:yourname/MyBlog.git  \n</code></pre>\n\n<p>其中<code>yourname</code>改成你的用户名，也就是上个图片中 Owner 的名字，<code>MyBlog.git</code>中的<code>MyBlog</code>改成你的仓库名字，如果你也叫 MyBlog，那当然就不用改了。</p>\n\n<p>绑定完毕后，将所有源文件添加跟踪并提交到本地库。</p>\n\n<pre><code>git add .\ngit commit -m \"message\"\n</code></pre>\n\n<p><code>message</code>是一个描述信息，随意写，比如 fist commit 之类的，你修改了什么之类的，是给自己看的。注意这里的 commit 是提交到 VPS 上的本地库了，而并非 GitHub 上，最后</p>\n\n<pre><code>git push origin master\n</code></pre>\n\n<p>将本次修改，提交到 GitHub 上，这样就结束了。在以后的使用中，如果修改了博客代码或者写了新文章，可以用<code>git status</code>查看状态，它会显示哪些文件未跟踪，哪些文件修改了。可以用<code>git add .</code>或者<code>git add filename</code>将新文件加入管理，然后使用<code>git commit -m \"message\"</code>和<code>git push origin master</code>将修改提交到 GitHub。当然这种只在 master 分支上开发的方法不是特别正规，但个人博客这种项目感觉也就无所谓了。</p>\n\n<h2 id=\"disqus\">为博客添加 DISQUS 评论系统</h2>\n\n<p>添加评论系统的话，不同的主题会不一样，对于本站使用的主题来说，只需要把在 <a href=\"https://disqus.com/\">disqus</a> 官网注册的 short_name 填写在 comment.hbs 里面就可以了，之后把 post.hbs 里面的 comment 注释取消即可生效。</p>\n\n<p>如果你用了自定义主题，那么请参考相关主题的说明。对于默认的主题，可以参考官方给出的<a href=\"http://support.ghost.org/add-disqus-to-my-ghost-blog/\">说明文档</a>。</p>\n\n<h2 id=\"\">为博客添加分享功能</h2>\n\n<p>如果想添加分享功能的话，这个也和主题有关，本站使用的主题没有分享的代码，所以需要自己添加，有的主题是自带的，所以就可以跳过了。</p>\n\n<p>方法是使用<a href=\"http://share.baidu.com/code\">百度分享</a>，根据自己的喜好获得代码之后，写用 Markdown 写博客的时候，直接粘贴在编辑器里面就可以。</p>\n\n<p>另外也可以将代码粘贴到主题目录下的 post.hbs 里面，放在 <code>&lt;/article&gt;</code>和<code>{{/post}}</code>之间。</p>\n\n<h2 id=\"\">为博客添加上一篇和下一篇导航</h2>\n\n<p>有的主题里面，post.hbs 文件里面把代码都写好了，本身自带，如果没有的话，可以把下面这段代码放到上面那个分享代码的后面，或者前面，这个顺序完全看个人喜好。</p>\n\n<pre><code>\n&lt;nav&gt;\n    &lt;div&gt;\n        {{#if next}}\n        前一篇：&lt;a href=\"{{next.url}}\"&gt;{{{next.title}}}&lt;/a&gt;\n        {{/if}}\n    &lt;/div&gt;\n    &lt;div&gt;\n        {{#if previous}}\n        后一篇：&lt;a href=\"{{previous.url}}\"&gt;{{{previous.title}}}&lt;/a&gt;\n        {{/if}}\n    &lt;/div&gt;\n&lt;/nav&gt;\n</code></pre>","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436231821399,"created_by":1,"updated_at":1436411569136,"updated_by":1,"published_at":1436238631614,"published_by":1},{"id":10,"uuid":"e76b7803-1baa-4ab1-978d-6c6c09993936","title":"在 VPS 上架设 Shadowsocks 服务跳出大墙","slug":"fan-qiang","markdown":"前文主要讲述了如何在 VPS 上搭建 Ghost 博客，在购买了 VPS 后，除去架设网站这种主要用途，还会产生一个副产物，就是可以利用 VPS 给自己架设跳墙代理，拥有一个自己专用的跳墙线路，方便科学上网。\n\n##VPS 端配置\n###安装 Shadowsocks 库\n\n    apt-get install python-pip\n    pip install shadowsocks\n###创建配置文件\n\n    vim /etc/shadowsocks.json\n将以下代码写入文件中\n<pre><code>\n    \"server\":\"VPS IP\",\n    \"server_port\":8388,\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"your password\",\n    \"timeout\":300,\n    \"method\":\"aes-256-cfb\",\n    \"fast_open\": false,\n    \"workers\": 1\n</code></pre>\n其中，`server`填写你 VPS 的 IP 地址，`server_port`可以用默认的 8388，也可以改成一个其他非周知端口。`password`填写自己想用的密码。\n### 让 Shadowsocks 后台运行\n\n    apt-get install python-m2crypto supervisor\n    vim /etc/supervisor/conf.d/shadowsocks.conf\n将以下代码写入配置文件\n<pre><code>\n[program:shadowsocks]\ncommand=ssserver -c /etc/shadowsocks.json\nautorestart=true\nuser=nobody\n</code></pre>\n在` /etc/default/supervisor`最后加入一行`ulimit -n 51200`，执行\n\n    service supervisor start\n    supervisorctl reload\n如果以后修改了 Shadowsocks 的配置，可以通过\n\n    supervisorctl restart shadowsocks\n对服务进行重启。\n\n##客户端配置\n客户端直接下载小飞机即可，Linux 和 Windows 以及 Mac 都有各自的版本，Windows 的下载地址是 https://github.com/clowwindy/shadowsocks-csharp\n\n下载完毕后，填写 VPS 的 IP 和刚才自己设置的密码即可连接，剩下的就是配合火狐或者 Chrome 的 switch 插件了，亲测速度稳定，好使。\n\n---","html":"<p>前文主要讲述了如何在 VPS 上搭建 Ghost 博客，在购买了 VPS 后，除去架设网站这种主要用途，还会产生一个副产物，就是可以利用 VPS 给自己架设跳墙代理，拥有一个自己专用的跳墙线路，方便科学上网。</p>\n\n<h2 id=\"vps\">VPS 端配置</h2>\n\n<h3 id=\"shadowsocks\">安装 Shadowsocks 库</h3>\n\n<pre><code>apt-get install python-pip\npip install shadowsocks\n</code></pre>\n\n<h3 id=\"\">创建配置文件</h3>\n\n<pre><code>vim /etc/shadowsocks.json\n</code></pre>\n\n<p>将以下代码写入文件中</p>\n\n<pre><code>\n    \"server\":\"VPS IP\",\n    \"server_port\":8388,\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"your password\",\n    \"timeout\":300,\n    \"method\":\"aes-256-cfb\",\n    \"fast_open\": false,\n    \"workers\": 1\n</code></pre>\n\n<p>其中，<code>server</code>填写你 VPS 的 IP 地址，<code>server_port</code>可以用默认的 8388，也可以改成一个其他非周知端口。<code>password</code>填写自己想用的密码。</p>\n\n<h3 id=\"shadowsocks\">让 Shadowsocks 后台运行</h3>\n\n<pre><code>apt-get install python-m2crypto supervisor\nvim /etc/supervisor/conf.d/shadowsocks.conf\n</code></pre>\n\n<p>将以下代码写入配置文件</p>\n\n<pre><code>\n[program:shadowsocks]\ncommand=ssserver -c /etc/shadowsocks.json\nautorestart=true\nuser=nobody\n</code></pre>\n\n<p>在<code>/etc/default/supervisor</code>最后加入一行<code>ulimit -n 51200</code>，执行</p>\n\n<pre><code>service supervisor start\nsupervisorctl reload\n</code></pre>\n\n<p>如果以后修改了 Shadowsocks 的配置，可以通过</p>\n\n<pre><code>supervisorctl restart shadowsocks\n</code></pre>\n\n<p>对服务进行重启。</p>\n\n<h2 id=\"\">客户端配置</h2>\n\n<p>客户端直接下载小飞机即可，Linux 和 Windows 以及 Mac 都有各自的版本，Windows 的下载地址是 <a href=\"https://github.com/clowwindy/shadowsocks-csharp\">https://github.com/clowwindy/shadowsocks-csharp</a></p>\n\n<p>下载完毕后，填写 VPS 的 IP 和刚才自己设置的密码即可连接，剩下的就是配合火狐或者 Chrome 的 switch 插件了，亲测速度稳定，好使。</p>\n\n<hr />","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436243579021,"created_by":1,"updated_at":1436244839730,"updated_by":1,"published_at":1436244822937,"published_by":1},{"id":11,"uuid":"8254a51e-4d55-4da2-a7d8-fd4703e40671","title":"安全和软工会议列表","slug":"hui-yi-lie-biao","markdown":"##信息安全类期刊和会议\n###A 类期刊\n* TDSC <a href=\"http://www.computer.org/portal/web/tdsc\">IEEE Transactions on Dependable and Secure Computing</a>\n* TIFS <a href=\"http://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=10206\">IEEE Transactions on Information Forensics and Security</a></td>\n* Journal of Cryptology 密码学，可略过\n\n###B 类期刊\n\n* TISSEC <a href=\"http://tissec.acm.org/\">ACM Transactions on Information and System Security</a> 官网首页有篇文章\n* <a href=\"http://www.journals.elsevier.com/computers-and-security/\">Computers & Security</a> 2015 Volume 51 有文章\n* <a href=\"http://link.springer.com/journal/10623\">Designs, Codes and Cryptography</a> 密码学，不靠谱\n* JCS <a href=\"http://iospress.metapress.com/content/103167/\">Journal of Computer Security</a> Volume 22 Issue 3 有文章\n   \n\n\n###C 类期刊\n* CLSR <a href=\"http://www.journals.elsevier.com/computer-law-and-security-review/\">Computer Law and Security Reports</a> 法律法规，不靠谱\n* <a href=\"http://jis.eurasipjournals.com/\">EURASIP Journal on Information Security</a>\n* <a href=\"http://digital-library.theiet.org/content/journals/iet-ifs\">IET Information Security</a>\n* IMCS <a href=\"http://www.emeraldinsight.com/loi/imcs\">Information Management & Computer Security</a>\n* ISTR <a href=\"http://www.sciencedirect.com/science/journal/13634127\">Information Security Technical Report</a> 首页有文章\n* IJISP <a href=\"http://www.igi-global.com/journal/international-journal-information-security-privacy/1096\">International Journal of Information Security and Privacy</a>\n* IJICS <a href=\"http://www.inderscience.com/jhome.php?jcode=ijics\">International Journal of Information and Computer Security</a>\n* SCN <a href=\"http://onlinelibrary.wiley.com/journal/10.1002/(ISSN)1939-0122\">Security and Communication Networks</a>\n\n###A 类会议\n* CCS <a href=\"http://www.sigsac.org/ccs/CCS2014/\">ACM Conference on Computer and Communications Security</a>\n* CRYPTO <a href=\"\">International Cryptology Conference</a>  密码不看\n* EUROCRYPT  <a href=\"\">European Cryptology Conference</a> 密码不看\n* S & P <a href=\"http://www.ieee-security.org/TC/SP2014/\">IEEE Symposium on Security and Privacy</a>\n* USENIX Security <a href=\"https://www.usenix.org/conference/usenixsecurity14\">Usenix Security Symposium</a>\n###B 类会议\n* ACSAC <a href=\"https://www.acsac.org/2014/\">Annual Computer Security Applications \nConference</a>\n* ASIACRYPT <a href=\"http://des.cse.nsysu.edu.tw/asiacrypt2014/\">Annual International Conference on the Theory and Application of Cryptology and Information Security</a>\n* ESORICS <a href=\"http://esorics2014.pwr.wroc.pl/\">European Symposiumon Research in Computer Security</a>\n* FSE <a href=\"https://fse22.gatech.edu/\">Fast Software Encryption</a>\n* NDSS <a href=\"http://www.internetsociety.org/events/ndss-symposium-2014\">ISOC Network and Distributed System Security Symposium</a>\n* CSFW <a href=\"http://cscw.acm.org/2014/\">IEEE Computer Security Foundations Workshop</a>\n* RAID <a href=\"http://www.raid2014.eu/\">International Symposium on Recent Advances in Intrusion Detection</a>\n* PKC <a href=\"http://www.iacr.org/workshops/pkc2014/\">International Workshop on Practice and Theory in Public Key Cryptography</a>\n* DSN <a href=\"http://2014.dsn.org/\">The International Conference on Dependable Systems and Networks</a>\n* TCC <a href=\"http://www.iacr.org/workshops/tcc2014/call_for_papers.html\">Theory of Cryptography Conference</a> 不看\n* SRDS <a href=\"http://www-nishio.ist.osaka-u.ac.jp/conf/srds2014/\">IEEE International Symposium on Reliable Distributed Systems</a>\n* CHES <a href=\"http://www.chesworkshop.org/ches2014/start.php\">Workshop on Cryptographic Hardware and Embedded Systems</a> 不看\n\n###C 类会议\n* WiSec <a href=\"http://www.sigsac.org/wisec/WiSec2014/\">ACM Conference on Security and Privacy \nin Wireless and Mobile Networks</a>\n* ACM MM&SEC <a href=\"http://www.ihmmsec.org/index.php/ihmmsec2014\">ACM Multimedia and Security Workshop</a>\n* SACMAT <a href=\"http://www.sacmat.org/2014/index.php\">ACM Symposium on Access Control Models\nand Technologies</a>\n* ASIACCS <a href=\"http://asiaccs2014.nict.go.jp/\">ACM Symposium on Information, Computer\nand Communications Security</a>\n* DRM <a href=\"\">ACM Workshop on Digital Rights Management</a> 不沾边\n* ACNS <a href=\"http://acns2014.epfl.ch/\">Applied Cryptography and Network Security</a> 感觉不靠谱\n* ACISP <a href=\"https://ssl.informatics.uow.edu.au/acisp2014/\">Australasia Conference on Information Security and Privacy</a>\n* DFRWS <a href=\"http://www.dfrws.org/2014/\">Digital Forensic Research Workshop</a>\n* FC <a href=\"http://fc14.ifca.ai/\">Financial Cryptography and Data Security</a> 感觉不靠谱\n* DIMVA <a href=\"http://dimva2014.isg.rhul.ac.uk/\">Detection of Intrusions and Malware & Vulnerability Assessment</a> 名字真耐人，必须看\n* SEC <a href=\"http://www.ifipsec.org/\">IFIP International Information Security Conference</a>\n* IFIP WG 11.9 <a href=\"http://www.ifip119.org/Conferences/\">IFIP WG 11.9 International Conference on Digital Forensics</a>\n* ISC <a href=\"http://isc14.ie.cuhk.edu.hk/\">Information Security Conference</a>\n* SecureComm <a href=\"http://securecomm.org/2014/show/home\">International Conference on Security and Privacy in Communication Networks</a>\n* NSPW <a href=\"http://www.nspw.org/2014\">New Security Paradigms Workshop</a>\n* CT-RSA <a href=\"\">RSA Conference, Cryptographers' Track</a> 密码不看\n* SOUPS <a href=\"https://cups.cs.cmu.edu/soups/2014/\">Symposium On Usable Privacy and Security</a>\n* HotSec <a href=\"https://www.usenix.org/conference/hotsec14\">USENIX Workshop on Hot Topics in Security</a>\n* SAC <a href=\"\">Selected Areas in Cryptography</a> 密码不看\n* TrustCom <a href=\"http://www.greenorbs.org/TrustCom2014/\">IEEE International Conference on Trust, Security and Privacy in Computing and Communications</a>\n\n##软件工程类期刊和会议\n###A 类期刊\n* TOPLAS <a href=\"\">ACM Transactions on Programming Languages & Systems</a> 感觉不用看\n* TOSEM <a href=\"http://tosem.acm.org/\">ACM Transactions on Software Engineering Methodology</a> 感觉不用看\n* TSE <a href=\"http://www.computer.org/web/tse\">IEEE Transactions on Software Engineering</a> Vol 40 DEC 12 一篇\n   \n###B 类期刊\n* ASE <a href=\"http://link.springer.com/journal/10515\">Automated Software Engineering</a> \n* <a href=\"http://link.springer.com/journal/10664\">Empirical Software Engineering</a>\n* TSC <a href=\"http://www.computer.org/web/tsc\">IEEE Transactions on Service Computing</a>\n* IETS <a href=\"http://digital-library.theiet.org/content/journals/iet-sen\">IET Software</a>\n* IST <a href=\"http://www.journals.elsevier.com/information-and-software-technology/\">Information and Software Technology</a>\n* JFP <a href=\"http://journals.cambridge.org/action/displayJournal?jid=JFP\">Journal of Functional Programming</a>\n* <a href=\"http://onlinelibrary.wiley.com/journal/10.1002/(ISSN)2047-7481\">Journal of Software: Evolution and Process</a>\n* JSS <a href=\"http://www.journals.elsevier.com/journal-of-systems-and-software/\">Journal of Systems and Software</a>\n* RE <a href=\"http://link.springer.com/journal/766\">Requirements Engineering</a>\n* SCP <a href=\"http://www.journals.elsevier.com/science-of-computer-programming/\">Science of Computer Programming</a>\n* SoSyM <a href=\"http://www.springer.com/computer/swe/journal/10270\">Software and System Modeling</a>\n* SPE <a href=\"http://onlinelibrary.wiley.com/journal/10.1002/(ISSN)1097-024X\">Software: Practice and Experience</a>\n* STVR <a href=\"http://onlinelibrary.wiley.com/journal/10.1002/(ISSN)1099-1689\">Software Testing, Verification and Reliability</a> 可能有\n\n###C 类期刊\n* <a href=\"http://www.journals.elsevier.com/computer-languages-systems-and-structures/\">Computer Languages, Systems and Structures</a>\n* IJSEKE <a href=\"http://www.worldscientific.com/worldscinet/ijseke\">International Journal on Software Engineering and Knowledge Engineering</a>\n* STTT <a href=\"http://link.springer.com/journal/10009\">International Journal on Software Tools for Technology Transfer</a>\n* <a href=\"http://www.journals.elsevier.com/the-journal-of-logic-and-algebraic-programming/\">Journal of Logic and Algebraic Programming</a>\n* JWE <a href=\"http://www.rintonpress.com/journals/jwe/\">Journal of Web Engineering</a>\n* <a href=\"http://www.springer.com/computer/communication+networks/journal/11761\">Service Oriented Computing and Applications</a>\n* SQJ <a href=\"http://www.springer.com/computer/swe/journal/11219\">Software Quality Journal</a>\n* TPLP <a href=\"http://journals.cambridge.org/action/displayJournal?jid=TLP\">Theory and Practice of Logic Programming</a>\n\n###A 类会议\n* FSE/ESEC <a href=\"http://esec-fse15.dei.polimi.it/\">ACM SIGSOFT Symposium on the Foundation of Software Engineering/ European Software Engineering Conference</a> 今年有篇文章，贾老师基友也发过文章\n* OOPSLA <a href=\"http://2015.splashcon.org/\">Conference on Object-Oriented Programming Systems, Languages, and Applications</a>\n* ICSE <a href=\"http://2015.icse-conferences.org/\">International Conference on Software Engineering</a>\n* OSDI <a href=\"https://www.usenix.org/conference/osdi14\">USENIX Symposium on Operating Systems Design and Implementations</a>\n* PLDI <a href=\"http://conf.researchr.org/home/pldi2015\">ACM SIGPLAN Symposium on Programming Language Design & Implementation</a>\n* POPL <a href=\"http://popl.mpi-sws.org/2015/\">ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages</a>\n* SOSP <a href=\"http://www.ssrc.ucsc.edu/sosp15/\">ACM Symposium on Operating Systems Principles</a> 征文稿有安全分支\n\n###B 类会议\n* ECOOP <a href=\"http://ecoop.org/\">European Conference on Object-Oriented Programming</a>\n* ETAPS <a href=\"http://www.etaps.org/\">European Joint Conferences on Theory and Practice of Software</a>\n* FM <a href=\"http://www.fmeurope.org/\">Formal Methods, World Congress</a>\n* ICPC <a href=\"https://dibt.unimol.it/ICPC15/Home.html\">IEEE International Conference on Program Comprehension</a>\n* RE <a href=\"http://re15.org/\">IEEE International Requirement Engineering Conference</a>\n* CAiSE <a href=\"http://caise2015.dsv.su.se/\">International Conference on Advanced Information Systems Engineering</a>\n* ASE <a href=\"http://ase2015.unl.edu/#tab-main\">International Conference on Automated Software Engineering</a> 有安全分支，贾老师的基友发过文章。\n* ICFP <a href=\"http://icfpconference.org/icfp2015/\">International Conf on Function Programming</a>\n* LCTES <a href=\"http://lctes2015.lctes.org/\">International Conference on Languages, Compilers, Tools and Theory for Embedded Systems</a>\n* MoDELS <a href=\"http://www.modelsconference.org/\">International Conference on Model Driven Engineering Languages and Systems</a>\n* CP <a href=\"http://booleconferences.ucc.ie/cp2015\">International Conference on Principles and Practice of Constraint Programming</a>\n* ICSOC <a href=\"http://www.icsoc.org/\">International Conference on Service Oriented Computing</a>\n* ICSM <a href=\"http://www.icsm2015.org/\">International. Conference on Software Maintenance</a>\n* VMCAI <a href=\"http://research.microsoft.com/en-us/events/vmcai2015/\">International Conference on Verification, Model Checking, and Abstract Interpretation</a>\n* ICWS <a href=\"http://conferences.computer.org/icws/2015/\">International Conference on Web Services（Research Track）</a>\n* SAS <a href=\"http://sas2015.inria.fr/\">International Static Analysis Symposium</a>\n* ISSRE <a href=\"http://issre.net/\">International Symposium on Software Reliability Engineering</a>\n* ISSTA <a href=\"http://issta2015.cs.uoregon.edu/\">International Symposium on Software Testing and Analysis</a>\n* Middleware <a href=\"http://www.middleware-conference.org/\">Conference on middleware</a>\n* WCRE <a href=\"http://wcre.wikidot.com/2013\">Working Conference on Reverse Engineering</a> 逆向的会，希望很大。\n* HotOS <a href=\"https://www.usenix.org/conference/hotos15\">USENIX Workshop on Hot Topics in Operating Systems</a>\n\n###C 类会议\n* PASTE <a href=\"http://www.wikicfp.com/cfp/servlet/event.showcfp?eventid=28174&copyownerid=7812\">ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering</a>\n* APLAS <a href=\"http://pl.postech.ac.kr/aplas2015/\">Asian Symposium on Programming Languages and Systems</a>\n* APSEC <a href=\"http://www.apsec2015.org/\">Asia-Pacific Software Engineering Conference</a>\n* COMPSAC <a href=\"http://www.computer.org/portal/web/COMPSAC\">International Computer Software and Applications Conference</a> 台湾那个会，许老师是常客\n* ICECCS <a href=\"http://iceccs2015.monash.edu.au/2015/index.jsp\">IEEE International Conference on Engineering of Complex Computer Systems</a>\n* SCAM <a href=\"http://www.ieee-scam.org/\">IEEE International Working Conference on Source Code Analysis and Manipulation</a>\n* ICFEM <a href=\"http://icfem2015.lri.fr/\">International Conference on Formal Engineering Methods</a>\n* TOOLS <a href=\"http://tools.ethz.ch/\">International Conference on Objects, Models, Components, Patterns</a>\n* PEPM <a href=\"http://conf.researchr.org/home/pepm2015\">ACM SIGPLAN Symposium on Partial Evaluation and Semantics Based Programming Manipulation</a>\n* QSIC <a href=\"http://paris.utdallas.edu/qsic15/\">International Conference on Quality Software</a>\n* SEKE <a href=\"http://www.ksi.edu/seke/seke15.html\">International Conference on Software Engineering and Knowledge Engineering</a>\n* ICSR <a href=\"http://www.icsoro.org/icsr2015/\">International Conference on Software Reuse</a>\n* ICWE <a href=\"http://icwe2015.webengineering.org/\">International Conference on Web Engineering</a>\n* SPIN <a href=\"http://www.spin2015.com/\">International SPIN Workshop on Model Checking of Software</a>\n* LOPSTR <a href=\"http://alpha.diism.unisi.it/lopstr15/\">International Symposium on Logic-based Program Synthesis and Transformation</a>\n* TASE <a href=\"http://tase2015.nuaa.edu.cn/\">International Symposium on Theoretical Aspects of Software Engineering</a> 有安全分支，我发过文章。\n* ICST <a href=\"http://icst2015.ist.tu-graz.ac.at/\">The IEEE International Conference on Software Testing, Verification and Validation</a>\n* ATVA <a href=\"http://atva2015.ios.ac.cn/\">International Symposium on Automated Technology for Verification and Analysis</a>\n* ESEM <a href=\"http://esem-conferences.org/index.php\">International Symposium on Empirical Software Engineering and Measurement</a>\n* ISPASS <a href=\"http://ispass.org/ispass2015/\">IEEE International Symposium on Performance Analysis of Systems and Software</a>\n* SCC <a href=\"http://conferences.computer.org/scc/2015/\">International Conference on Service Computing</a>\n* ICSSP <a href=\"http://www.icsp-conferences.org/icssp2015/\">International Conference on Software and System Process</a>\n\n##总结\n\n1. 很明显行或不行的，我备注了。顺手发现的东西，都备注了。\n2. 软件工程这边的会和期刊的分类是“软件工程、系统软件与程序设计语言”，所以从名字上看，明显没关系的期刊和会找到文章的希望不大。\n3. 如果像早上说的，都不是正交，把范围都扩大，那安全那边还有不少可以找。软件这边更多的是赶着走。\n3. 期刊都是链接到官网。原则上，安全的会我都链接到了14 年，软工的会都链接到了15 年，个别死链是因为我觉得没用所以就没找。\n4. 安全列表来自：http://www.ccf.org.cn/sites/ccf/biaodan.jsp?contentId=2567814757428\n5. 软件列表来自：http://www.ccf.org.cn/sites/ccf/biaodan.jsp?contentId=2567814757404\n\n---","html":"<h2 id=\"\">信息安全类期刊和会议</h2>\n\n<h3 id=\"a\">A 类期刊</h3>\n\n<ul>\n<li>TDSC <a href=\"http://www.computer.org/portal/web/tdsc\">IEEE Transactions on Dependable and Secure Computing</a></li>\n<li>TIFS <a href=\"http://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=10206\">IEEE Transactions on Information Forensics and Security</a></td></li>\n<li>Journal of Cryptology 密码学，可略过</li>\n</ul>\n\n<h3 id=\"b\">B 类期刊</h3>\n\n<ul>\n<li>TISSEC <a href=\"http://tissec.acm.org/\">ACM Transactions on Information and System Security</a> 官网首页有篇文章</li>\n<li><a href=\"http://www.journals.elsevier.com/computers-and-security/\">Computers &amp; Security</a> 2015 Volume 51 有文章</li>\n<li><a href=\"http://link.springer.com/journal/10623\">Designs, Codes and Cryptography</a> 密码学，不靠谱</li>\n<li>JCS <a href=\"http://iospress.metapress.com/content/103167/\">Journal of Computer Security</a> Volume 22 Issue 3 有文章</li>\n</ul>\n\n<h3 id=\"c\">C 类期刊</h3>\n\n<ul>\n<li>CLSR <a href=\"http://www.journals.elsevier.com/computer-law-and-security-review/\">Computer Law and Security Reports</a> 法律法规，不靠谱</li>\n<li><a href=\"http://jis.eurasipjournals.com/\">EURASIP Journal on Information Security</a></li>\n<li><a href=\"http://digital-library.theiet.org/content/journals/iet-ifs\">IET Information Security</a></li>\n<li>IMCS <a href=\"http://www.emeraldinsight.com/loi/imcs\">Information Management &amp; Computer Security</a></li>\n<li>ISTR <a href=\"http://www.sciencedirect.com/science/journal/13634127\">Information Security Technical Report</a> 首页有文章</li>\n<li>IJISP <a href=\"http://www.igi-global.com/journal/international-journal-information-security-privacy/1096\">International Journal of Information Security and Privacy</a></li>\n<li>IJICS <a href=\"http://www.inderscience.com/jhome.php?jcode=ijics\">International Journal of Information and Computer Security</a></li>\n<li>SCN <a href=\"http://onlinelibrary.wiley.com/journal/10.1002/(ISSN)1939-0122\">Security and Communication Networks</a></li>\n</ul>\n\n<h3 id=\"a\">A 类会议</h3>\n\n<ul>\n<li>CCS <a href=\"http://www.sigsac.org/ccs/CCS2014/\">ACM Conference on Computer and Communications Security</a></li>\n<li>CRYPTO <a href=\"\">International Cryptology Conference</a>  密码不看</li>\n<li>EUROCRYPT  <a href=\"\">European Cryptology Conference</a> 密码不看</li>\n<li>S &amp; P <a href=\"http://www.ieee-security.org/TC/SP2014/\">IEEE Symposium on Security and Privacy</a></li>\n<li>USENIX Security <a href=\"https://www.usenix.org/conference/usenixsecurity14\">Usenix Security Symposium</a></li>\n</ul>\n\n<h3 id=\"b\">B 类会议</h3>\n\n<ul>\n<li>ACSAC <a href=\"https://www.acsac.org/2014/\">Annual Computer Security Applications \nConference</a>  </li>\n<li>ASIACRYPT <a href=\"http://des.cse.nsysu.edu.tw/asiacrypt2014/\">Annual International Conference on the Theory and Application of Cryptology and Information Security</a></li>\n<li>ESORICS <a href=\"http://esorics2014.pwr.wroc.pl/\">European Symposiumon Research in Computer Security</a></li>\n<li>FSE <a href=\"https://fse22.gatech.edu/\">Fast Software Encryption</a></li>\n<li>NDSS <a href=\"http://www.internetsociety.org/events/ndss-symposium-2014\">ISOC Network and Distributed System Security Symposium</a></li>\n<li>CSFW <a href=\"http://cscw.acm.org/2014/\">IEEE Computer Security Foundations Workshop</a></li>\n<li>RAID <a href=\"http://www.raid2014.eu/\">International Symposium on Recent Advances in Intrusion Detection</a></li>\n<li>PKC <a href=\"http://www.iacr.org/workshops/pkc2014/\">International Workshop on Practice and Theory in Public Key Cryptography</a></li>\n<li>DSN <a href=\"http://2014.dsn.org/\">The International Conference on Dependable Systems and Networks</a></li>\n<li>TCC <a href=\"http://www.iacr.org/workshops/tcc2014/call_for_papers.html\">Theory of Cryptography Conference</a> 不看</li>\n<li>SRDS <a href=\"http://www-nishio.ist.osaka-u.ac.jp/conf/srds2014/\">IEEE International Symposium on Reliable Distributed Systems</a></li>\n<li>CHES <a href=\"http://www.chesworkshop.org/ches2014/start.php\">Workshop on Cryptographic Hardware and Embedded Systems</a> 不看</li>\n</ul>\n\n<h3 id=\"c\">C 类会议</h3>\n\n<ul>\n<li>WiSec <a href=\"http://www.sigsac.org/wisec/WiSec2014/\">ACM Conference on Security and Privacy \nin Wireless and Mobile Networks</a>  </li>\n<li>ACM MM&amp;SEC <a href=\"http://www.ihmmsec.org/index.php/ihmmsec2014\">ACM Multimedia and Security Workshop</a></li>\n<li>SACMAT <a href=\"http://www.sacmat.org/2014/index.php\">ACM Symposium on Access Control Models\nand Technologies</a>  </li>\n<li>ASIACCS <a href=\"http://asiaccs2014.nict.go.jp/\">ACM Symposium on Information, Computer\nand Communications Security</a>  </li>\n<li>DRM <a href=\"\">ACM Workshop on Digital Rights Management</a> 不沾边</li>\n<li>ACNS <a href=\"http://acns2014.epfl.ch/\">Applied Cryptography and Network Security</a> 感觉不靠谱</li>\n<li>ACISP <a href=\"https://ssl.informatics.uow.edu.au/acisp2014/\">Australasia Conference on Information Security and Privacy</a></li>\n<li>DFRWS <a href=\"http://www.dfrws.org/2014/\">Digital Forensic Research Workshop</a></li>\n<li>FC <a href=\"http://fc14.ifca.ai/\">Financial Cryptography and Data Security</a> 感觉不靠谱</li>\n<li>DIMVA <a href=\"http://dimva2014.isg.rhul.ac.uk/\">Detection of Intrusions and Malware &amp; Vulnerability Assessment</a> 名字真耐人，必须看</li>\n<li>SEC <a href=\"http://www.ifipsec.org/\">IFIP International Information Security Conference</a></li>\n<li>IFIP WG 11.9 <a href=\"http://www.ifip119.org/Conferences/\">IFIP WG 11.9 International Conference on Digital Forensics</a></li>\n<li>ISC <a href=\"http://isc14.ie.cuhk.edu.hk/\">Information Security Conference</a></li>\n<li>SecureComm <a href=\"http://securecomm.org/2014/show/home\">International Conference on Security and Privacy in Communication Networks</a></li>\n<li>NSPW <a href=\"http://www.nspw.org/2014\">New Security Paradigms Workshop</a></li>\n<li>CT-RSA <a href=\"\">RSA Conference, Cryptographers' Track</a> 密码不看</li>\n<li>SOUPS <a href=\"https://cups.cs.cmu.edu/soups/2014/\">Symposium On Usable Privacy and Security</a></li>\n<li>HotSec <a href=\"https://www.usenix.org/conference/hotsec14\">USENIX Workshop on Hot Topics in Security</a></li>\n<li>SAC <a href=\"\">Selected Areas in Cryptography</a> 密码不看</li>\n<li>TrustCom <a href=\"http://www.greenorbs.org/TrustCom2014/\">IEEE International Conference on Trust, Security and Privacy in Computing and Communications</a></li>\n</ul>\n\n<h2 id=\"\">软件工程类期刊和会议</h2>\n\n<h3 id=\"a\">A 类期刊</h3>\n\n<ul>\n<li>TOPLAS <a href=\"\">ACM Transactions on Programming Languages &amp; Systems</a> 感觉不用看</li>\n<li>TOSEM <a href=\"http://tosem.acm.org/\">ACM Transactions on Software Engineering Methodology</a> 感觉不用看</li>\n<li>TSE <a href=\"http://www.computer.org/web/tse\">IEEE Transactions on Software Engineering</a> Vol 40 DEC 12 一篇</li>\n</ul>\n\n<h3 id=\"b\">B 类期刊</h3>\n\n<ul>\n<li>ASE <a href=\"http://link.springer.com/journal/10515\">Automated Software Engineering</a> </li>\n<li><a href=\"http://link.springer.com/journal/10664\">Empirical Software Engineering</a></li>\n<li>TSC <a href=\"http://www.computer.org/web/tsc\">IEEE Transactions on Service Computing</a></li>\n<li>IETS <a href=\"http://digital-library.theiet.org/content/journals/iet-sen\">IET Software</a></li>\n<li>IST <a href=\"http://www.journals.elsevier.com/information-and-software-technology/\">Information and Software Technology</a></li>\n<li>JFP <a href=\"http://journals.cambridge.org/action/displayJournal?jid=JFP\">Journal of Functional Programming</a></li>\n<li><a href=\"http://onlinelibrary.wiley.com/journal/10.1002/(ISSN)2047-7481\">Journal of Software: Evolution and Process</a></li>\n<li>JSS <a href=\"http://www.journals.elsevier.com/journal-of-systems-and-software/\">Journal of Systems and Software</a></li>\n<li>RE <a href=\"http://link.springer.com/journal/766\">Requirements Engineering</a></li>\n<li>SCP <a href=\"http://www.journals.elsevier.com/science-of-computer-programming/\">Science of Computer Programming</a></li>\n<li>SoSyM <a href=\"http://www.springer.com/computer/swe/journal/10270\">Software and System Modeling</a></li>\n<li>SPE <a href=\"http://onlinelibrary.wiley.com/journal/10.1002/(ISSN)1097-024X\">Software: Practice and Experience</a></li>\n<li>STVR <a href=\"http://onlinelibrary.wiley.com/journal/10.1002/(ISSN)1099-1689\">Software Testing, Verification and Reliability</a> 可能有</li>\n</ul>\n\n<h3 id=\"c\">C 类期刊</h3>\n\n<ul>\n<li><a href=\"http://www.journals.elsevier.com/computer-languages-systems-and-structures/\">Computer Languages, Systems and Structures</a></li>\n<li>IJSEKE <a href=\"http://www.worldscientific.com/worldscinet/ijseke\">International Journal on Software Engineering and Knowledge Engineering</a></li>\n<li>STTT <a href=\"http://link.springer.com/journal/10009\">International Journal on Software Tools for Technology Transfer</a></li>\n<li><a href=\"http://www.journals.elsevier.com/the-journal-of-logic-and-algebraic-programming/\">Journal of Logic and Algebraic Programming</a></li>\n<li>JWE <a href=\"http://www.rintonpress.com/journals/jwe/\">Journal of Web Engineering</a></li>\n<li><a href=\"http://www.springer.com/computer/communication+networks/journal/11761\">Service Oriented Computing and Applications</a></li>\n<li>SQJ <a href=\"http://www.springer.com/computer/swe/journal/11219\">Software Quality Journal</a></li>\n<li>TPLP <a href=\"http://journals.cambridge.org/action/displayJournal?jid=TLP\">Theory and Practice of Logic Programming</a></li>\n</ul>\n\n<h3 id=\"a\">A 类会议</h3>\n\n<ul>\n<li>FSE/ESEC <a href=\"http://esec-fse15.dei.polimi.it/\">ACM SIGSOFT Symposium on the Foundation of Software Engineering/ European Software Engineering Conference</a> 今年有篇文章，贾老师基友也发过文章</li>\n<li>OOPSLA <a href=\"http://2015.splashcon.org/\">Conference on Object-Oriented Programming Systems, Languages, and Applications</a></li>\n<li>ICSE <a href=\"http://2015.icse-conferences.org/\">International Conference on Software Engineering</a></li>\n<li>OSDI <a href=\"https://www.usenix.org/conference/osdi14\">USENIX Symposium on Operating Systems Design and Implementations</a></li>\n<li>PLDI <a href=\"http://conf.researchr.org/home/pldi2015\">ACM SIGPLAN Symposium on Programming Language Design &amp; Implementation</a></li>\n<li>POPL <a href=\"http://popl.mpi-sws.org/2015/\">ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages</a></li>\n<li>SOSP <a href=\"http://www.ssrc.ucsc.edu/sosp15/\">ACM Symposium on Operating Systems Principles</a> 征文稿有安全分支</li>\n</ul>\n\n<h3 id=\"b\">B 类会议</h3>\n\n<ul>\n<li>ECOOP <a href=\"http://ecoop.org/\">European Conference on Object-Oriented Programming</a></li>\n<li>ETAPS <a href=\"http://www.etaps.org/\">European Joint Conferences on Theory and Practice of Software</a></li>\n<li>FM <a href=\"http://www.fmeurope.org/\">Formal Methods, World Congress</a></li>\n<li>ICPC <a href=\"https://dibt.unimol.it/ICPC15/Home.html\">IEEE International Conference on Program Comprehension</a></li>\n<li>RE <a href=\"http://re15.org/\">IEEE International Requirement Engineering Conference</a></li>\n<li>CAiSE <a href=\"http://caise2015.dsv.su.se/\">International Conference on Advanced Information Systems Engineering</a></li>\n<li>ASE <a href=\"http://ase2015.unl.edu/#tab-main\">International Conference on Automated Software Engineering</a> 有安全分支，贾老师的基友发过文章。</li>\n<li>ICFP <a href=\"http://icfpconference.org/icfp2015/\">International Conf on Function Programming</a></li>\n<li>LCTES <a href=\"http://lctes2015.lctes.org/\">International Conference on Languages, Compilers, Tools and Theory for Embedded Systems</a></li>\n<li>MoDELS <a href=\"http://www.modelsconference.org/\">International Conference on Model Driven Engineering Languages and Systems</a></li>\n<li>CP <a href=\"http://booleconferences.ucc.ie/cp2015\">International Conference on Principles and Practice of Constraint Programming</a></li>\n<li>ICSOC <a href=\"http://www.icsoc.org/\">International Conference on Service Oriented Computing</a></li>\n<li>ICSM <a href=\"http://www.icsm2015.org/\">International. Conference on Software Maintenance</a></li>\n<li>VMCAI <a href=\"http://research.microsoft.com/en-us/events/vmcai2015/\">International Conference on Verification, Model Checking, and Abstract Interpretation</a></li>\n<li>ICWS <a href=\"http://conferences.computer.org/icws/2015/\">International Conference on Web Services（Research Track）</a></li>\n<li>SAS <a href=\"http://sas2015.inria.fr/\">International Static Analysis Symposium</a></li>\n<li>ISSRE <a href=\"http://issre.net/\">International Symposium on Software Reliability Engineering</a></li>\n<li>ISSTA <a href=\"http://issta2015.cs.uoregon.edu/\">International Symposium on Software Testing and Analysis</a></li>\n<li>Middleware <a href=\"http://www.middleware-conference.org/\">Conference on middleware</a></li>\n<li>WCRE <a href=\"http://wcre.wikidot.com/2013\">Working Conference on Reverse Engineering</a> 逆向的会，希望很大。</li>\n<li>HotOS <a href=\"https://www.usenix.org/conference/hotos15\">USENIX Workshop on Hot Topics in Operating Systems</a></li>\n</ul>\n\n<h3 id=\"c\">C 类会议</h3>\n\n<ul>\n<li>PASTE <a href=\"http://www.wikicfp.com/cfp/servlet/event.showcfp?eventid=28174&amp;copyownerid=7812\">ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering</a></li>\n<li>APLAS <a href=\"http://pl.postech.ac.kr/aplas2015/\">Asian Symposium on Programming Languages and Systems</a></li>\n<li>APSEC <a href=\"http://www.apsec2015.org/\">Asia-Pacific Software Engineering Conference</a></li>\n<li>COMPSAC <a href=\"http://www.computer.org/portal/web/COMPSAC\">International Computer Software and Applications Conference</a> 台湾那个会，许老师是常客</li>\n<li>ICECCS <a href=\"http://iceccs2015.monash.edu.au/2015/index.jsp\">IEEE International Conference on Engineering of Complex Computer Systems</a></li>\n<li>SCAM <a href=\"http://www.ieee-scam.org/\">IEEE International Working Conference on Source Code Analysis and Manipulation</a></li>\n<li>ICFEM <a href=\"http://icfem2015.lri.fr/\">International Conference on Formal Engineering Methods</a></li>\n<li>TOOLS <a href=\"http://tools.ethz.ch/\">International Conference on Objects, Models, Components, Patterns</a></li>\n<li>PEPM <a href=\"http://conf.researchr.org/home/pepm2015\">ACM SIGPLAN Symposium on Partial Evaluation and Semantics Based Programming Manipulation</a></li>\n<li>QSIC <a href=\"http://paris.utdallas.edu/qsic15/\">International Conference on Quality Software</a></li>\n<li>SEKE <a href=\"http://www.ksi.edu/seke/seke15.html\">International Conference on Software Engineering and Knowledge Engineering</a></li>\n<li>ICSR <a href=\"http://www.icsoro.org/icsr2015/\">International Conference on Software Reuse</a></li>\n<li>ICWE <a href=\"http://icwe2015.webengineering.org/\">International Conference on Web Engineering</a></li>\n<li>SPIN <a href=\"http://www.spin2015.com/\">International SPIN Workshop on Model Checking of Software</a></li>\n<li>LOPSTR <a href=\"http://alpha.diism.unisi.it/lopstr15/\">International Symposium on Logic-based Program Synthesis and Transformation</a></li>\n<li>TASE <a href=\"http://tase2015.nuaa.edu.cn/\">International Symposium on Theoretical Aspects of Software Engineering</a> 有安全分支，我发过文章。</li>\n<li>ICST <a href=\"http://icst2015.ist.tu-graz.ac.at/\">The IEEE International Conference on Software Testing, Verification and Validation</a></li>\n<li>ATVA <a href=\"http://atva2015.ios.ac.cn/\">International Symposium on Automated Technology for Verification and Analysis</a></li>\n<li>ESEM <a href=\"http://esem-conferences.org/index.php\">International Symposium on Empirical Software Engineering and Measurement</a></li>\n<li>ISPASS <a href=\"http://ispass.org/ispass2015/\">IEEE International Symposium on Performance Analysis of Systems and Software</a></li>\n<li>SCC <a href=\"http://conferences.computer.org/scc/2015/\">International Conference on Service Computing</a></li>\n<li>ICSSP <a href=\"http://www.icsp-conferences.org/icssp2015/\">International Conference on Software and System Process</a></li>\n</ul>\n\n<h2 id=\"\">总结</h2>\n\n<ol>\n<li>很明显行或不行的，我备注了。顺手发现的东西，都备注了。  </li>\n<li>软件工程这边的会和期刊的分类是“软件工程、系统软件与程序设计语言”，所以从名字上看，明显没关系的期刊和会找到文章的希望不大。  </li>\n<li>如果像早上说的，都不是正交，把范围都扩大，那安全那边还有不少可以找。软件这边更多的是赶着走。  </li>\n<li>期刊都是链接到官网。原则上，安全的会我都链接到了14 年，软工的会都链接到了15 年，个别死链是因为我觉得没用所以就没找。  </li>\n<li>安全列表来自：<a href=\"http://www.ccf.org.cn/sites/ccf/biaodan.jsp?contentId=2567814757428\">http://www.ccf.org.cn/sites/ccf/biaodan.jsp?contentId=2567814757428</a>  </li>\n<li>软件列表来自：<a href=\"http://www.ccf.org.cn/sites/ccf/biaodan.jsp?contentId=2567814757404\">http://www.ccf.org.cn/sites/ccf/biaodan.jsp?contentId=2567814757404</a></li>\n</ol>\n\n<hr />","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436425546471,"created_by":1,"updated_at":1436445182176,"updated_by":1,"published_at":1436443020255,"published_by":1},{"id":12,"uuid":"f8da853c-03db-4ffd-80bf-90d94be1b6c8","title":"写学术论文就像写武侠小说","slug":"lun-wen-xiao-hua","markdown":"师兄名言，来自网络：\n\n论文和武侠小说其实是一样的，写论文就好比写小说。武侠风格尤佳。\n\n首先营造一个紧张的气氛，烘托出一个必须解决的严重问题。（提出问题所在，并表明此问题急需解决）\n       \n接着绿叶登场，挨个败下阵来。（指出前人的研究的不足之处，为后面自己的研究优势所在做铺垫）\n       \n然后主人公粉墨登场，在精巧的情节布局之下，他的特长刚好得到最大限度地发挥，他的缺陷刚好都不重要，甚至还能变废为宝。（给出自己的研究成果，并指出自己的方法有很大的优势。多数文章中自己的研究中的缺陷作者貌似都描写的让人觉得那不是问题）\n \n于是主人公拯救了学术界，并在剧终谦虚地表示，由于时间有限自己的必杀大招还有 6 层没有修炼。（作者谦虚的表示后面还有很多工作要做）\n\n附：如何用科学语言表达你实际的意思。\n<br />\n![](/content/images/2015/07/paperjoke.jpg)\n<br />\n\n---\n","html":"<p>师兄名言，来自网络：</p>\n\n<p>论文和武侠小说其实是一样的，写论文就好比写小说。武侠风格尤佳。</p>\n\n<p>首先营造一个紧张的气氛，烘托出一个必须解决的严重问题。（提出问题所在，并表明此问题急需解决）</p>\n\n<p>接着绿叶登场，挨个败下阵来。（指出前人的研究的不足之处，为后面自己的研究优势所在做铺垫）</p>\n\n<p>然后主人公粉墨登场，在精巧的情节布局之下，他的特长刚好得到最大限度地发挥，他的缺陷刚好都不重要，甚至还能变废为宝。（给出自己的研究成果，并指出自己的方法有很大的优势。多数文章中自己的研究中的缺陷作者貌似都描写的让人觉得那不是问题）</p>\n\n<p>于是主人公拯救了学术界，并在剧终谦虚地表示，由于时间有限自己的必杀大招还有 6 层没有修炼。（作者谦虚的表示后面还有很多工作要做）</p>\n\n<p>附：如何用科学语言表达你实际的意思。\n<br /> <br />\n<img src=\"/content/images/2015/07/paperjoke.jpg\" alt=\"\" />\n<br /></p>\n\n<hr />","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436447424448,"created_by":1,"updated_at":1436499344388,"updated_by":1,"published_at":1436447613651,"published_by":1},{"id":14,"uuid":"13eb5f8a-420d-4786-9370-126ce0472f7d","title":"校招面经集合-肉身翻墙失败的经验","slug":"xiao-zhao-ying-pin","markdown":"校招从 9 月开始，坚持到转年 6 月中旬结束，我算得上是实验室里打应聘持久战的奇葩了。自始至终基本都在找国外的工作，积累了不少经验教训。\n\n很多人一听到找出国的工作，立刻就觉得很难，其实不是这样，当你真的去了解这些东西，就会发现渠道真的是太多了，限制你的往往不是没有机会，而是有太多的机会摆在你面前，只是你能力不够，无法抓住，抑或仅仅是欠缺三分运气。\n\n##企鹅\n拿到的第一个 offer 是企鹅的，原因很简单，实习生转正自动得到的。而且企鹅十分慷慨，一直等到了我 12 月底，而没有像其他公司那样催促交三方，在我全力应聘国外的时候，企鹅是坚强有力的后盾，值得感谢。\n\n##[启程日本](http://workinjapan.cn/)\n整个校园招聘期间，启程日本算是我花了相当大精力，或者说主要精力的事情了。启程日本是专业的人力资源公司，类似于猎头，提供一个让中国学生和日本公司做对接的中间人作用吧，所有服务都是免费的，他们向招人成功的日本公司收服务费，而且通过它们跨国来中国招人的成本十分巨大，所以能来的公司都是效益非常好的牛企。\n\n###笔试\n我是赶夏季招聘没有赶上，于是 6 月 30 号在大连理工大学做的秋季招聘笔试。从天津来回打飞的去大连大黑山脚下笔试，把咨询顾问感动坏了。\n笔试都是小学数学题，包括售价折扣题、工程效率、相遇追及、简单逻辑等等，还有 90 分钟的心理测验，那些题目实在是太多了，做到最后都不知道自己怎么选的。\n\n###启程日本一面\n一面是在企鹅实习的时候面的，启程日本的每个参与者都有自己专属的咨询顾问，这次面试算是正式认识了负责我的顾问，她们自称为咨询担当。主要问了一些 HR 面常见问题，重点还是了解你的意愿，好帮你报公司。\n\n1. 英文自我介绍\n2. 对启程日本有没有了解\n3. 选择公司的因素\n4. 为什么去日本\n5. 找国内工作的话，国内哪些公司你比较看重\n6. 对日本的生活有没有了解\n7. 你大学中印象比较深刻的事情\n8. 你性格上的优点和缺点\n9. 别人如何评价你\n\n不知道是不是因为我条件很不错，后面再没有经历过启程日本这边的面试，和网上看到的要过两三轮完全不符，也就是说启程日本这边已经合格了，后面一直在参加企业面。\n\n日本公司的风格感觉和国内互联网完全不同，简历关非常难过，NTT Communications、NS Solutions、Uniccs、Recruit 五个部门的三个，简历都直接挂了。总结了一下，凡是做系统开发的公司，简历都挂了。简历通过进入面试的只有 MonotaRO、Recruit sumai、Recruit Lifestyle\n\n###MonotaRO 一面\nMonotaRO 算是所有日本公司里面的 dream offer 了，这是一家少见的，以加班少为优势进行招聘宣传的公司，在日本公司来说，不加班真的是难得了，而且它是一家上市公司，非常稳定，发展也好。另外就是公司位于兵库县尼琦市，远离东京的喧嚣，反正符合我选公司的所有要求，没有任何让人不满意的地方。\n\n面试的翻译十分给力，他会理解了你的意思后再翻译，配合的很默契。问题主要有：\n\n1. 你喜欢自己搞事情还是团队搞\n2. 你在腾讯是如何与别人协作的\n3. 为什么来日本\n4. 为什么 MonotaRO\n5. 你擅长什么，不擅长什么。技术上和生活上分别答\n6. 列出你知道的排序\n7. 写了个算法，该算法的缺点是什么\n8. python 处理百万条数据的效率如何\n\n总之，技术题全答对了，他们对技术要求实在是不高，让我列出知道的排序算法，我说了八九个吧，然后我以为接下来会让我写几个，结果就没有然后了。闹了半天说出名字就可以。技术面试官除了一直在点头表示开心，我没看出任何别的反应。但是 HR 面就很搞了，这位面试官在拿着我的心理测试报告狂研究，感觉就像玩三国志一样，他们居然把人的性格各个维度给量化了，然后他画了几个圈，就开始各种纠结我的团队协作问题，早知道这样，当时在大连做测试时，就不选这么多性格独立了。\n\n反正最后还是过了，下午二面，我前面还有三个人一起进去二面，出来的时候直接拿着 offer 和合同出来的，当场就发。。。\n###MonotaRO 二面\n我以为也会给我发 offer，结果他们说上午有问题忘了问，继续面试。\n\n1. 当 leader 的经历\n2. 一个产品，你觉得想法不行，员工都觉得行，最后你没拗过员工，做了，结果失败了，应该谁负责。\n3. 快速迭代和打磨品质，你更看重哪个\n3. 你对MonotaRO 了解多少\n4. 你觉得公司哪里可以改进\n5. 解释死锁\n\n聊了很长时间当 leader 的问题，最后问了点技术，技术依然全过，主要还是 HR 问题，最后就是回去等结果。\n\n后来通过咨询顾问了解到，MonotaRO 上海场一个人也没招到，都刷了，最后就发了北京场我前面那三个人的 offer，我是唯一的备胎，只要那三个人有一个人拒掉，offer 就会给我。以前每次都有人拒，所以顾问觉得我八九不离十，结果没想到今年三个人都接受了，一个拒的也没有，然后我就挂了，顾问也是觉得十分无奈。\n\n###Recruit sumai\n这就是日本的搜房网，面试官是一个大叔和一个眼镜娘，我这边是我和一个翻译。大叔很可爱，眼镜娘很高冷。可惜这场的翻译不给力，磕磕巴巴的，严重影响发挥。真是哪行都有混日子的人。\n\n1. 他介绍了公司的情况\n1. 你做了这么多项目，最成功的是哪一个\n2. 你对什么技术感兴趣\n3. 有了这些技术后，你觉得你能为我们做出什么服务\n4. 你的缺点是什么\n5. 你的朋友是如何评价你的\n6. 你的 C 语言很有自信，是吧\n7. 你觉得你为了什么工作：钱、工作本身、人、地位\n8. 你觉得工作中什么时候你最快乐\n9. 你觉得工作的意义在哪里。\n10. 你是哪里的人，你的童年是什么样子的\n11. 为什么来日本\n\n他们问技术也挺搞笑的，或者说根本不问，他问是不是对 C 有信心，我说是，那按照一般的剧情，应该会问俩 C 的问题，结果就这么结束了。有信心，有，好，那问点别的。。。\n\n结果和 MonotaRO 类似，他们给我加了锁，然后回去等，依然是备胎，别人拒了轮到我，然而最终依然没轮到我。\n\n###Recruit Lifestyle\n同样是两个面试官，一个翻译。这家面试官非常像王石，我一进屋，我靠，这不是王石么，另一个面试官英语还行。\n\n1. 王石介绍了公司的情况\n2. 为什么来我们公司\n3. 你觉得你能给我们带来什么\n4. 你最有自信的技术，举例子说明。\n5. 用英语描述一个做过的最困难的项目\n\n最后用英语描述项目比较尴尬，我说的东西，面试官可以懂，但我听不懂面试官的英语，因为我总感觉他在说日语，听不出来那是英语，结果就变成了“我说英语 -> 面试官用英语提问 -> 我卖萌表示不懂 -> 面试官冲翻译用日语提问 -> 翻译冲我说中文 -> 我继续说英语”\n\n最后这家没通过，因为我提的一个想法他们以前想过，然后关键问题我又没答到点儿上，算是撞枪口了吧。\n\n面这家公司印象最深的不是公司本身，也不是王石，而是翻译。面试时所有的翻译都是从翻译公司找的专业翻译，但这个翻译明显技高一筹，我前面我后面所有参加面试的人，出来以后，第一句话基本都是这个翻译好厉害啊，什么都能翻。而且有一些略懂日语的人可以听出来，他不仅仅是翻译，他还会把面试者说的没什么逻辑的回答，给整理润色一下，帮你给圆上。真是业界良心。\n\n我能明显感觉到他和我经历过的其他翻译不一样，中国人说日语的腔调和日本人是有差别的，而且总会存在思考、遣词造句的小停顿，但是他说日语完全和母语一样，根本不用思考，语速比对面的日本面试官还要快，连口音和腔调都没差别，对比之下，好像他才是日本人，对面的面试官是冒牌货。反正我觉得如果没有特殊的机缘在特定的年龄接受过双语教育，通过后天学习很难练到这种水平。\n\n## AHRP\nAHRP 是另外一个赴日项目，但是感觉办的没有启程日本如火如荼，现在连官网都挂掉了。我在 AHRP 参加了雅虎日本、面白法人 Kayac、YUMEMI，雅虎日本简历关就挂了。进面试的是 Kayac 和 YUMEMI，AHRP 人员很少，顾问就是翻译，每次都是和顾问配合，她特别像台湾人，不过没好意思问她。\n\n###AHRP 一面\n报雅虎日本的时候，还是 6 月，所以参加了一个早期面试，类似于初筛吧\n\n1. 怎么知道 AHRP 这个项目的。\n2. 为什么要去海外就业\n3. 简历相关，考研历程\n4. 为什么读研\n5. 读研生活和你想的是否一样\n6. 研究方向\n7. 是否想去深造\n8. 给出选公司最看重的三个方面。\n9. 有没有理想的想去的公司\n10. 为什么去日本的公司。\n11. 有没有在其他公司的校招流程中\n\n其实就是聊一聊，初步了解一下你。\n\n###AHRP 二面\n二面是日本顾问伊野濑澄先生和一个翻译。依然是一些了解你性格的问题。问了问：简历的细节，为什么出国，最成功项目，自己的兴趣的项目，父母同意吗等等等等\n\n到此为止，AHRP 这边算是过了，接下来就都是企业面了。\n\n### 面白法人 Kayac 一面\n1. 介绍一下做过的项目\n3. 自己因兴趣做的项目\n3. 做没做过 WebService 的项目\n4. 将来想做哪方面\n4. 你码代码注重哪些方面\n4. 有没有崇拜的一个人，崇拜哪一点\n3. 为什么去日本\n4. 你在新加坡呆过，英语肯定好，有没有更长远的规划。\n\n我主要问了问这次招人是去横滨还是镰仓，总之感觉面试官不苟言笑，也不知道他想找啥样的人，反正没过。\n\n###YUMEMI 一面\nYUMEMI 是 AHRP 这边离 offer 最近的公司了，一面是两个人一起面，同样的问题一个人答完了另一个人答，和我一起面试的是一个北大的本科生，先是例行常规问些为什么去日本，为什么我们公司等等问题，然后就是分别介绍一个做过的项目。我介绍了本科时做的游戏引擎，北大那哥们介绍了一个电商网站，因为我那个是直接能玩的游戏，太炫了，所以直接胜出，把他 PK 下去了。二面的时候他已经不在了。\n\n###YUMEMI 二面\n二面面试官增加了社长本人，然后依然问一些 HR 问题，比如喜欢快速迭代还是打磨品质，最成功的项目等等等等，他们想要前端的人，我是做后端的，所以技术上不匹配，他们也可以要后端，但是得会 php，我又不会 php，不过他们还是给我机会了，可能是看我比较靠谱吧。\n\n最后他们问如果现在给 offer 签不签，但是我正在等 MonotaRO 的通知啊，那个 dream offer 啊，所以我只能说还得考虑下，他们就追问考虑什么因素等等等等。\n\n最后还是没过，我感觉如果我答应签，或许会过吧，因为后来了解到强烈的意愿也是 AHRP 这边招人看重的一个因素，总之就是阴差阳错，两家不错的公司都说了再见。\n\n## ADSC Singapore\n这是 UIUC 在新加坡的海外研究中心，招 Software Engineer 做一些论文或者项目的工程实现，主要招前端的人，但还是给我了面试机会。\n\n1. 介绍一下做的项目，说了腾讯抓取数据项目\n2. 有数据库，有爬取的名字，如何优化查询\n3. 有网页，怎样从数据库中快速匹配\n4. smu 的项目\n4. normalization 是什么\n5. soap，restful，php，jsp 知道不知道\n6. 你有什么问题\n\n我不是搜索方向，也没做过网络项目，虽然答的差不多，但专业一点就不行了，最后没过。\n\n##Dynamic Technology Lab Singapore\n这是一家新加坡的股票量化交易公司，反正是一个极牛的地方吧，年后主要精力都放在它身上了。\n###笔试\n笔试就很有难度。比如其中有这么几个题目：\n\n<ol>\n  <li>Is the following C++ code correct? Please explain why</li>\n\n<pre><code>\nbool IsFriday(const std::string &day)\n{\n    return day == \"Friday\";\n} \nbool IsFriday(const char *day)\n{\n    return strcmp(day, \"Friday\") == 0;\n}\nint main(int argc, const char *argv[])\n{\n    IsFriday(\"Friday\");\n    IsFriday(std::string(\"Friday\"));\n    IsFriday(std::string(\"Friday\").c_str());\n    const char *s = std::string(\"Friday\").c_str();\n    IsFriday(s);\n    return 0;\n}\n</code></pre>\n\n<li>Please explain how to reduce packet loss on each layer of TCP/IP stack?</li>\n<li>What is memory reordering? Please give an example and explanation.</li>\n<li>How can CPU cache affect your algorithm design? Please give an example and explanation.</li>\n</ol>\n###项目\n笔试过后，居然让用 5 天时间做个小项目，合并两个数十 GB 的大文件，是一个多线程解决外排序的问题，并且要给出测试代码。最终也过了。过程算是惊心动魄吧，前三天误解了题意，最后两天刷夜搞定的，还顺带自学了 Google Test 测试框架。\n### DTL 一面\n一面是个爱笑的大叔。\n\n1. 介绍毕设项目\n2. 介绍腾讯项目\n2. std::string 内部实现\n2. copy on write 具体实现（引用计数）\n2. TOP k 问题（堆，快排，部分冒泡）\n2. map unordered_map 如何取舍\n2. 多线程做没做过\n2. 网络做没做过\n2. 为什么新加坡\n2. 为什么选我们，不去更热的移动互联网\n\n###DTL 二面\n\n3. 做过的项目\n2. c++ 和其他语言的选取\n1. 对什么业务感兴趣\n1. 五年后有什么打算\n1. 为什么移民\n1. 关注什么前沿的事情\n1. 因为兴趣做过什么项目\n1. 喜欢独立还是团队\n1. 会不会坚持己见\n1. 对互联网金融是否感兴趣\n\n二面感觉不好，问的性格和价值观的问题太多了，这种问题问多了就很难和公司匹配上，然后就挂了，很难讲挂了是好还是不好，总之感觉有点可惜罢了。毕竟投入了很多。\n##Morgan Stanley\n如果留在国内的话，Morgan IT 算是我梦寐以求的 offer 了，找了本科基友帮我内推，之后就是笔试。可以选择 Java，C#，C++ 三种卷子，笔试是 IKM Assessment，相当相当的难，我感觉没对几道。不过好在还是过了，接下来是电面，全程英文。不知道是不是和阿三打交道太多，电面的面试官明明是中国人，说英语却带着淡淡的咖喱口音。面试题中规中矩，基本符合网上的面经，但是个别能加分的发挥题我基本都没答上来。\n\n1. introduce yourself\n2. why not tencent\n3. introduce a project you did and what problem you solved\n4. what is recursion？\n5. what is hashtable？\n6. how to implement a hashtable, what data structure should be used？\n7. stack and heap\n8. in what scenario，we can only use heap.\n9. memory leak\n10. how to detect memory leak\n11. what is virtual function\n12. how to implement virtual function and polymorphism\n13. what is copy constructor\n14. for a given string, how to output all the different combination. \n\n自己基本都答上来了，都很基础，其实相对于题目本身的技术而言，更大的考验是你怎么用英语去答这些问题，去描述这些概念，尤其是涉及到专业词汇的时候。然而这轮挂掉了，我也没想太明白为啥我挂了。\n\n##VMware 上海\nVMware 真的是一个好地方，这是一个晚上 8 点就已经是深夜的公司，让无数晚上 8 点夜生活刚刚开始的互联网公司人望洋兴叹。\n\n笔试题目还是很有难度的，涉及到不少内核的知识，主要内容包括 C++、自旋锁、设备描述表、gdb、反汇编、网络、概率、数字推理。自己编程实现 ftoa、自己编程实现栈，并用双栈实现队列、英文写作（一道题是探讨公有云私有云混合云，另一道是给主管写信，因为工作需要申请一部 iphone）\n\n好像我的笔试成绩最后排第三，实验室哥们排第二。之后就是面试了。 面试的过程也是英语口语加技术，英语只有一小点儿，敢说就行了，因为面试官的英语说的真心不怎么样。\n\n1. 有一个 C 程序，定义了一个变量 i，结果继续执行几行与 i 无关的代码之后，i 的值变了，为什么？\n2. 函数想返回多个返回值怎么半\n3. 面向对象了解多少\n4. python 相关问题\n5. 1000 个苹果分 10 个箱子装，要任何数字的苹果都能通过几个箱子的组合得到，应该如何装。\n\n反正整体的面试完全不在状态，和面试官不在一个频道上。第一题特别有意思，当时答了很多种答案，感觉像是压力面，回来之后思考了一下，觉得他可能是想考缓冲区溢出，或者线程安全问题。\n\n全程感觉面试官很怕伤到你似的，问我会不会 python，我说会，但我编 Python 需要有手册在边上，然后他居然说那就算了，不问了。问我了不了解面向对象，我以为面向对象就是 C++，我说我了解，结果他问继承和虚函数这种关系是什么 dependency，我又只能答不知道。面试题的设计感觉也是想虐你，而不是让你展示自己，反正从应聘开始到面试结束，给人的感觉是极其不专业，和 BAT 比差一截。\n\n最后问我是不是一定去上海不服从调剂，愿不愿意来北京，我说不愿意，然后出门我就知道肯定没戏，如果说愿意去北京，说不定能过。虽然感觉不好，但这是一个给 22 万还不加班的好地方啊。\n\n##天津渣打科营\n这是一个传说中养老的地方，天津能给 11k 还不加班的公司，也是有点神了。它组织了一个 Open Day，我去了，公司给人感觉很 low，原因是它在带领大家参观的时候，主要介绍了 pantry，免费零食啥的，我觉得如果一个公司只能介绍这些东西了，那它也实在是没别的可说了。 在职员工做宣传的时候也很搞笑，她夸了渣打很好很不错，在她毕业求职各种碰壁各种不要她的时候收留了她，给了她机会。这么说的确是很好啊，但换个角度讲，那不是相当于它的要人标准低么？反正员工给人的整体感觉是眼界不够开阔。\n\n个人曾在渣打对面的企鹅呆了三个月，开发区的生活品质太差劲了，物价贵的要死，空气差的要死。Open Day 的时候问了问领队，可不可能 relocate，领队说在马来和印度还有科营。我靠，仔细思考了一下，难道我要 relocate 到印度吃飞饼和咖喱鸡吗？领队还说这里不保证不加班，那就完全没有兴趣了。\n\n##Worldquant\n这家一开始是想去的，结果一方面发现它永远在招人，另一方面发现glassdoor 上的评价很差，于是就没有参加笔试。\n\n## Cisco 杭州、上海\n简历过了，但是天津没有笔试考场，需要去北邮笔试，关键是和日本 indeed 的在线笔试时间一样，冲突无法避免，于是没去。\n\n##UBS Singapore\n瑞银感觉相当不错，作死地投了新加坡和香港，而并非上海。然后发来了 Online Test，题目和行测差不多，做完之后一个月左右收到拒信，情理之中。\n\n##Goldman Sachs HK\n同样作死地没投北京，而是投了香港。这次连 Online Test 都没有，好像没收到拒信，石沉大海。据说他们喜欢要实习生转正的。\n\n---","html":"<p>校招从 9 月开始，坚持到转年 6 月中旬结束，我算得上是实验室里打应聘持久战的奇葩了。自始至终基本都在找国外的工作，积累了不少经验教训。</p>\n\n<p>很多人一听到找出国的工作，立刻就觉得很难，其实不是这样，当你真的去了解这些东西，就会发现渠道真的是太多了，限制你的往往不是没有机会，而是有太多的机会摆在你面前，只是你能力不够，无法抓住，抑或仅仅是欠缺三分运气。</p>\n\n<h2 id=\"\">企鹅</h2>\n\n<p>拿到的第一个 offer 是企鹅的，原因很简单，实习生转正自动得到的。而且企鹅十分慷慨，一直等到了我 12 月底，而没有像其他公司那样催促交三方，在我全力应聘国外的时候，企鹅是坚强有力的后盾，值得感谢。</p>\n\n<h2 id=\"httpworkinjapancn\"><a href=\"http://workinjapan.cn/\">启程日本</a></h2>\n\n<p>整个校园招聘期间，启程日本算是我花了相当大精力，或者说主要精力的事情了。启程日本是专业的人力资源公司，类似于猎头，提供一个让中国学生和日本公司做对接的中间人作用吧，所有服务都是免费的，他们向招人成功的日本公司收服务费，而且通过它们跨国来中国招人的成本十分巨大，所以能来的公司都是效益非常好的牛企。</p>\n\n<h3 id=\"\">笔试</h3>\n\n<p>我是赶夏季招聘没有赶上，于是 6 月 30 号在大连理工大学做的秋季招聘笔试。从天津来回打飞的去大连大黑山脚下笔试，把咨询顾问感动坏了。\n笔试都是小学数学题，包括售价折扣题、工程效率、相遇追及、简单逻辑等等，还有 90 分钟的心理测验，那些题目实在是太多了，做到最后都不知道自己怎么选的。</p>\n\n<h3 id=\"\">启程日本一面</h3>\n\n<p>一面是在企鹅实习的时候面的，启程日本的每个参与者都有自己专属的咨询顾问，这次面试算是正式认识了负责我的顾问，她们自称为咨询担当。主要问了一些 HR 面常见问题，重点还是了解你的意愿，好帮你报公司。</p>\n\n<ol>\n<li>英文自我介绍  </li>\n<li>对启程日本有没有了解  </li>\n<li>选择公司的因素  </li>\n<li>为什么去日本  </li>\n<li>找国内工作的话，国内哪些公司你比较看重  </li>\n<li>对日本的生活有没有了解  </li>\n<li>你大学中印象比较深刻的事情  </li>\n<li>你性格上的优点和缺点  </li>\n<li>别人如何评价你</li>\n</ol>\n\n<p>不知道是不是因为我条件很不错，后面再没有经历过启程日本这边的面试，和网上看到的要过两三轮完全不符，也就是说启程日本这边已经合格了，后面一直在参加企业面。</p>\n\n<p>日本公司的风格感觉和国内互联网完全不同，简历关非常难过，NTT Communications、NS Solutions、Uniccs、Recruit 五个部门的三个，简历都直接挂了。总结了一下，凡是做系统开发的公司，简历都挂了。简历通过进入面试的只有 MonotaRO、Recruit sumai、Recruit Lifestyle</p>\n\n<h3 id=\"monotaro\">MonotaRO 一面</h3>\n\n<p>MonotaRO 算是所有日本公司里面的 dream offer 了，这是一家少见的，以加班少为优势进行招聘宣传的公司，在日本公司来说，不加班真的是难得了，而且它是一家上市公司，非常稳定，发展也好。另外就是公司位于兵库县尼琦市，远离东京的喧嚣，反正符合我选公司的所有要求，没有任何让人不满意的地方。</p>\n\n<p>面试的翻译十分给力，他会理解了你的意思后再翻译，配合的很默契。问题主要有：</p>\n\n<ol>\n<li>你喜欢自己搞事情还是团队搞  </li>\n<li>你在腾讯是如何与别人协作的  </li>\n<li>为什么来日本  </li>\n<li>为什么 MonotaRO  </li>\n<li>你擅长什么，不擅长什么。技术上和生活上分别答  </li>\n<li>列出你知道的排序  </li>\n<li>写了个算法，该算法的缺点是什么  </li>\n<li>python 处理百万条数据的效率如何</li>\n</ol>\n\n<p>总之，技术题全答对了，他们对技术要求实在是不高，让我列出知道的排序算法，我说了八九个吧，然后我以为接下来会让我写几个，结果就没有然后了。闹了半天说出名字就可以。技术面试官除了一直在点头表示开心，我没看出任何别的反应。但是 HR 面就很搞了，这位面试官在拿着我的心理测试报告狂研究，感觉就像玩三国志一样，他们居然把人的性格各个维度给量化了，然后他画了几个圈，就开始各种纠结我的团队协作问题，早知道这样，当时在大连做测试时，就不选这么多性格独立了。</p>\n\n<p>反正最后还是过了，下午二面，我前面还有三个人一起进去二面，出来的时候直接拿着 offer 和合同出来的，当场就发。。。</p>\n\n<h3 id=\"monotaro\">MonotaRO 二面</h3>\n\n<p>我以为也会给我发 offer，结果他们说上午有问题忘了问，继续面试。</p>\n\n<ol>\n<li>当 leader 的经历  </li>\n<li>一个产品，你觉得想法不行，员工都觉得行，最后你没拗过员工，做了，结果失败了，应该谁负责。  </li>\n<li>快速迭代和打磨品质，你更看重哪个  </li>\n<li>你对MonotaRO 了解多少  </li>\n<li>你觉得公司哪里可以改进  </li>\n<li>解释死锁</li>\n</ol>\n\n<p>聊了很长时间当 leader 的问题，最后问了点技术，技术依然全过，主要还是 HR 问题，最后就是回去等结果。</p>\n\n<p>后来通过咨询顾问了解到，MonotaRO 上海场一个人也没招到，都刷了，最后就发了北京场我前面那三个人的 offer，我是唯一的备胎，只要那三个人有一个人拒掉，offer 就会给我。以前每次都有人拒，所以顾问觉得我八九不离十，结果没想到今年三个人都接受了，一个拒的也没有，然后我就挂了，顾问也是觉得十分无奈。</p>\n\n<h3 id=\"recruitsumai\">Recruit sumai</h3>\n\n<p>这就是日本的搜房网，面试官是一个大叔和一个眼镜娘，我这边是我和一个翻译。大叔很可爱，眼镜娘很高冷。可惜这场的翻译不给力，磕磕巴巴的，严重影响发挥。真是哪行都有混日子的人。</p>\n\n<ol>\n<li>他介绍了公司的情况  </li>\n<li>你做了这么多项目，最成功的是哪一个  </li>\n<li>你对什么技术感兴趣  </li>\n<li>有了这些技术后，你觉得你能为我们做出什么服务  </li>\n<li>你的缺点是什么  </li>\n<li>你的朋友是如何评价你的  </li>\n<li>你的 C 语言很有自信，是吧  </li>\n<li>你觉得你为了什么工作：钱、工作本身、人、地位  </li>\n<li>你觉得工作中什么时候你最快乐  </li>\n<li>你觉得工作的意义在哪里。  </li>\n<li>你是哪里的人，你的童年是什么样子的  </li>\n<li>为什么来日本</li>\n</ol>\n\n<p>他们问技术也挺搞笑的，或者说根本不问，他问是不是对 C 有信心，我说是，那按照一般的剧情，应该会问俩 C 的问题，结果就这么结束了。有信心，有，好，那问点别的。。。</p>\n\n<p>结果和 MonotaRO 类似，他们给我加了锁，然后回去等，依然是备胎，别人拒了轮到我，然而最终依然没轮到我。</p>\n\n<h3 id=\"recruitlifestyle\">Recruit Lifestyle</h3>\n\n<p>同样是两个面试官，一个翻译。这家面试官非常像王石，我一进屋，我靠，这不是王石么，另一个面试官英语还行。</p>\n\n<ol>\n<li>王石介绍了公司的情况  </li>\n<li>为什么来我们公司  </li>\n<li>你觉得你能给我们带来什么  </li>\n<li>你最有自信的技术，举例子说明。  </li>\n<li>用英语描述一个做过的最困难的项目</li>\n</ol>\n\n<p>最后用英语描述项目比较尴尬，我说的东西，面试官可以懂，但我听不懂面试官的英语，因为我总感觉他在说日语，听不出来那是英语，结果就变成了“我说英语 -> 面试官用英语提问 -> 我卖萌表示不懂 -> 面试官冲翻译用日语提问 -> 翻译冲我说中文 -> 我继续说英语”</p>\n\n<p>最后这家没通过，因为我提的一个想法他们以前想过，然后关键问题我又没答到点儿上，算是撞枪口了吧。</p>\n\n<p>面这家公司印象最深的不是公司本身，也不是王石，而是翻译。面试时所有的翻译都是从翻译公司找的专业翻译，但这个翻译明显技高一筹，我前面我后面所有参加面试的人，出来以后，第一句话基本都是这个翻译好厉害啊，什么都能翻。而且有一些略懂日语的人可以听出来，他不仅仅是翻译，他还会把面试者说的没什么逻辑的回答，给整理润色一下，帮你给圆上。真是业界良心。</p>\n\n<p>我能明显感觉到他和我经历过的其他翻译不一样，中国人说日语的腔调和日本人是有差别的，而且总会存在思考、遣词造句的小停顿，但是他说日语完全和母语一样，根本不用思考，语速比对面的日本面试官还要快，连口音和腔调都没差别，对比之下，好像他才是日本人，对面的面试官是冒牌货。反正我觉得如果没有特殊的机缘在特定的年龄接受过双语教育，通过后天学习很难练到这种水平。</p>\n\n<h2 id=\"ahrp\">AHRP</h2>\n\n<p>AHRP 是另外一个赴日项目，但是感觉办的没有启程日本如火如荼，现在连官网都挂掉了。我在 AHRP 参加了雅虎日本、面白法人 Kayac、YUMEMI，雅虎日本简历关就挂了。进面试的是 Kayac 和 YUMEMI，AHRP 人员很少，顾问就是翻译，每次都是和顾问配合，她特别像台湾人，不过没好意思问她。</p>\n\n<h3 id=\"ahrp\">AHRP 一面</h3>\n\n<p>报雅虎日本的时候，还是 6 月，所以参加了一个早期面试，类似于初筛吧</p>\n\n<ol>\n<li>怎么知道 AHRP 这个项目的。  </li>\n<li>为什么要去海外就业  </li>\n<li>简历相关，考研历程  </li>\n<li>为什么读研  </li>\n<li>读研生活和你想的是否一样  </li>\n<li>研究方向  </li>\n<li>是否想去深造  </li>\n<li>给出选公司最看重的三个方面。  </li>\n<li>有没有理想的想去的公司  </li>\n<li>为什么去日本的公司。  </li>\n<li>有没有在其他公司的校招流程中</li>\n</ol>\n\n<p>其实就是聊一聊，初步了解一下你。</p>\n\n<h3 id=\"ahrp\">AHRP 二面</h3>\n\n<p>二面是日本顾问伊野濑澄先生和一个翻译。依然是一些了解你性格的问题。问了问：简历的细节，为什么出国，最成功项目，自己的兴趣的项目，父母同意吗等等等等</p>\n\n<p>到此为止，AHRP 这边算是过了，接下来就都是企业面了。</p>\n\n<h3 id=\"kayac\">面白法人 Kayac 一面</h3>\n\n<ol>\n<li>介绍一下做过的项目  </li>\n<li>自己因兴趣做的项目  </li>\n<li>做没做过 WebService 的项目  </li>\n<li>将来想做哪方面  </li>\n<li>你码代码注重哪些方面  </li>\n<li>有没有崇拜的一个人，崇拜哪一点  </li>\n<li>为什么去日本  </li>\n<li>你在新加坡呆过，英语肯定好，有没有更长远的规划。</li>\n</ol>\n\n<p>我主要问了问这次招人是去横滨还是镰仓，总之感觉面试官不苟言笑，也不知道他想找啥样的人，反正没过。</p>\n\n<h3 id=\"yumemi\">YUMEMI 一面</h3>\n\n<p>YUMEMI 是 AHRP 这边离 offer 最近的公司了，一面是两个人一起面，同样的问题一个人答完了另一个人答，和我一起面试的是一个北大的本科生，先是例行常规问些为什么去日本，为什么我们公司等等问题，然后就是分别介绍一个做过的项目。我介绍了本科时做的游戏引擎，北大那哥们介绍了一个电商网站，因为我那个是直接能玩的游戏，太炫了，所以直接胜出，把他 PK 下去了。二面的时候他已经不在了。</p>\n\n<h3 id=\"yumemi\">YUMEMI 二面</h3>\n\n<p>二面面试官增加了社长本人，然后依然问一些 HR 问题，比如喜欢快速迭代还是打磨品质，最成功的项目等等等等，他们想要前端的人，我是做后端的，所以技术上不匹配，他们也可以要后端，但是得会 php，我又不会 php，不过他们还是给我机会了，可能是看我比较靠谱吧。</p>\n\n<p>最后他们问如果现在给 offer 签不签，但是我正在等 MonotaRO 的通知啊，那个 dream offer 啊，所以我只能说还得考虑下，他们就追问考虑什么因素等等等等。</p>\n\n<p>最后还是没过，我感觉如果我答应签，或许会过吧，因为后来了解到强烈的意愿也是 AHRP 这边招人看重的一个因素，总之就是阴差阳错，两家不错的公司都说了再见。</p>\n\n<h2 id=\"adscsingapore\">ADSC Singapore</h2>\n\n<p>这是 UIUC 在新加坡的海外研究中心，招 Software Engineer 做一些论文或者项目的工程实现，主要招前端的人，但还是给我了面试机会。</p>\n\n<ol>\n<li>介绍一下做的项目，说了腾讯抓取数据项目  </li>\n<li>有数据库，有爬取的名字，如何优化查询  </li>\n<li>有网页，怎样从数据库中快速匹配  </li>\n<li>smu 的项目  </li>\n<li>normalization 是什么  </li>\n<li>soap，restful，php，jsp 知道不知道  </li>\n<li>你有什么问题</li>\n</ol>\n\n<p>我不是搜索方向，也没做过网络项目，虽然答的差不多，但专业一点就不行了，最后没过。</p>\n\n<h2 id=\"dynamictechnologylabsingapore\">Dynamic Technology Lab Singapore</h2>\n\n<p>这是一家新加坡的股票量化交易公司，反正是一个极牛的地方吧，年后主要精力都放在它身上了。</p>\n\n<h3 id=\"\">笔试</h3>\n\n<p>笔试就很有难度。比如其中有这么几个题目：</p>\n\n<ol>  \n  <li>Is the following C++ code correct? Please explain why</li>\n\n\n\n<pre><code>\nbool IsFriday(const std::string &day)\n{\n    return day == \"Friday\";\n} \nbool IsFriday(const char *day)\n{\n    return strcmp(day, \"Friday\") == 0;\n}\nint main(int argc, const char *argv[])\n{\n    IsFriday(\"Friday\");\n    IsFriday(std::string(\"Friday\"));\n    IsFriday(std::string(\"Friday\").c_str());\n    const char *s = std::string(\"Friday\").c_str();\n    IsFriday(s);\n    return 0;\n}\n</code></pre>\n\n<li>Please explain how to reduce packet loss on each layer of TCP/IP stack?</li>  \n<li>What is memory reordering? Please give an example and explanation.</li>  \n<li>How can CPU cache affect your algorithm design? Please give an example and explanation.</li>  \n</ol>  \n\n<h3 id=\"\">项目</h3>\n\n<p>笔试过后，居然让用 5 天时间做个小项目，合并两个数十 GB 的大文件，是一个多线程解决外排序的问题，并且要给出测试代码。最终也过了。过程算是惊心动魄吧，前三天误解了题意，最后两天刷夜搞定的，还顺带自学了 Google Test 测试框架。</p>\n\n<h3 id=\"dtl\">DTL 一面</h3>\n\n<p>一面是个爱笑的大叔。</p>\n\n<ol>\n<li>介绍毕设项目  </li>\n<li>介绍腾讯项目  </li>\n<li>std::string 内部实现  </li>\n<li>copy on write 具体实现（引用计数）  </li>\n<li>TOP k 问题（堆，快排，部分冒泡）  </li>\n<li>map unordered_map 如何取舍  </li>\n<li>多线程做没做过  </li>\n<li>网络做没做过  </li>\n<li>为什么新加坡  </li>\n<li>为什么选我们，不去更热的移动互联网</li>\n</ol>\n\n<h3 id=\"dtl\">DTL 二面</h3>\n\n<ol>\n<li>做过的项目  </li>\n<li>c++ 和其他语言的选取  </li>\n<li>对什么业务感兴趣  </li>\n<li>五年后有什么打算  </li>\n<li>为什么移民  </li>\n<li>关注什么前沿的事情  </li>\n<li>因为兴趣做过什么项目  </li>\n<li>喜欢独立还是团队  </li>\n<li>会不会坚持己见  </li>\n<li>对互联网金融是否感兴趣</li>\n</ol>\n\n<p>二面感觉不好，问的性格和价值观的问题太多了，这种问题问多了就很难和公司匹配上，然后就挂了，很难讲挂了是好还是不好，总之感觉有点可惜罢了。毕竟投入了很多。</p>\n\n<h2 id=\"morganstanley\">Morgan Stanley</h2>\n\n<p>如果留在国内的话，Morgan IT 算是我梦寐以求的 offer 了，找了本科基友帮我内推，之后就是笔试。可以选择 Java，C#，C++ 三种卷子，笔试是 IKM Assessment，相当相当的难，我感觉没对几道。不过好在还是过了，接下来是电面，全程英文。不知道是不是和阿三打交道太多，电面的面试官明明是中国人，说英语却带着淡淡的咖喱口音。面试题中规中矩，基本符合网上的面经，但是个别能加分的发挥题我基本都没答上来。</p>\n\n<ol>\n<li>introduce yourself  </li>\n<li>why not tencent  </li>\n<li>introduce a project you did and what problem you solved  </li>\n<li>what is recursion？  </li>\n<li>what is hashtable？  </li>\n<li>how to implement a hashtable, what data structure should be used？  </li>\n<li>stack and heap  </li>\n<li>in what scenario，we can only use heap.  </li>\n<li>memory leak  </li>\n<li>how to detect memory leak  </li>\n<li>what is virtual function  </li>\n<li>how to implement virtual function and polymorphism  </li>\n<li>what is copy constructor  </li>\n<li>for a given string, how to output all the different combination. </li>\n</ol>\n\n<p>自己基本都答上来了，都很基础，其实相对于题目本身的技术而言，更大的考验是你怎么用英语去答这些问题，去描述这些概念，尤其是涉及到专业词汇的时候。然而这轮挂掉了，我也没想太明白为啥我挂了。</p>\n\n<h2 id=\"vmware\">VMware 上海</h2>\n\n<p>VMware 真的是一个好地方，这是一个晚上 8 点就已经是深夜的公司，让无数晚上 8 点夜生活刚刚开始的互联网公司人望洋兴叹。</p>\n\n<p>笔试题目还是很有难度的，涉及到不少内核的知识，主要内容包括 C++、自旋锁、设备描述表、gdb、反汇编、网络、概率、数字推理。自己编程实现 ftoa、自己编程实现栈，并用双栈实现队列、英文写作（一道题是探讨公有云私有云混合云，另一道是给主管写信，因为工作需要申请一部 iphone）</p>\n\n<p>好像我的笔试成绩最后排第三，实验室哥们排第二。之后就是面试了。 面试的过程也是英语口语加技术，英语只有一小点儿，敢说就行了，因为面试官的英语说的真心不怎么样。</p>\n\n<ol>\n<li>有一个 C 程序，定义了一个变量 i，结果继续执行几行与 i 无关的代码之后，i 的值变了，为什么？  </li>\n<li>函数想返回多个返回值怎么半  </li>\n<li>面向对象了解多少  </li>\n<li>python 相关问题  </li>\n<li>1000 个苹果分 10 个箱子装，要任何数字的苹果都能通过几个箱子的组合得到，应该如何装。</li>\n</ol>\n\n<p>反正整体的面试完全不在状态，和面试官不在一个频道上。第一题特别有意思，当时答了很多种答案，感觉像是压力面，回来之后思考了一下，觉得他可能是想考缓冲区溢出，或者线程安全问题。</p>\n\n<p>全程感觉面试官很怕伤到你似的，问我会不会 python，我说会，但我编 Python 需要有手册在边上，然后他居然说那就算了，不问了。问我了不了解面向对象，我以为面向对象就是 C++，我说我了解，结果他问继承和虚函数这种关系是什么 dependency，我又只能答不知道。面试题的设计感觉也是想虐你，而不是让你展示自己，反正从应聘开始到面试结束，给人的感觉是极其不专业，和 BAT 比差一截。</p>\n\n<p>最后问我是不是一定去上海不服从调剂，愿不愿意来北京，我说不愿意，然后出门我就知道肯定没戏，如果说愿意去北京，说不定能过。虽然感觉不好，但这是一个给 22 万还不加班的好地方啊。</p>\n\n<h2 id=\"\">天津渣打科营</h2>\n\n<p>这是一个传说中养老的地方，天津能给 11k 还不加班的公司，也是有点神了。它组织了一个 Open Day，我去了，公司给人感觉很 low，原因是它在带领大家参观的时候，主要介绍了 pantry，免费零食啥的，我觉得如果一个公司只能介绍这些东西了，那它也实在是没别的可说了。 在职员工做宣传的时候也很搞笑，她夸了渣打很好很不错，在她毕业求职各种碰壁各种不要她的时候收留了她，给了她机会。这么说的确是很好啊，但换个角度讲，那不是相当于它的要人标准低么？反正员工给人的整体感觉是眼界不够开阔。</p>\n\n<p>个人曾在渣打对面的企鹅呆了三个月，开发区的生活品质太差劲了，物价贵的要死，空气差的要死。Open Day 的时候问了问领队，可不可能 relocate，领队说在马来和印度还有科营。我靠，仔细思考了一下，难道我要 relocate 到印度吃飞饼和咖喱鸡吗？领队还说这里不保证不加班，那就完全没有兴趣了。</p>\n\n<h2 id=\"worldquant\">Worldquant</h2>\n\n<p>这家一开始是想去的，结果一方面发现它永远在招人，另一方面发现glassdoor 上的评价很差，于是就没有参加笔试。</p>\n\n<h2 id=\"cisco\">Cisco 杭州、上海</h2>\n\n<p>简历过了，但是天津没有笔试考场，需要去北邮笔试，关键是和日本 indeed 的在线笔试时间一样，冲突无法避免，于是没去。</p>\n\n<h2 id=\"ubssingapore\">UBS Singapore</h2>\n\n<p>瑞银感觉相当不错，作死地投了新加坡和香港，而并非上海。然后发来了 Online Test，题目和行测差不多，做完之后一个月左右收到拒信，情理之中。</p>\n\n<h2 id=\"goldmansachshk\">Goldman Sachs HK</h2>\n\n<p>同样作死地没投北京，而是投了香港。这次连 Online Test 都没有，好像没收到拒信，石沉大海。据说他们喜欢要实习生转正的。</p>\n\n<hr />","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436506912625,"created_by":1,"updated_at":1453555533644,"updated_by":1,"published_at":1436516436147,"published_by":1},{"id":15,"uuid":"0123cd49-fd4e-40a1-8449-d18398efa860","title":"使用 Splint 检测缓冲区溢出漏洞","slug":"huan-chong-qu-lou-dong","markdown":"Splint 是一个比较常用的静态分析工具，缓冲区溢出漏洞，或者说缓冲区溢出攻击，也是信息安全领域的基础知识，本文以此对用静态分析工具进行漏洞检测做一个最基本的例子。\n\n##Splint\n[Splint](http://www.splint.org/) 是一个开源的静态代码检测工具,用于检查 C 语言程序安全弱点和编码错误。从官网下载源码：http://www.splint.org/downloads/splint-3.1.2.src.tgz \n\n    tar xvzf splint-3.1.2.src.tgz\n    cd splint-3.1.2\n    ./configure\n    make\n    sudo make install\n\n然后，即可在终端使用。\n\n##缓冲区溢出基础\n缓冲区溢出是经典的安全漏洞，想理解它的话，需要对程序运行时系统堆栈的运行原理有基本的了解。简单地讲，一个程序能实现函数调用，主要是依赖堆栈的存在。学过计算机原理的都应该知道，计算机执行程序的方法就是 CPU 从内存中一条一条地取出指令，然后执行。而究竟去什么地方取指令，取决于 `EIP` 寄存器，`EIP` 里面记录了下一条指令的存放地址，如果想实现函数调用，或者说实现一个跳转，那么需要修改 `EIP` 的值，问题在于，函数执行完了之后怎么回到原来的调用处继续往下执行呢？这个过程必然需要堆栈帮忙，保存跳转前的各种状态，方便函数执行完毕后，返回主程序时，把上下文恢复成原来的情况。\n\n程序中的每个函数都有自己的栈帧，关于栈帧不多解释了，可以参考《Linux C 程序设计大全》或者网络博客等等任何有关栈帧和内存管理的文章。\n\n考虑下面一段程序：\n\n<pre><code>\nint seeding (int a, int b)\n{\n    char buf[32];\n    return 0;\n}\nint main()\n{\n    ret = seeding(2, 5);\n    return 0;\n}\n</code></pre>\n\n在主函数中调用了一个 `seeding` 函数，那么主函数里面的逻辑如果用汇编来表示，大体上就是：\n\n<pre><code>\npush 5\npush 2\npush addr_of_return\ncall seeding\n</code></pre>\n\n而在 `seeding` 里面，则会 `push ebp`, `mov esp, ebp`，保护现场，进入自己的栈帧，等函数执行完毕，会把 `ebp` 恢复，之后根据 `addr_of_return` 的值修改 `EIP`，返回到主函数中。\n\n画图不太方便， 借用网络的一张图进行示意，函数调用过程堆栈的情况大体是这样。\n<br />\n![](/content/images/2015/07/huanchong.jpg)\n<br />\n\n不用管右边，只看左边。压栈是从上往下压的，`data`上边的区域可以认为是主函数使用的，`data` 可以认为是存放了 a 和 b 两个参数，即 5 和 2，返回地址存放了主函数里面 `return` 语句的指令地址， `ebp` 存放了主函数的 `ebp`（`ebp` `esp`是什么意思这里不解释，只说重点）。缓冲区就是`buf[32]`，因为局部变量也是存放在栈里面的，所以如果往`buf`里面赋值的话，内容就存放在图上的缓冲区中。\n\n正常情况下，`seeding`函数返回的时候，会把图上的`ebp`值出栈，这样寄存器`ebp`就恢复到了`seeding`调用前的状态，之后把返回地址放到`EIP`中，这样，下一条指令自然就会执行主函数的 `return 0`语句，那么函数调用就成功结束，返回到了主函数中。\n\n下面问题来了，C 语言是不检查数组边界的，会根据你的输入一直往后面写，所以如果你往`buf[32]`里面存了 48 个字符，超过了数组的容量，那么由于缓冲区上面的空间是`ebp`和返回地址，所以超出的部分会覆盖掉这些地方原来的值。特别的，如果精心设计超出部分的值，让我们设计好的数字恰好覆盖掉返回地址，那么程序返回的时候，就不是返回到原来的主函数，而是跳转到我们想要执行的恶意代码了。\n\n这就是缓冲区溢出漏洞，也可以说是缓冲区溢出攻击，由于一般的做法是通过故意让缓冲区溢出，来打开一个 shell，所以这段用于溢出原缓冲区的代码又称为 shellcode。\n##构造带有缓冲区溢出漏洞的程序\n为了做实验，我们写一个带溢出漏洞的程序。顺便将上面的原理在实践中演示一下。\n\n首先是一个正常的程序，我们展示一下程序中调用栈的情况。源代码是:\n\n<pre><code>\n// filename: overflow.c\n#include &ltstdio.h&gt\n#include &ltstring.h&gt\n\nint func(char in[])\n{\n\tchar buf[10];\n\n\tstrcpy(buf, in);\n\treturn 0;\n}\n\nint main()\n{\n\tchar *in = \"myinput\";\n\tint ret;\n\n\tret = func(in);\n\n\treturn 0;\n}\n</code></pre>\n\n编译这段程序，注意要加上禁止堆栈保护选项：\n\n    gcc -g -fno-stack-protector overflow.c -o overflow\n\n编译后，使用 gdb 在 `func`里面的`return` 处下断点，观察内存、`esp`以及栈帧情况。结果如图所示。\n<br />\n![](/content/images/2015/07/over1.png)\n<br />\n<br />\n![](/content/images/2015/07/over2.png)\n<br />\n\n* 由于是 64 位系统，所以寄存器都是 rbp，rsp，实际就是上文的 ebp，esp。\n* 由于是 64 位系统，所以地址有点长。\n* 这里只关注第二张图，后文都说的是第二张图。\n\n可以看到，倒数第四行，rsp（堆栈栈顶） 指向了 dee0。在正数第三行开始，我们查看了 dee0 开始到 df10 的内存数据，对照 [ASCII](http://ascii.911cha.com/) 码表可以看到，堆栈最上面的元素（def0 那行）就是程序里面的 `myinput`，紧接着就是 ebp（df00 那行的前两个数据），而 df00 行的第三个数据 0x0040056f，就是返回地址，与图片倒数第一行给出的栈帧情况相符，倒数第一行表明，函数结束后，应该返回 main 的 40056f 处，和堆栈中写入的数据是一致的。所以实验结果与上节原理的解释是相符的，堆栈里面先是缓冲区，缓冲区上面是 ebp，再上面是返回地址。\n\n下面我们改动程序，让缓冲区溢出，覆盖掉返回地址。改动后的程序是这样：\n\n<pre><code>\n// filename: exploit.c\n#include &ltstdio.h&gt\n#include &ltstring.h&gt\n\nint exploit()\n{\n\tprintf(\"我是幼苗我自豪\\n\");\n}\n\nint func(char in[])\n{\n\tchar buf[16];\n\n\tstrcpy(buf, in);\n\treturn 0;\n}\n\nint main()\n{\n\tchar *in = \"1234567890123456\\x20\\xdf\\xff\\xff\\xff\\x7f\\xcc\\xcc\\x7d\\x05\\x40\\x00\";\n\t// char *in = \"123456789012345\"; 正常版本\n\tint ret;\n\n\tret = func(in);\n\treturn 0;\n}\n</code></pre>\n\n首先，程序里面多了一个 exploit 函数，这是我们想通过缓冲区溢出攻击来执行的恶意代码。可以注意到，func 里面 buf 的空间是 16，而在主函数中，给出的输入 in，前面的数字正好有 16 个，恰好用完 buf 的空间，后面以 16 进制方式硬编码的输入，就是我们想要通过溢出来覆盖掉 ebp 和返回地址的数据。\n\n我们先使用 main 里面的正常版本输入来编译这个程序，看一下堆栈的情况。\n<br />\n![](/content/images/2015/07/exp1.png)\n<br />\n\n和前文一样，第四行表明 rsp 是 ded0，dee0 那行数据就是输入 in 存储的字符，可以和 ASCII 码表对照来看。def0 行的前两个数据是 ebp，第三个数据就是返回地址，和倒数第一行的栈帧数据相符。\n\n然后，更改前文源码变成溢出版本，将正常版本注释掉，编译并反汇编，查看 exploit 的函数地址。\n<br />\n![](/content/images/2015/07/exp3.png)\n<br />\n可以看到，exploit 的调用地址是 40057d，这个数字已经填写在前文源码中 in 的最后几个字节上了， in 的作用就是让 buf 溢出，然后让这几个字节恰好覆盖在堆栈里返回地址的位置上。\n\n用 gdb 看一下带漏洞的这个程序，结果是：\n<br />\n![](/content/images/2015/07/exp4.png)\n<br />\n不难发现，倒数第九行 def0 行就是正常的缓冲区数据，df00 行的前两个数据是 ebp，然而 ebp 已经被我用溢出的方法非法改掉，对照前文的正常版本可以看出，第二个数据应该是 0x00007fff，我在输入 in 里面，改成了 0xcccc7fff。\n\n当然，最重要的是，第三个数据***返回地址***，已经被溢出为 40057d，变成了 exploit 的调用地址，而并非原来的主函数返回地址，同时可以看到，由于非法把返回地址改写，最后几行 gdb 探测栈帧出现了异常，已经无法显示正常的栈帧。\n\n最后，执行这个带有溢出攻击的程序，结果是：\n<br />\n![](/content/images/2015/07/exp5.png)\n<br />\n\n在源码中，并没有调用 exploit 的语句，然而我们却通过利用缓冲区溢出漏洞，让这个函数执行了。\n\n##使用 Splint 分析漏洞程序\n\n带漏洞的程序已经编出来了，最后，用静态分析工具 Splint 来分析一下它。假定我们完全不知道 exploit 这个程序的情况，就是别人给我的，那么，cd 到程序目录：\n\n    splint +bounds exploit.c\n\n分析结果是：\n<br />\n![](/content/images/2015/07/exp6.png)\n<br />\n\n它分析出 3 条警告，第一条说 exploit 函数里面没写 return 语句，第二条就是我们需要的，它展示出 strcpy 是不安全的，可能会出现 buffer 越界的隐患。（就是带有缓冲区溢出漏洞）\n\n这就是用静态工具分析出漏洞的一个简单例子。但它究竟是用什么技术分析出来的，那我就说不清了。\n\n文章所展示的层次，就是实验层次的***会用***，这工具的背后，就是各种语法分析，语义分析等等，那些学术原理。那些原理用来指导编写出这个工具。\n\n---","html":"<p>Splint 是一个比较常用的静态分析工具，缓冲区溢出漏洞，或者说缓冲区溢出攻击，也是信息安全领域的基础知识，本文以此对用静态分析工具进行漏洞检测做一个最基本的例子。</p>\n\n<h2 id=\"splint\">Splint</h2>\n\n<p><a href=\"http://www.splint.org/\">Splint</a> 是一个开源的静态代码检测工具,用于检查 C 语言程序安全弱点和编码错误。从官网下载源码：<a href=\"http://www.splint.org/downloads/splint-3.1.2.src.tgz\">http://www.splint.org/downloads/splint-3.1.2.src.tgz</a> </p>\n\n<pre><code>tar xvzf splint-3.1.2.src.tgz\ncd splint-3.1.2\n./configure\nmake\nsudo make install\n</code></pre>\n\n<p>然后，即可在终端使用。</p>\n\n<h2 id=\"\">缓冲区溢出基础</h2>\n\n<p>缓冲区溢出是经典的安全漏洞，想理解它的话，需要对程序运行时系统堆栈的运行原理有基本的了解。简单地讲，一个程序能实现函数调用，主要是依赖堆栈的存在。学过计算机原理的都应该知道，计算机执行程序的方法就是 CPU 从内存中一条一条地取出指令，然后执行。而究竟去什么地方取指令，取决于 <code>EIP</code> 寄存器，<code>EIP</code> 里面记录了下一条指令的存放地址，如果想实现函数调用，或者说实现一个跳转，那么需要修改 <code>EIP</code> 的值，问题在于，函数执行完了之后怎么回到原来的调用处继续往下执行呢？这个过程必然需要堆栈帮忙，保存跳转前的各种状态，方便函数执行完毕后，返回主程序时，把上下文恢复成原来的情况。</p>\n\n<p>程序中的每个函数都有自己的栈帧，关于栈帧不多解释了，可以参考《Linux C 程序设计大全》或者网络博客等等任何有关栈帧和内存管理的文章。</p>\n\n<p>考虑下面一段程序：</p>\n\n<pre><code>\nint seeding (int a, int b)\n{\n    char buf[32];\n    return 0;\n}\nint main()\n{\n    ret = seeding(2, 5);\n    return 0;\n}\n</code></pre>\n\n<p>在主函数中调用了一个 <code>seeding</code> 函数，那么主函数里面的逻辑如果用汇编来表示，大体上就是：</p>\n\n<pre><code>\npush 5\npush 2\npush addr_of_return\ncall seeding\n</code></pre>\n\n<p>而在 <code>seeding</code> 里面，则会 <code>push ebp</code>, <code>mov esp, ebp</code>，保护现场，进入自己的栈帧，等函数执行完毕，会把 <code>ebp</code> 恢复，之后根据 <code>addr_of_return</code> 的值修改 <code>EIP</code>，返回到主函数中。</p>\n\n<p>画图不太方便， 借用网络的一张图进行示意，函数调用过程堆栈的情况大体是这样。\n<br /> <br />\n<img src=\"/content/images/2015/07/huanchong.jpg\" alt=\"\" />\n<br /></p>\n\n<p>不用管右边，只看左边。压栈是从上往下压的，<code>data</code>上边的区域可以认为是主函数使用的，<code>data</code> 可以认为是存放了 a 和 b 两个参数，即 5 和 2，返回地址存放了主函数里面 <code>return</code> 语句的指令地址， <code>ebp</code> 存放了主函数的 <code>ebp</code>（<code>ebp</code> <code>esp</code>是什么意思这里不解释，只说重点）。缓冲区就是<code>buf[32]</code>，因为局部变量也是存放在栈里面的，所以如果往<code>buf</code>里面赋值的话，内容就存放在图上的缓冲区中。</p>\n\n<p>正常情况下，<code>seeding</code>函数返回的时候，会把图上的<code>ebp</code>值出栈，这样寄存器<code>ebp</code>就恢复到了<code>seeding</code>调用前的状态，之后把返回地址放到<code>EIP</code>中，这样，下一条指令自然就会执行主函数的 <code>return 0</code>语句，那么函数调用就成功结束，返回到了主函数中。</p>\n\n<p>下面问题来了，C 语言是不检查数组边界的，会根据你的输入一直往后面写，所以如果你往<code>buf[32]</code>里面存了 48 个字符，超过了数组的容量，那么由于缓冲区上面的空间是<code>ebp</code>和返回地址，所以超出的部分会覆盖掉这些地方原来的值。特别的，如果精心设计超出部分的值，让我们设计好的数字恰好覆盖掉返回地址，那么程序返回的时候，就不是返回到原来的主函数，而是跳转到我们想要执行的恶意代码了。</p>\n\n<p>这就是缓冲区溢出漏洞，也可以说是缓冲区溢出攻击，由于一般的做法是通过故意让缓冲区溢出，来打开一个 shell，所以这段用于溢出原缓冲区的代码又称为 shellcode。</p>\n\n<h2 id=\"\">构造带有缓冲区溢出漏洞的程序</h2>\n\n<p>为了做实验，我们写一个带溢出漏洞的程序。顺便将上面的原理在实践中演示一下。</p>\n\n<p>首先是一个正常的程序，我们展示一下程序中调用栈的情况。源代码是:</p>\n\n<pre><code>\n// filename: overflow.c\n#include &ltstdio.h&gt\n#include &ltstring.h&gt\n\nint func(char in[])\n{\n    char buf[10];\n\n    strcpy(buf, in);\n    return 0;\n}\n\nint main()\n{\n    char *in = \"myinput\";\n    int ret;\n\n    ret = func(in);\n\n    return 0;\n}\n</code></pre>\n\n<p>编译这段程序，注意要加上禁止堆栈保护选项：</p>\n\n<pre><code>gcc -g -fno-stack-protector overflow.c -o overflow\n</code></pre>\n\n<p>编译后，使用 gdb 在 <code>func</code>里面的<code>return</code> 处下断点，观察内存、<code>esp</code>以及栈帧情况。结果如图所示。\n<br /> <br />\n<img src=\"/content/images/2015/07/over1.png\" alt=\"\" />\n<br /> <br />\n<br /> <br />\n<img src=\"/content/images/2015/07/over2.png\" alt=\"\" />\n<br /></p>\n\n<ul>\n<li>由于是 64 位系统，所以寄存器都是 rbp，rsp，实际就是上文的 ebp，esp。</li>\n<li>由于是 64 位系统，所以地址有点长。</li>\n<li>这里只关注第二张图，后文都说的是第二张图。</li>\n</ul>\n\n<p>可以看到，倒数第四行，rsp（堆栈栈顶） 指向了 dee0。在正数第三行开始，我们查看了 dee0 开始到 df10 的内存数据，对照 <a href=\"http://ascii.911cha.com/\">ASCII</a> 码表可以看到，堆栈最上面的元素（def0 那行）就是程序里面的 <code>myinput</code>，紧接着就是 ebp（df00 那行的前两个数据），而 df00 行的第三个数据 0x0040056f，就是返回地址，与图片倒数第一行给出的栈帧情况相符，倒数第一行表明，函数结束后，应该返回 main 的 40056f 处，和堆栈中写入的数据是一致的。所以实验结果与上节原理的解释是相符的，堆栈里面先是缓冲区，缓冲区上面是 ebp，再上面是返回地址。</p>\n\n<p>下面我们改动程序，让缓冲区溢出，覆盖掉返回地址。改动后的程序是这样：</p>\n\n<pre><code>\n// filename: exploit.c\n#include &ltstdio.h&gt\n#include &ltstring.h&gt\n\nint exploit()\n{\n    printf(\"我是幼苗我自豪\\n\");\n}\n\nint func(char in[])\n{\n    char buf[16];\n\n    strcpy(buf, in);\n    return 0;\n}\n\nint main()\n{\n    char *in = \"1234567890123456\\x20\\xdf\\xff\\xff\\xff\\x7f\\xcc\\xcc\\x7d\\x05\\x40\\x00\";\n    // char *in = \"123456789012345\"; 正常版本\n    int ret;\n\n    ret = func(in);\n    return 0;\n}\n</code></pre>\n\n<p>首先，程序里面多了一个 exploit 函数，这是我们想通过缓冲区溢出攻击来执行的恶意代码。可以注意到，func 里面 buf 的空间是 16，而在主函数中，给出的输入 in，前面的数字正好有 16 个，恰好用完 buf 的空间，后面以 16 进制方式硬编码的输入，就是我们想要通过溢出来覆盖掉 ebp 和返回地址的数据。</p>\n\n<p>我们先使用 main 里面的正常版本输入来编译这个程序，看一下堆栈的情况。\n<br /> <br />\n<img src=\"/content/images/2015/07/exp1.png\" alt=\"\" />\n<br /></p>\n\n<p>和前文一样，第四行表明 rsp 是 ded0，dee0 那行数据就是输入 in 存储的字符，可以和 ASCII 码表对照来看。def0 行的前两个数据是 ebp，第三个数据就是返回地址，和倒数第一行的栈帧数据相符。</p>\n\n<p>然后，更改前文源码变成溢出版本，将正常版本注释掉，编译并反汇编，查看 exploit 的函数地址。\n<br /> <br />\n<img src=\"/content/images/2015/07/exp3.png\" alt=\"\" />\n<br /> <br />\n可以看到，exploit 的调用地址是 40057d，这个数字已经填写在前文源码中 in 的最后几个字节上了， in 的作用就是让 buf 溢出，然后让这几个字节恰好覆盖在堆栈里返回地址的位置上。</p>\n\n<p>用 gdb 看一下带漏洞的这个程序，结果是：\n<br /> <br />\n<img src=\"/content/images/2015/07/exp4.png\" alt=\"\" />\n<br /> <br />\n不难发现，倒数第九行 def0 行就是正常的缓冲区数据，df00 行的前两个数据是 ebp，然而 ebp 已经被我用溢出的方法非法改掉，对照前文的正常版本可以看出，第二个数据应该是 0x00007fff，我在输入 in 里面，改成了 0xcccc7fff。</p>\n\n<p>当然，最重要的是，第三个数据<strong><em>返回地址</em></strong>，已经被溢出为 40057d，变成了 exploit 的调用地址，而并非原来的主函数返回地址，同时可以看到，由于非法把返回地址改写，最后几行 gdb 探测栈帧出现了异常，已经无法显示正常的栈帧。</p>\n\n<p>最后，执行这个带有溢出攻击的程序，结果是：\n<br /> <br />\n<img src=\"/content/images/2015/07/exp5.png\" alt=\"\" />\n<br /></p>\n\n<p>在源码中，并没有调用 exploit 的语句，然而我们却通过利用缓冲区溢出漏洞，让这个函数执行了。</p>\n\n<h2 id=\"splint\">使用 Splint 分析漏洞程序</h2>\n\n<p>带漏洞的程序已经编出来了，最后，用静态分析工具 Splint 来分析一下它。假定我们完全不知道 exploit 这个程序的情况，就是别人给我的，那么，cd 到程序目录：</p>\n\n<pre><code>splint +bounds exploit.c\n</code></pre>\n\n<p>分析结果是：\n<br /> <br />\n<img src=\"/content/images/2015/07/exp6.png\" alt=\"\" />\n<br /></p>\n\n<p>它分析出 3 条警告，第一条说 exploit 函数里面没写 return 语句，第二条就是我们需要的，它展示出 strcpy 是不安全的，可能会出现 buffer 越界的隐患。（就是带有缓冲区溢出漏洞）</p>\n\n<p>这就是用静态工具分析出漏洞的一个简单例子。但它究竟是用什么技术分析出来的，那我就说不清了。</p>\n\n<p>文章所展示的层次，就是实验层次的<strong><em>会用</em></strong>，这工具的背后，就是各种语法分析，语义分析等等，那些学术原理。那些原理用来指导编写出这个工具。</p>\n\n<hr />","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436948768352,"created_by":1,"updated_at":1437007144770,"updated_by":1,"published_at":1436962190361,"published_by":1},{"id":16,"uuid":"e6359926-f2b6-4a1f-a947-3dbc845bdbf0","title":"图灵停机问题和 Rice 定理","slug":"rice","markdown":"这么哲学的问题，不知道该从哪里扯起啊。\n\n##图灵停机\n\n假设我是一个”内裤收集狂魔“，咳...不是，是”程序收集狂魔“，喜欢收集各式各样的程序，于是，每天世界各地的程序员都给我发来他们写的各种奇葩程序。我作为一个收藏家，起码要判断一下他们发来的程序是否可以在特定的输入下正常结束退出，要知道，有很多学渣写的程序会不明不白地陷入死循环，无响应之类的，这种程序我就没必要收藏了。\n\n但是，每天收到的程序太多了，根本不可能一个一个手工去试它们能不能正常结束。我作为学神，当然希望写一个判断程序，来帮助我去自动测试这些程序，把不能正常结束的程序都挑出来。那么问题来了，我能不能写出这样的程序呢？\n\n图灵告诉我说，不能。图灵停机问题描述的是：***是否存在一个程序，它能够计算任何程序在给定输入下是否会运行结束。***\n\n假设我文曲星附身，灵光大闪，真的写出这样一个程序，那么就先假设有这样一个函数，名字是 `CheckHalt(program, input)`，那么程序写出来大致就是这样。\n\n<pre><code>\nbool CheckHalt(program, input) \n{ \n　　 if(program halts on input) \n　　     return true; \n　　 else \n　　     return false; \n} \n</code></pre>\n\n逻辑一目了然，就是如果被检测的程序在给定的输入下停机了，就返回真，表明可以停机，否则，就返回假，表明不能停机。此时，再构造一个自己给自己找病的函数 Check，参数是一个程序：\n\n<pre><code>\nvoid Check(program)\n{\n    if(CheckHalt(program, program))\n        while(1);\n    else\n        return;\n}\n</code></pre>\n这个时候，来考虑一下`Check(Check)` 是否会停机（就是正常退出），就是说自己调用自己的情况。\n\n* 如果`Check(Check)`可以停机，那么一定走的是 `else` 分支，那么`if(CheckHalt(program, program))`应该判断为假。也就是说，`CheckHalt(program, program)`返回的是 false，即程序不可以停机，与假设能停机是矛盾的。\n* 如果`Check(Check)`不可以停机，也就是说，它陷入了 `while(1);`的死循环，则`if(CheckHalt(program, program))`返回的是 true，即程序可以停机，与假设又是矛盾的。\n\n所以，灵光大闪是瞎闪，文曲星也没附身，这样的程序根本不存在。\n\n像给你一个输入 x，你写个函数，给我计算以 x 为半径的圆的面积，这种能用编程语言写出来并且运行的，都是***可计算函数***。考虑的更一般化一些，函数就像个黑盒一样，你给它喂一个输入，它就会吐一个输出。那么在 Windows 系统上运行的可执行程序，某种角度看也是函数，你运行任何程序，都是你给它一个指令（输入），它做出预设好的反应（输出），比如你点右上角的红叉，那窗口会关闭。处理同一类问题有相同的算法，这样的函数是可计算函数。\n\n另外就是，如果一个程序 P 的效果和一个函数关系 f 的效果一样，那么就说 P 可以计算 f，f 是确定的，然而 P 却可以有 N 多个。比如给出半径求圆面积，这个计算公式，也就是函数关系 f(x) = Pi * r * r 是死的，是确定的。但是全班每个人写出的程序可能都不一样，有的人会多用几个中间变量，有的人会多输出几个字使程序更加友好等等。\n\n以上是可计算函数，而像图灵停机问题这种，就是***不可计算函数***，或者说是***不可判定的***。不可计算函数也有很多，比如，***不存在一个程序，它能够判断任意两个程序是否能计算同样的 f***。\n\n##Rice 定理\n世界上函数这么多，怎么才能判断某个函数是不是可计算呢。Rice 定理可以帮到我们。Rice 定理说的是：***有一个函数集合 S （就是说 S 是函数关系 f 的集合），并且 S 不是空集，也不是全部函数 f，那么程序 P 是否属于 S 是不可计算的***。\n\n这到底啥意思？\n\n比如计算圆面积的公式是一个函数，那么假定集合 S 就包含这一个元素，显然 S 不是空集也不是全部函数，那么如果我想写一个自动判作业程序，自动判断学生交上来的作业程序 P 是否正确计算了这个圆面积，这样的判作业程序是不存在的。\n\n这可能和现实的感觉不一样，你会感觉好像有这样的程序，其实不是，现实中的确可以写出来，但写出来的程序会有误判，因为这是一个不可计算问题，现实的解决方案只能做到近似。现实生活中有非常多的具有判别功能的程序，存在着误报和漏报，因为它们解决的都是不可计算问题，这些程序做的，只是权衡误报率和漏报率，根据需要给出一个较优解。\n\n\n##回到静态分析\n静态分析的文章，引用 Rice 定理，无非是想说明，完全准确的静态分析程序是不存在的，或者说普适的静态分析算法，静态分析工具是不存在的。\n\n* 世界上不存在一个程序，可以检测任何程序 P 是否具有某个安全漏洞。\n* 世界上不存在一个程序，可以检测任何程序 P 是否进入了某个 if 分支。\n* 世界上不存在一个程序，可以检测任何程序 P 是否...\n\n所以文章中 (《基于静态分析的安全漏洞检测技术研究》) 会说：***由于程序的任何非平凡性质都是不可判定的，所以静态分析算法只能给出源程序某些性质的不完全或不精确的解。***\n\n上一篇文章， Splint 给出分析结果时用的动词都是 may （去看看图片，是不是 may），最后它分析的对不对，还是需要人来判断的。 \n<br />\n![](/content/images/2015/07/xuexi.gif)\n<br />\n\n---","html":"<p>这么哲学的问题，不知道该从哪里扯起啊。</p>\n\n<h2 id=\"\">图灵停机</h2>\n\n<p>假设我是一个”内裤收集狂魔“，咳...不是，是”程序收集狂魔“，喜欢收集各式各样的程序，于是，每天世界各地的程序员都给我发来他们写的各种奇葩程序。我作为一个收藏家，起码要判断一下他们发来的程序是否可以在特定的输入下正常结束退出，要知道，有很多学渣写的程序会不明不白地陷入死循环，无响应之类的，这种程序我就没必要收藏了。</p>\n\n<p>但是，每天收到的程序太多了，根本不可能一个一个手工去试它们能不能正常结束。我作为学神，当然希望写一个判断程序，来帮助我去自动测试这些程序，把不能正常结束的程序都挑出来。那么问题来了，我能不能写出这样的程序呢？</p>\n\n<p>图灵告诉我说，不能。图灵停机问题描述的是：<strong><em>是否存在一个程序，它能够计算任何程序在给定输入下是否会运行结束。</em></strong></p>\n\n<p>假设我文曲星附身，灵光大闪，真的写出这样一个程序，那么就先假设有这样一个函数，名字是 <code>CheckHalt(program, input)</code>，那么程序写出来大致就是这样。</p>\n\n<pre><code>\nbool CheckHalt(program, input) \n{ \n　　 if(program halts on input) \n　　     return true; \n　　 else \n　　     return false; \n} \n</code></pre>\n\n<p>逻辑一目了然，就是如果被检测的程序在给定的输入下停机了，就返回真，表明可以停机，否则，就返回假，表明不能停机。此时，再构造一个自己给自己找病的函数 Check，参数是一个程序：</p>\n\n<pre><code>\nvoid Check(program)\n{\n    if(CheckHalt(program, program))\n        while(1);\n    else\n        return;\n}\n</code></pre>\n\n<p>这个时候，来考虑一下<code>Check(Check)</code> 是否会停机（就是正常退出），就是说自己调用自己的情况。</p>\n\n<ul>\n<li>如果<code>Check(Check)</code>可以停机，那么一定走的是 <code>else</code> 分支，那么<code>if(CheckHalt(program, program))</code>应该判断为假。也就是说，<code>CheckHalt(program, program)</code>返回的是 false，即程序不可以停机，与假设能停机是矛盾的。</li>\n<li>如果<code>Check(Check)</code>不可以停机，也就是说，它陷入了 <code>while(1);</code>的死循环，则<code>if(CheckHalt(program, program))</code>返回的是 true，即程序可以停机，与假设又是矛盾的。</li>\n</ul>\n\n<p>所以，灵光大闪是瞎闪，文曲星也没附身，这样的程序根本不存在。</p>\n\n<p>像给你一个输入 x，你写个函数，给我计算以 x 为半径的圆的面积，这种能用编程语言写出来并且运行的，都是<strong><em>可计算函数</em></strong>。考虑的更一般化一些，函数就像个黑盒一样，你给它喂一个输入，它就会吐一个输出。那么在 Windows 系统上运行的可执行程序，某种角度看也是函数，你运行任何程序，都是你给它一个指令（输入），它做出预设好的反应（输出），比如你点右上角的红叉，那窗口会关闭。处理同一类问题有相同的算法，这样的函数是可计算函数。</p>\n\n<p>另外就是，如果一个程序 P 的效果和一个函数关系 f 的效果一样，那么就说 P 可以计算 f，f 是确定的，然而 P 却可以有 N 多个。比如给出半径求圆面积，这个计算公式，也就是函数关系 f(x) = Pi * r * r 是死的，是确定的。但是全班每个人写出的程序可能都不一样，有的人会多用几个中间变量，有的人会多输出几个字使程序更加友好等等。</p>\n\n<p>以上是可计算函数，而像图灵停机问题这种，就是<strong><em>不可计算函数</em></strong>，或者说是<strong><em>不可判定的</em></strong>。不可计算函数也有很多，比如，<strong><em>不存在一个程序，它能够判断任意两个程序是否能计算同样的 f</em></strong>。</p>\n\n<h2 id=\"rice\">Rice 定理</h2>\n\n<p>世界上函数这么多，怎么才能判断某个函数是不是可计算呢。Rice 定理可以帮到我们。Rice 定理说的是：<strong><em>有一个函数集合 S （就是说 S 是函数关系 f 的集合），并且 S 不是空集，也不是全部函数 f，那么程序 P 是否属于 S 是不可计算的</em></strong>。</p>\n\n<p>这到底啥意思？</p>\n\n<p>比如计算圆面积的公式是一个函数，那么假定集合 S 就包含这一个元素，显然 S 不是空集也不是全部函数，那么如果我想写一个自动判作业程序，自动判断学生交上来的作业程序 P 是否正确计算了这个圆面积，这样的判作业程序是不存在的。</p>\n\n<p>这可能和现实的感觉不一样，你会感觉好像有这样的程序，其实不是，现实中的确可以写出来，但写出来的程序会有误判，因为这是一个不可计算问题，现实的解决方案只能做到近似。现实生活中有非常多的具有判别功能的程序，存在着误报和漏报，因为它们解决的都是不可计算问题，这些程序做的，只是权衡误报率和漏报率，根据需要给出一个较优解。</p>\n\n<h2 id=\"\">回到静态分析</h2>\n\n<p>静态分析的文章，引用 Rice 定理，无非是想说明，完全准确的静态分析程序是不存在的，或者说普适的静态分析算法，静态分析工具是不存在的。</p>\n\n<ul>\n<li>世界上不存在一个程序，可以检测任何程序 P 是否具有某个安全漏洞。</li>\n<li>世界上不存在一个程序，可以检测任何程序 P 是否进入了某个 if 分支。</li>\n<li>世界上不存在一个程序，可以检测任何程序 P 是否...</li>\n</ul>\n\n<p>所以文章中 (《基于静态分析的安全漏洞检测技术研究》) 会说：<strong><em>由于程序的任何非平凡性质都是不可判定的，所以静态分析算法只能给出源程序某些性质的不完全或不精确的解。</em></strong></p>\n\n<p>上一篇文章， Splint 给出分析结果时用的动词都是 may （去看看图片，是不是 may），最后它分析的对不对，还是需要人来判断的。 \n<br /> <br />\n<img src=\"/content/images/2015/07/xuexi.gif\" alt=\"\" />\n<br /></p>\n\n<hr />","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1436966476060,"created_by":1,"updated_at":1449295806442,"updated_by":1,"published_at":1437011386443,"published_by":1},{"id":17,"uuid":"43bebadb-8488-4de7-9d45-f9392710d670","title":"再来一年-肉身翻墙成功的经验","slug":"zai-lai-yi-nian","markdown":"今年再参加了一年招聘，应聘的地方不多，主要是启程日本和新加坡。\n\n##Singapore Management University\n\n六月份的时候，新加坡管理大学招 RE 了，因为和老师认识，就投了简历，面试也是中规中矩吧，随便聊了聊。老师对我是比较满意的，只是需要把简历送到 NRF （National Research Foundation）去审批，因为老师发工资的钱是 NRF 给的。\n\n然而，NRF 把我拒掉了，因为不招外国人，这个木有办法啊。这两年新加坡的政策是越来越严了。EP 和 PR 也是越来越难批，对中国人不太友好。\n\n##[teamLab](http://www.team-lab.net/)\n通过启程日本项目，参加了 teamLab 的招聘，这是一家充满创意的公司，公司在日本来说，也算比较大了，到底做什么业务的，我到现在也没弄明白，反正好像是什么都做，特别的艺术范儿。\n\n招 IT 开发好像也不怎么限定技术，个人感觉比较偏好图形图像多媒体的，或者智能推荐的。\n\n###teamLab 一面\n简历关通过的也就几十个人吧。来了两个面试官，一个是同济大学毕业的中国人，一个是日本人，这个日本人英语不错，先是用英语做了一个简单的微型宣讲会，讲了讲公司做什么。之后就是笔试，给半个小时左右作答，可以写算法，也可以写描述，反正怎么想的怎么写，答完后，每个人给十分钟讲自己的设计。也就是说，每个人的一面就这十分钟。\n\n我的一面是中国面试官，我的方案很常规，给出了一个数学公式，也就不需要多余的废话了。他又问了问简历，十分钟很快就过了。然后一面也过了。\n\n###teamLab 二面（终面）\n一面大部分人被刷掉了，二面没剩下几个人。二面的话由于是两个面试官一起，所以基本只能说英语。主要是问两类问题。一类是为什么来日本，为什么来我们公司，希望将来做什么样的工作这一类的 HR 问题。另外一类就是顺着简历问项目。\n\n日本面试官问我研究生做了什么项目，我就给他讲了用支持向量机进行代码混淆的项目，这种混淆可以增加反编译和逆向的难度。然而很遗憾的是，我做的这个比较底层，面试官对汇编不太懂，所以一直给他讲了半个小时，那位中国面试官虽然明白我的意思，但是由于这项目专业性太强，也不知道怎么翻译成日语。日本面试官对于我项目用到的那些东西的英文又不懂，日语英语都不好使，然后就各种无奈。基本我的面试时间比别人多了一倍。\n\n最后的结果是，终面通过。他们先回日本，回去后找时间再 Skype 加面一次，因为面试官没听懂项目，没太弄明白我的技术水平。二面后因同样情况需要加面的一共有四个同学，我有点怀疑这次派来的面试官是不是有点水，四个人都没弄明白技术水准。\n\n##[MonotaRO](http://www.monotaro.com) \n去年 MonotaRO 差一点成功，今天又报了一次。很幸运简历又通过了，然后迎来了今年的面试。\n###MonotaRO 一面\n一面是两个面试官对两个面试者，外加一名翻译。今年的一面比较轻松，基本主要就问了问为什么这么想来，两次都报我们。技术题去年都答过了，今年也没让我再答，因为没什么意义。和我一起面试的是上海交大的一个同学，全程主要是他在写代码和回答问题。\n\n###MonotaRO 二面\n一面就这么波澜不惊的过了，二面其实也没问什么，随便聊了聊，基本都是 HR 问题，问了问去日本的动机是什么，准备如何学日语，为什么选择辞职来我们这等等。面试结束后十几分钟吧，就给 offer 了。\n\n本来 MonotaRO 二面后，安排的是 teamLab 的加面。不过 teamLab 的工资和 MonotaRO 差不多，但后者在小城市尼崎，还不怎么加班。这生活品质哪里高，一下就能看出来啊，所以就没必要再面了。 \n\n就这样结束了长达两年半的长征，如果这次不成功，或许会再参加一年启程日本，也或许会考虑新西兰和澳洲，毕竟不同的时间点，最优的选择是不一样的。不过好在还是成功了，未来是光明的。","html":"<p>今年再参加了一年招聘，应聘的地方不多，主要是启程日本和新加坡。</p>\n\n<h2 id=\"singaporemanagementuniversity\">Singapore Management University</h2>\n\n<p>六月份的时候，新加坡管理大学招 RE 了，因为和老师认识，就投了简历，面试也是中规中矩吧，随便聊了聊。老师对我是比较满意的，只是需要把简历送到 NRF （National Research Foundation）去审批，因为老师发工资的钱是 NRF 给的。</p>\n\n<p>然而，NRF 把我拒掉了，因为不招外国人，这个木有办法啊。这两年新加坡的政策是越来越严了。EP 和 PR 也是越来越难批，对中国人不太友好。</p>\n\n<h2 id=\"teamlabhttpwwwteamlabnet\"><a href=\"http://www.team-lab.net/\">teamLab</a></h2>\n\n<p>通过启程日本项目，参加了 teamLab 的招聘，这是一家充满创意的公司，公司在日本来说，也算比较大了，到底做什么业务的，我到现在也没弄明白，反正好像是什么都做，特别的艺术范儿。</p>\n\n<p>招 IT 开发好像也不怎么限定技术，个人感觉比较偏好图形图像多媒体的，或者智能推荐的。</p>\n\n<h3 id=\"teamlab\">teamLab 一面</h3>\n\n<p>简历关通过的也就几十个人吧。来了两个面试官，一个是同济大学毕业的中国人，一个是日本人，这个日本人英语不错，先是用英语做了一个简单的微型宣讲会，讲了讲公司做什么。之后就是笔试，给半个小时左右作答，可以写算法，也可以写描述，反正怎么想的怎么写，答完后，每个人给十分钟讲自己的设计。也就是说，每个人的一面就这十分钟。</p>\n\n<p>我的一面是中国面试官，我的方案很常规，给出了一个数学公式，也就不需要多余的废话了。他又问了问简历，十分钟很快就过了。然后一面也过了。</p>\n\n<h3 id=\"teamlab\">teamLab 二面（终面）</h3>\n\n<p>一面大部分人被刷掉了，二面没剩下几个人。二面的话由于是两个面试官一起，所以基本只能说英语。主要是问两类问题。一类是为什么来日本，为什么来我们公司，希望将来做什么样的工作这一类的 HR 问题。另外一类就是顺着简历问项目。</p>\n\n<p>日本面试官问我研究生做了什么项目，我就给他讲了用支持向量机进行代码混淆的项目，这种混淆可以增加反编译和逆向的难度。然而很遗憾的是，我做的这个比较底层，面试官对汇编不太懂，所以一直给他讲了半个小时，那位中国面试官虽然明白我的意思，但是由于这项目专业性太强，也不知道怎么翻译成日语。日本面试官对于我项目用到的那些东西的英文又不懂，日语英语都不好使，然后就各种无奈。基本我的面试时间比别人多了一倍。</p>\n\n<p>最后的结果是，终面通过。他们先回日本，回去后找时间再 Skype 加面一次，因为面试官没听懂项目，没太弄明白我的技术水平。二面后因同样情况需要加面的一共有四个同学，我有点怀疑这次派来的面试官是不是有点水，四个人都没弄明白技术水准。</p>\n\n<h2 id=\"monotarohttpwwwmonotarocom\"><a href=\"http://www.monotaro.com\">MonotaRO</a></h2>\n\n<p>去年 MonotaRO 差一点成功，今天又报了一次。很幸运简历又通过了，然后迎来了今年的面试。</p>\n\n<h3 id=\"monotaro\">MonotaRO 一面</h3>\n\n<p>一面是两个面试官对两个面试者，外加一名翻译。今年的一面比较轻松，基本主要就问了问为什么这么想来，两次都报我们。技术题去年都答过了，今年也没让我再答，因为没什么意义。和我一起面试的是上海交大的一个同学，全程主要是他在写代码和回答问题。</p>\n\n<h3 id=\"monotaro\">MonotaRO 二面</h3>\n\n<p>一面就这么波澜不惊的过了，二面其实也没问什么，随便聊了聊，基本都是 HR 问题，问了问去日本的动机是什么，准备如何学日语，为什么选择辞职来我们这等等。面试结束后十几分钟吧，就给 offer 了。</p>\n\n<p>本来 MonotaRO 二面后，安排的是 teamLab 的加面。不过 teamLab 的工资和 MonotaRO 差不多，但后者在小城市尼崎，还不怎么加班。这生活品质哪里高，一下就能看出来啊，所以就没必要再面了。 </p>\n\n<p>就这样结束了长达两年半的长征，如果这次不成功，或许会再参加一年启程日本，也或许会考虑新西兰和澳洲，毕竟不同的时间点，最优的选择是不一样的。不过好在还是成功了，未来是光明的。</p>","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1449305412554,"created_by":1,"updated_at":1453555457344,"updated_by":1,"published_at":1449312409064,"published_by":1},{"id":18,"uuid":"a7c975e7-00c8-4e3b-a655-ce96e871d547","title":"Linux 环境下 Zeus 控制端的搭建和配置","slug":"zeus-control","markdown":"##简介\nZeus 是一款非常著名的黑客工具包，是在黑产行业被广泛使用的僵尸网络，主要用于窃取银行账户。该工具包于 2011 年泄露源码，并且其作者宣布退出犯罪软件的开发。本文详述如何在 Linux 下构建 LAMP（apache、php、mysql），安装 Zeus 控制端并运行。客户端的运行参照下一篇文章 。\n\n本人所使用的 Zeus 版本是1.2.4.2, 2011 年泄露源码的版本为 2.0.8.9，这两版本人都安装成功过，本文以 1.2.4.2 为例。\n\n##安装 Apache\n####安装 Apache2\n<code>sudo aptitude install apache2</code>\n####编辑 /etc/init.d/apache2/httpd.conf 来设定一个主机名，如果无法编辑，更改权限为 777\n<code>ServerName &lt;myhostname&gt;</code>\n####启动和测试 apache2\n<code>sudo /etc/init.d/apache2 start  </code>\n\n如果一切都正常的话，此时启动浏览器，输入`http://localhost`,会看到一个测试网页，表明安装成功。\n![](/content/images/2015/12/1.jpg)\n##安装 PHP5\n####暂时关闭 apache2\n<code>sudo /etc/init.d/apache2 stop</code>\n####安装 PHP5\n<code>sudo aptitude install php5 libapache2-mod-php5</code>\n####重新打开 apache2\n<code>sudo /etc/init.d/apache2 start</code>\n####在 /var/www 目录下，写一个测试页，用来测试 php5 是否可以正常运行。首先更改 /var/www 权限为 777，之后新建一个空文件，命名为 test.php，内容为\n<pre><code>\n&lt;?php\n    //file: test.php\n    phpinfo();\n?&gt;\n</code></pre>\n####打开浏览器，输入`http://localhost/test.php`，如果安装正确，可以看到相关信息\n![](/content/images/2015/12/2.jpg)\n####最后重启一下 apache2\n<code>sudo /etc/init.d/apache2 restart</code>\n##安装 MySQL\n####安装\n<code>sudo aptitude install mysql-server</code>\n####安装过程可能需要输入root用户的密码，请设定一个自己喜欢的，之后，运行一下 mysql，输入刚才设定的密码。\n<code>mysql -uroot -p</code>\n####安装成功\n![](/content/images/2015/12/1-1.jpg)\n##联动\n####让 MySQL 和 Apache 联动\n<code>sudo aptitude install libapache2-mod-auth-mysql php5-mysql</code>\n####重启 Apache2\n<code>sudo /etc/init.d/apache2 restart</code>\n####最后再安装一些可能会用到的扩展\n<code>sudo aptitude install php5 cli php5 curl php5 gd php5 imap php5 mcrypt</code>\n##控制端的安装\n经过以上步骤，LAMP 环境，也就是 Zeus 的控制端所需要的环境已经搭建完毕，之后，将 Zeus1.2.4.2 压缩包中提供的Server[php] 文件夹下的内容复制到 /var/www 下。\n<br />\n![](/content/images/2015/12/4.jpg)\n<br />\n上图由于我做过实验所以多了几个文件，如果你没有请不用担心。\n\n注意：将所有文件夹及其包含的文件权限全部更改为777，否则后边无法运行。\n\n注意：system文件夹下如果有config.php文件，将其删除，正常情况是没有的。\n\n然后，打开浏览器，输入`http://localhost/install/index.php`，会显示安装界面，点 update 后，根据自己的需要填写配置信息，之后系统会根据你填写的内容在 system 文件夹下生成一个 config.php 文件。\n<br />\n![](/content/images/2015/12/5.jpg)\n![](/content/images/2015/12/6.jpg)\n<br />\n需要注意的是，MySQL 的密码和下边 bot 的密码可以不一样，我为了好记全用了 123456，但 bot 的密码一定要和 builder 生成木马时填写的密钥相同，这样僵尸机和控制端通信时才可以正确加密解密。\n\n安装成功后，在浏览器输入`http://localhost/cp.php`，输入方才设定的用户名和密码，即可登录控制端，使用 Zeus 给僵尸机发送控制指令。","html":"<h2 id=\"\">简介</h2>\n\n<p>Zeus 是一款非常著名的黑客工具包，是在黑产行业被广泛使用的僵尸网络，主要用于窃取银行账户。该工具包于 2011 年泄露源码，并且其作者宣布退出犯罪软件的开发。本文详述如何在 Linux 下构建 LAMP（apache、php、mysql），安装 Zeus 控制端并运行。客户端的运行参照下一篇文章 。</p>\n\n<p>本人所使用的 Zeus 版本是1.2.4.2, 2011 年泄露源码的版本为 2.0.8.9，这两版本人都安装成功过，本文以 1.2.4.2 为例。</p>\n\n<h2 id=\"apache\">安装 Apache</h2>\n\n<h4 id=\"apache2\">安装 Apache2</h4>\n\n<p><code>sudo aptitude install apache2</code>  </p>\n\n<h4 id=\"etcinitdapache2httpdconf777\">编辑 /etc/init.d/apache2/httpd.conf 来设定一个主机名，如果无法编辑，更改权限为 777</h4>\n\n<p><code>ServerName &lt;myhostname&gt;</code>  </p>\n\n<h4 id=\"apache2\">启动和测试 apache2</h4>\n\n<p><code>sudo /etc/init.d/apache2 start  </code></p>\n\n<p>如果一切都正常的话，此时启动浏览器，输入<code>http://localhost</code>,会看到一个测试网页，表明安装成功。\n<img src=\"/content/images/2015/12/1.jpg\" alt=\"\" /></p>\n\n<h2 id=\"php5\">安装 PHP5</h2>\n\n<h4 id=\"apache2\">暂时关闭 apache2</h4>\n\n<p><code>sudo /etc/init.d/apache2 stop</code>  </p>\n\n<h4 id=\"php5\">安装 PHP5</h4>\n\n<p><code>sudo aptitude install php5 libapache2-mod-php5</code>  </p>\n\n<h4 id=\"apache2\">重新打开 apache2</h4>\n\n<p><code>sudo /etc/init.d/apache2 start</code>  </p>\n\n<h4 id=\"varwwwphp5varwww777testphp\">在 /var/www 目录下，写一个测试页，用来测试 php5 是否可以正常运行。首先更改 /var/www 权限为 777，之后新建一个空文件，命名为 test.php，内容为</h4>\n\n<pre><code>\n&lt;?php\n    //file: test.php\n    phpinfo();\n?&gt;\n</code></pre>\n\n<h4 id=\"httplocalhosttestphp\">打开浏览器，输入<code>http://localhost/test.php</code>，如果安装正确，可以看到相关信息</h4>\n\n<p><img src=\"/content/images/2015/12/2.jpg\" alt=\"\" /></p>\n\n<h4 id=\"apache2\">最后重启一下 apache2</h4>\n\n<p><code>sudo /etc/init.d/apache2 restart</code>  </p>\n\n<h2 id=\"mysql\">安装 MySQL</h2>\n\n<h4 id=\"\">安装</h4>\n\n<p><code>sudo aptitude install mysql-server</code>  </p>\n\n<h4 id=\"rootmysql\">安装过程可能需要输入root用户的密码，请设定一个自己喜欢的，之后，运行一下 mysql，输入刚才设定的密码。</h4>\n\n<p><code>mysql -uroot -p</code>  </p>\n\n<h4 id=\"\">安装成功</h4>\n\n<p><img src=\"/content/images/2015/12/1-1.jpg\" alt=\"\" /></p>\n\n<h2 id=\"\">联动</h2>\n\n<h4 id=\"mysqlapache\">让 MySQL 和 Apache 联动</h4>\n\n<p><code>sudo aptitude install libapache2-mod-auth-mysql php5-mysql</code>  </p>\n\n<h4 id=\"apache2\">重启 Apache2</h4>\n\n<p><code>sudo /etc/init.d/apache2 restart</code>  </p>\n\n<h4 id=\"\">最后再安装一些可能会用到的扩展</h4>\n\n<p><code>sudo aptitude install php5 cli php5 curl php5 gd php5 imap php5 mcrypt</code>  </p>\n\n<h2 id=\"\">控制端的安装</h2>\n\n<p>经过以上步骤，LAMP 环境，也就是 Zeus 的控制端所需要的环境已经搭建完毕，之后，将 Zeus1.2.4.2 压缩包中提供的Server[php] 文件夹下的内容复制到 /var/www 下。\n<br /> <br />\n<img src=\"/content/images/2015/12/4.jpg\" alt=\"\" />\n<br /> <br />\n上图由于我做过实验所以多了几个文件，如果你没有请不用担心。</p>\n\n<p>注意：将所有文件夹及其包含的文件权限全部更改为777，否则后边无法运行。</p>\n\n<p>注意：system文件夹下如果有config.php文件，将其删除，正常情况是没有的。</p>\n\n<p>然后，打开浏览器，输入<code>http://localhost/install/index.php</code>，会显示安装界面，点 update 后，根据自己的需要填写配置信息，之后系统会根据你填写的内容在 system 文件夹下生成一个 config.php 文件。\n<br /> <br />\n<img src=\"/content/images/2015/12/5.jpg\" alt=\"\" />\n<img src=\"/content/images/2015/12/6.jpg\" alt=\"\" />\n<br /> <br />\n需要注意的是，MySQL 的密码和下边 bot 的密码可以不一样，我为了好记全用了 123456，但 bot 的密码一定要和 builder 生成木马时填写的密钥相同，这样僵尸机和控制端通信时才可以正确加密解密。</p>\n\n<p>安装成功后，在浏览器输入<code>http://localhost/cp.php</code>，输入方才设定的用户名和密码，即可登录控制端，使用 Zeus 给僵尸机发送控制指令。</p>","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1449316016111,"created_by":1,"updated_at":1449321939919,"updated_by":1,"published_at":1449316554051,"published_by":1},{"id":19,"uuid":"0b8d502f-380d-4aeb-add7-14a5789f72ce","title":"Windows 下 Zeus 控制端的搭建和配置","slug":"zeus-control-windows","markdown":"Windows 下配置 Zeus 环境要比 Linux 下容易些，一是有现成的集成环境直接安装，二是没有权限问题，Linux 下 Zeus 的配置方法请参看前文。\n\n首先，安装 xampp-1.7.4，这是一个 Apache、PHP、MySQL 的集成环境，十分傻瓜好用。如果系统版本是 Vista 以上，会出现一个提示，注意 UAC 的问题。\n![](/content/images/2015/12/1-2.jpg)\n\n安装过后，将 Zeus 工具包中的 server[php] 中的内容复制到安装目录 htdocs 目录下，有文件冲突则全部覆盖。\n之后启动 xampp，将 Apache 和 MySQL 选 start，用非 IE 内核浏览器（chrome、火狐）打开`http://localhost/install`，填写信息并 update ，如果用火狐，将 Filezilla 也 start。\n![](/content/images/2015/12/2-1.jpg)\n\n最后，打开`http://localhost/cp.php`即可登录使用。\n![](/content/images/2015/12/3.jpg)","html":"<p>Windows 下配置 Zeus 环境要比 Linux 下容易些，一是有现成的集成环境直接安装，二是没有权限问题，Linux 下 Zeus 的配置方法请参看前文。</p>\n\n<p>首先，安装 xampp-1.7.4，这是一个 Apache、PHP、MySQL 的集成环境，十分傻瓜好用。如果系统版本是 Vista 以上，会出现一个提示，注意 UAC 的问题。\n<img src=\"/content/images/2015/12/1-2.jpg\" alt=\"\" /></p>\n\n<p>安装过后，将 Zeus 工具包中的 server[php] 中的内容复制到安装目录 htdocs 目录下，有文件冲突则全部覆盖。\n之后启动 xampp，将 Apache 和 MySQL 选 start，用非 IE 内核浏览器（chrome、火狐）打开<code>http://localhost/install</code>，填写信息并 update ，如果用火狐，将 Filezilla 也 start。\n<img src=\"/content/images/2015/12/2-1.jpg\" alt=\"\" /></p>\n\n<p>最后，打开<code>http://localhost/cp.php</code>即可登录使用。\n<img src=\"/content/images/2015/12/3.jpg\" alt=\"\" /></p>","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1449321643601,"created_by":1,"updated_at":1449321914624,"updated_by":1,"published_at":1449321890932,"published_by":1},{"id":20,"uuid":"e80780e4-dbef-4d6b-bd1d-e38a784b6427","title":"Zeus 客户端木马的生成和使用","slug":"zeus-client","markdown":"前面两篇文章简述了 Zeus1.2.4.2 版控制端的搭建和配置，本文说明客户端的使用方法。\n\n在 Zeus 目录中，打开 builder 文件夹，运行 builder\n\n![](/content/images/2015/12/4-1.jpg)\n\n选择 edit config，编辑 config 文件，主要更改 4 个 IP 地址，改成你控制端所在主机的地址，就是上文配置 LAMP 环境，有控制面板的那个主机的 IP 地址，这样僵尸机会按照这个地址向控制端，即黑客发送信息，这样你就能在控制面板(cp.php)中收到僵尸机的信息。\n\n![](/content/images/2015/12/5-1.jpg)\n\n修改完毕后，保存，分别点击 build config 和 build loader，会生成 config.bin 和一个 exe 程序，将 config.bin 复制到前文中的 /var/www 下，而 exe 文件就是一个木马，用来感染目标主机，运行后，它会将一段恶意代码注入到系统 svchost 进程中，注入完毕后，目标主机会变为僵尸机，控制端会定时收到此僵尸机报告，之后点击报告选 create new script 就可以向僵尸机发送控制指令了。Zeus 支持的所有指令罗列在 system/botnet_scripts.php 文件中。\n\nPS：Zeus2.0.8.9 版本生成的木马，会将恶意代码注入到 explorer.exe 进程中，其所支持的指令也可以在源代码中查看到。","html":"<p>前面两篇文章简述了 Zeus1.2.4.2 版控制端的搭建和配置，本文说明客户端的使用方法。</p>\n\n<p>在 Zeus 目录中，打开 builder 文件夹，运行 builder</p>\n\n<p><img src=\"/content/images/2015/12/4-1.jpg\" alt=\"\" /></p>\n\n<p>选择 edit config，编辑 config 文件，主要更改 4 个 IP 地址，改成你控制端所在主机的地址，就是上文配置 LAMP 环境，有控制面板的那个主机的 IP 地址，这样僵尸机会按照这个地址向控制端，即黑客发送信息，这样你就能在控制面板(cp.php)中收到僵尸机的信息。</p>\n\n<p><img src=\"/content/images/2015/12/5-1.jpg\" alt=\"\" /></p>\n\n<p>修改完毕后，保存，分别点击 build config 和 build loader，会生成 config.bin 和一个 exe 程序，将 config.bin 复制到前文中的 /var/www 下，而 exe 文件就是一个木马，用来感染目标主机，运行后，它会将一段恶意代码注入到系统 svchost 进程中，注入完毕后，目标主机会变为僵尸机，控制端会定时收到此僵尸机报告，之后点击报告选 create new script 就可以向僵尸机发送控制指令了。Zeus 支持的所有指令罗列在 system/botnet_scripts.php 文件中。</p>\n\n<p>PS：Zeus2.0.8.9 版本生成的木马，会将恶意代码注入到 explorer.exe 进程中，其所支持的指令也可以在源代码中查看到。</p>","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1449322071181,"created_by":1,"updated_at":1449322640253,"updated_by":1,"published_at":1449322374123,"published_by":1},{"id":21,"uuid":"5901f8c6-daa1-4cf9-bb2f-6dfac0c41415","title":"在新加坡的所见所感（一）","slug":"singapore1","markdown":"![height=\"300px\" width=\"400px\"](/content/images/2015/12/beijing.jpg)\n\n2012 年到 2013 年，在新加坡工作和生活了一年，看到了很多，体会了很多，思考了很多，正是这一年，让我下定决心离开大陆，所以回国之后，唯一的目标就是想办法再出来。\n\n先说点儿最多人感兴趣的，就是黄赌毒。新加坡只禁毒，黄赌都是合法的。\n##芽笼（Geylang）\n\n网上关于芽笼的介绍有很多，这里是新加坡政府划定的合法红灯区，妓院有营业执照，合法经营，合法纳税。妹子们则有专门的签证，俗称“黄卡”。这种持证上岗的妹子只有泰国人和中国人，好像是因为这种签证只对泰国和中国开放。\n\n芽笼地区的规划是十分有意思的。中间以 Geylang Road 为分界，北边是单数巷，南边是双数巷。在北边的单数巷集中了新加坡的各种美食，而南边的双数巷（LOR 8 ~ LOR 20）就是政府划定的红灯区，妓院都集中在这里。所以有一种说法，这种规划是根据孟子的名言“食色性也”而来。\n\n![](/content/images/2015/12/geylang1.jpg)\n\n红灯区只是有一点脏乱，但是治安并不差，一切都和外面一样有秩序，而且芽笼这里还有一个特点，就是寺庙众多。这种格局很像泰国，春业和寺庙共存，或许是因为出卖身体的人需要在精神上有个归宿吧。街上的店铺都是上午休息，开张时间从十二点到两三点不等，所以趁着上午不开门，可以随手拍几张照片。\n\n寺庙与红房子共存\n\n![](/content/images/2015/12/lingshan.jpg)\n\n38 号的招牌是“花园”，40 号的招牌是“天上人间”\n\n![](/content/images/2015/12/huayuan.jpg)\n\n典型的门店\n\n![](/content/images/2015/12/dianxing.jpg)\n\n有的时候在这里逛，也会思考，如果从传统文化的角度看，新加坡应该是法家思想的贯彻者和执行者吧，拥抱管仲，拒绝孔子。面对问题，解决问题，超级的实用主义。也会想到胡适的名言：一个肮脏的国家，如果人人都开始讲规则而不是谈道德！最终会变成一个有人味儿的正常国家，道德自然会逐渐回归；一个干净的国家，如果人人都不讲规则却大谈道德，人人都争当高尚，天天没事儿就谈道德规范，人人都大公无私，最终这个国家会堕落成为一个伪君子遍布的肮脏国家。\n\n新加坡有大量的外来劳工，芽笼这个地方，应该说，为社会治安的稳定，做出了特别的贡献。就像有大量外来务工人员的深圳，服务业也是异常繁荣，都是一个道理。\n\n##赌场\n\n新加坡有两个赌场，在鱼尾狮的附近有一个，在圣淘沙有一个。进了赌场，能深深体会到新加坡有钱人的富有，或许有大陆客过来赌也说不定。\n\n一提到赌场，很多人就和什么赌王，出老千儿联系在一起，其实根本就不是。如果赌场有输无赢，那全世界的赌场都没客人了，事实上，赌场和彩票差不多。赌场不会赔钱是因为赌场赢的概率比客人赢的概率略高，当客人基数大了以后，由于统计性质，自然不会输。但如果你运气好，是能赢点钱出来的。\n\n在赌场里面，有低注区，在这里玩儿几个小时，花的钱并不比去 KTV 之类的地方多出多少，其实就是普通的娱乐方式而已。\n\n![](/content/images/2015/12/duchang.jpg)\n![](/content/images/2015/12/du2.jpg)\n\n经典的老虎机，看到右面那个把手就感觉萌萌哒。\n\n![](/content/images/2015/12/laohuji.jpg)\n\n反正逛完之后，如果用国务院腔调来说的话，那就是这些腐朽的资本主义国家，竟玩这些堕落的东西。可关键是，我们自己似乎哪样也没少，都在地下繁荣地运行着。面对问题，解决问题，总比当鸵鸟要好得多。我始终觉得，管子比孔子有用的多。","html":"<p><img src=\"/content/images/2015/12/beijing.jpg\" alt=\"height=\"300px\" width=\"400px\"\" /></p>\n\n<p>2012 年到 2013 年，在新加坡工作和生活了一年，看到了很多，体会了很多，思考了很多，正是这一年，让我下定决心离开大陆，所以回国之后，唯一的目标就是想办法再出来。</p>\n\n<p>先说点儿最多人感兴趣的，就是黄赌毒。新加坡只禁毒，黄赌都是合法的。</p>\n\n<h2 id=\"geylang\">芽笼（Geylang）</h2>\n\n<p>网上关于芽笼的介绍有很多，这里是新加坡政府划定的合法红灯区，妓院有营业执照，合法经营，合法纳税。妹子们则有专门的签证，俗称“黄卡”。这种持证上岗的妹子只有泰国人和中国人，好像是因为这种签证只对泰国和中国开放。</p>\n\n<p>芽笼地区的规划是十分有意思的。中间以 Geylang Road 为分界，北边是单数巷，南边是双数巷。在北边的单数巷集中了新加坡的各种美食，而南边的双数巷（LOR 8 ~ LOR 20）就是政府划定的红灯区，妓院都集中在这里。所以有一种说法，这种规划是根据孟子的名言“食色性也”而来。</p>\n\n<p><img src=\"/content/images/2015/12/geylang1.jpg\" alt=\"\" /></p>\n\n<p>红灯区只是有一点脏乱，但是治安并不差，一切都和外面一样有秩序，而且芽笼这里还有一个特点，就是寺庙众多。这种格局很像泰国，春业和寺庙共存，或许是因为出卖身体的人需要在精神上有个归宿吧。街上的店铺都是上午休息，开张时间从十二点到两三点不等，所以趁着上午不开门，可以随手拍几张照片。</p>\n\n<p>寺庙与红房子共存</p>\n\n<p><img src=\"/content/images/2015/12/lingshan.jpg\" alt=\"\" /></p>\n\n<p>38 号的招牌是“花园”，40 号的招牌是“天上人间”</p>\n\n<p><img src=\"/content/images/2015/12/huayuan.jpg\" alt=\"\" /></p>\n\n<p>典型的门店</p>\n\n<p><img src=\"/content/images/2015/12/dianxing.jpg\" alt=\"\" /></p>\n\n<p>有的时候在这里逛，也会思考，如果从传统文化的角度看，新加坡应该是法家思想的贯彻者和执行者吧，拥抱管仲，拒绝孔子。面对问题，解决问题，超级的实用主义。也会想到胡适的名言：一个肮脏的国家，如果人人都开始讲规则而不是谈道德！最终会变成一个有人味儿的正常国家，道德自然会逐渐回归；一个干净的国家，如果人人都不讲规则却大谈道德，人人都争当高尚，天天没事儿就谈道德规范，人人都大公无私，最终这个国家会堕落成为一个伪君子遍布的肮脏国家。</p>\n\n<p>新加坡有大量的外来劳工，芽笼这个地方，应该说，为社会治安的稳定，做出了特别的贡献。就像有大量外来务工人员的深圳，服务业也是异常繁荣，都是一个道理。</p>\n\n<h2 id=\"\">赌场</h2>\n\n<p>新加坡有两个赌场，在鱼尾狮的附近有一个，在圣淘沙有一个。进了赌场，能深深体会到新加坡有钱人的富有，或许有大陆客过来赌也说不定。</p>\n\n<p>一提到赌场，很多人就和什么赌王，出老千儿联系在一起，其实根本就不是。如果赌场有输无赢，那全世界的赌场都没客人了，事实上，赌场和彩票差不多。赌场不会赔钱是因为赌场赢的概率比客人赢的概率略高，当客人基数大了以后，由于统计性质，自然不会输。但如果你运气好，是能赢点钱出来的。</p>\n\n<p>在赌场里面，有低注区，在这里玩儿几个小时，花的钱并不比去 KTV 之类的地方多出多少，其实就是普通的娱乐方式而已。</p>\n\n<p><img src=\"/content/images/2015/12/duchang.jpg\" alt=\"\" />\n<img src=\"/content/images/2015/12/du2.jpg\" alt=\"\" /></p>\n\n<p>经典的老虎机，看到右面那个把手就感觉萌萌哒。</p>\n\n<p><img src=\"/content/images/2015/12/laohuji.jpg\" alt=\"\" /></p>\n\n<p>反正逛完之后，如果用国务院腔调来说的话，那就是这些腐朽的资本主义国家，竟玩这些堕落的东西。可关键是，我们自己似乎哪样也没少，都在地下繁荣地运行着。面对问题，解决问题，总比当鸵鸟要好得多。我始终觉得，管子比孔子有用的多。</p>","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1449398602000,"created_by":1,"updated_at":1449578881594,"updated_by":1,"published_at":1449410826044,"published_by":1},{"id":22,"uuid":"08a7def1-ca4b-4b0f-9fcb-9b0e1d150a0d","title":"在新加坡的所见所感（二）","slug":"singapore2","markdown":"![height=\"300px\" width=\"400px\"](/content/images/2015/12/beijing.jpg)\n\n##房子\n\n新加坡作为弹丸之地，房子自然是紧俏资源，房价也很昂贵，也和我朝一样，并不是永久产权，是有使用期限的。我所了解的也有限，但粗略的说，这里的房子，分成组屋和公寓两类，组屋类似于我们的经济适用房，符合条件的人可以申请去买；公寓是比较有钱的人买的，要比组屋贵不少。\n\n组屋虽说是类似于经济适用房，但实际上，我感觉比国内的万科精品房，还要好得多。组屋基本上是三室起步的，这边的房子，我还没见过国内常说的偏单，至于独单，好像人家根本就不盖。二室的组屋，基本上是低收入家庭申请的，太难见到了，反正租房市场上基本看不见。\n\n我所租住的，就是一个三室组屋的一间，房东买完房子后，自己住主卧（新加坡称主人房），把另外两间卧室出租，然后我和另一位租客，以及房东一起生活，而我们付的房租，已经足够他还房贷了。\n\n房子楼下的环境是这样的。\n\n![](/content/images/2015/12/fangzi1.jpg)\n\n房子后面是联通各小街区的轻轨，轻到只有一节车厢，没有噪音，再后面就是森林了。\n\n![](/content/images/2015/12/fangzi4.jpg)\n\n每天回家会经过楼下这条长廊，有时会有五颜六色的很漂亮的鸟站在栏杆上叫\n\n![](/content/images/2015/12/fangzi2.jpg)\n\n楼下的回廊。\n\n![](/content/images/2015/12/fangzi3.jpg)\n\n我每天回家，都在想，如果我回到国内生活，我要花多少钱才能买到同样环境的房子，亦或者说，即便我有钱，恐怕都买不到如此好的环境。\n\n新加坡的公寓就更不用说了，公寓一般楼下都配有游泳池的，有的还有健身房。想游泳或者健身的时候，下楼来就可以了。\n\n这样的房子，价格换成人民币，按绝对数字来比较，比北京深圳贵不到哪里去，大家都是几百万的级别，但质量和环境，就相差十万八千里了。\n\n在腾讯上班的时候，公司旁边是帝景园。有的时候走到茶水间，向外眺望，就能看到楼外的阳台上，挂着白布黑字。上面写着“墙歪楼裂，危在旦夕”之类的，我没有细看，因为角度原因很多地方看不清楚。总之，大意就是房子质量有问题，被坑了。记得实习的时候就挂着这样的白布，一年过后来正式入职了，白布依然在挂着。\n\n从实习到正式工作，两年了，看到这些白布标语，我想过两件事：\n\n一件是，你们挂给谁看呢？给官员看？很明显，官员是不看的，看了也是不管的；给路人看？路人帮不到你们；给买房者看？或许吧，可以避免更多人上当。其实我想，他们自己也不知道挂给谁看，或者说，是挂给自己看的。因为除了贴这样的横幅宣泄怒气和怨气，以获得些许的心理安慰，他们再也没有什么方法来维权了，这种挂横幅的方式，只能体现百姓没有话语权的无力感。\n\n另一件是：如果我买了这样的房子会怎样？在深圳，像样的房子怎么也得几百万级别，人生能赚到几个几百万？说是半生财富亦不为过。如果说耗费半生财富，就买到这样一间有问题的房子，我会怎样？我想象不出来，总之，我不敢想，因为我根本接受不了。98 年朱总站在九江大堤，大骂“豆腐渣工程，王八蛋工程”，大堤都可以这样，房子会幸免？总之，我不相信哪幢房子，哪座楼盘真的质量过硬，没有偷工减料。退一万步讲，即便质量真的没问题又如何，上哪里去找如我曾租住的那样曲径通幽的环境。\n\n同样的做房奴，我为什么不去国外做。同样的还半生房贷。在北上广可以得到一个鸽子窝，或许还是豆腐渣的鸽子窝；在新加坡可以得到一个泳池公寓；在日本可以得到一个一户建；在欧美可以得到一个别墅，门前自带大花园。同样的付出，不同的回报，事实上，连付出都不同样，因为按购买力算，以人家的收入买房子比国内容易太多。得到的也有区别，无论日本还是欧美，房子下面的那块地皮，永远是你的。如此衡量，我没有任何留下的理由。\n\n新加坡的组屋，很便宜，但有一个小坑，就是 PR 才可以买二手组屋，外国人只能买公寓。一手的组屋新房，应该是只有本国人才可以买。也就是说，新加坡人凭借自己的国籍优势，买个组屋转手再卖，直接就能获利数十万甚至上百万。可以看到，政府对本国居民利益的保护，甚至是赤裸裸地偏向。\n\n这边的公寓还有另外一个特点，就是基本都带有佣人房，佣人房一般都在厨房的后边，是专门给佣人居住的。对新加坡的中产家庭来说，雇佣一个女佣，并不是什么难事。每个月几百块钱而已。主要是菲律宾、印尼等等地方的佣人，菲佣貌似价格贵一些。不得不感叹，真“腐朽”。\n\n##交通\n新加坡开车的成本很高，因为拥车证很昂贵，并且拥车证还有期限。但是公共交通很发达，舒适。新加坡的马路上是没有交警的，我十分怀疑，他们是否有交警这个职业。这样一个弹丸之地，几乎看不到堵车，因为几乎没有抢道的情况。他们对于马路拥堵的感觉似乎就是，时速 20 公里/时，就是有点堵了。\n\n刚到这里的时候，十分不习惯，因为过马路的时候，尤其是过斑马线的时候，习惯性地让汽车先过，看到汽车远远开过来，都会下意识地停在路边等它过去。然而，这里的剧情是，汽车会直接停下来，等你过去。花了好长时间，才习惯看到汽车开过来之后，不管它，大胆地往前走。\n\n这里坐地铁也好，坐公交也罢，最大的感觉就是很舒服，很方便，在这里生活，我并没有买一辆车的欲望。记得多年以前，有专家谈到北京拥堵，提到的是，先要把公共交通建设好，让人们使用公共交通的时候，感觉到有尊严。我在这里乘地铁或者公交，并不觉得无趣，看看窗外的风景，时间很快就过去了，并且噪音很小，空气清新，速度也快，总而言之吧，我无法说清专家嘴里的尊严到底是什么，但我觉得，这里的公共交通，就是专家说的，该有的感觉。\n\n我们的确也有公共交通，大城市的公共交通也不能说不发达，但是仅仅是有而已，要是说到便捷、舒适、有尊严。乘坐公共交通也有不输于使用私家车的生活品质，还有太长的路要走。","html":"<p><img src=\"/content/images/2015/12/beijing.jpg\" alt=\"height=\"300px\" width=\"400px\"\" /></p>\n\n<h2 id=\"\">房子</h2>\n\n<p>新加坡作为弹丸之地，房子自然是紧俏资源，房价也很昂贵，也和我朝一样，并不是永久产权，是有使用期限的。我所了解的也有限，但粗略的说，这里的房子，分成组屋和公寓两类，组屋类似于我们的经济适用房，符合条件的人可以申请去买；公寓是比较有钱的人买的，要比组屋贵不少。</p>\n\n<p>组屋虽说是类似于经济适用房，但实际上，我感觉比国内的万科精品房，还要好得多。组屋基本上是三室起步的，这边的房子，我还没见过国内常说的偏单，至于独单，好像人家根本就不盖。二室的组屋，基本上是低收入家庭申请的，太难见到了，反正租房市场上基本看不见。</p>\n\n<p>我所租住的，就是一个三室组屋的一间，房东买完房子后，自己住主卧（新加坡称主人房），把另外两间卧室出租，然后我和另一位租客，以及房东一起生活，而我们付的房租，已经足够他还房贷了。</p>\n\n<p>房子楼下的环境是这样的。</p>\n\n<p><img src=\"/content/images/2015/12/fangzi1.jpg\" alt=\"\" /></p>\n\n<p>房子后面是联通各小街区的轻轨，轻到只有一节车厢，没有噪音，再后面就是森林了。</p>\n\n<p><img src=\"/content/images/2015/12/fangzi4.jpg\" alt=\"\" /></p>\n\n<p>每天回家会经过楼下这条长廊，有时会有五颜六色的很漂亮的鸟站在栏杆上叫</p>\n\n<p><img src=\"/content/images/2015/12/fangzi2.jpg\" alt=\"\" /></p>\n\n<p>楼下的回廊。</p>\n\n<p><img src=\"/content/images/2015/12/fangzi3.jpg\" alt=\"\" /></p>\n\n<p>我每天回家，都在想，如果我回到国内生活，我要花多少钱才能买到同样环境的房子，亦或者说，即便我有钱，恐怕都买不到如此好的环境。</p>\n\n<p>新加坡的公寓就更不用说了，公寓一般楼下都配有游泳池的，有的还有健身房。想游泳或者健身的时候，下楼来就可以了。</p>\n\n<p>这样的房子，价格换成人民币，按绝对数字来比较，比北京深圳贵不到哪里去，大家都是几百万的级别，但质量和环境，就相差十万八千里了。</p>\n\n<p>在腾讯上班的时候，公司旁边是帝景园。有的时候走到茶水间，向外眺望，就能看到楼外的阳台上，挂着白布黑字。上面写着“墙歪楼裂，危在旦夕”之类的，我没有细看，因为角度原因很多地方看不清楚。总之，大意就是房子质量有问题，被坑了。记得实习的时候就挂着这样的白布，一年过后来正式入职了，白布依然在挂着。</p>\n\n<p>从实习到正式工作，两年了，看到这些白布标语，我想过两件事：</p>\n\n<p>一件是，你们挂给谁看呢？给官员看？很明显，官员是不看的，看了也是不管的；给路人看？路人帮不到你们；给买房者看？或许吧，可以避免更多人上当。其实我想，他们自己也不知道挂给谁看，或者说，是挂给自己看的。因为除了贴这样的横幅宣泄怒气和怨气，以获得些许的心理安慰，他们再也没有什么方法来维权了，这种挂横幅的方式，只能体现百姓没有话语权的无力感。</p>\n\n<p>另一件是：如果我买了这样的房子会怎样？在深圳，像样的房子怎么也得几百万级别，人生能赚到几个几百万？说是半生财富亦不为过。如果说耗费半生财富，就买到这样一间有问题的房子，我会怎样？我想象不出来，总之，我不敢想，因为我根本接受不了。98 年朱总站在九江大堤，大骂“豆腐渣工程，王八蛋工程”，大堤都可以这样，房子会幸免？总之，我不相信哪幢房子，哪座楼盘真的质量过硬，没有偷工减料。退一万步讲，即便质量真的没问题又如何，上哪里去找如我曾租住的那样曲径通幽的环境。</p>\n\n<p>同样的做房奴，我为什么不去国外做。同样的还半生房贷。在北上广可以得到一个鸽子窝，或许还是豆腐渣的鸽子窝；在新加坡可以得到一个泳池公寓；在日本可以得到一个一户建；在欧美可以得到一个别墅，门前自带大花园。同样的付出，不同的回报，事实上，连付出都不同样，因为按购买力算，以人家的收入买房子比国内容易太多。得到的也有区别，无论日本还是欧美，房子下面的那块地皮，永远是你的。如此衡量，我没有任何留下的理由。</p>\n\n<p>新加坡的组屋，很便宜，但有一个小坑，就是 PR 才可以买二手组屋，外国人只能买公寓。一手的组屋新房，应该是只有本国人才可以买。也就是说，新加坡人凭借自己的国籍优势，买个组屋转手再卖，直接就能获利数十万甚至上百万。可以看到，政府对本国居民利益的保护，甚至是赤裸裸地偏向。</p>\n\n<p>这边的公寓还有另外一个特点，就是基本都带有佣人房，佣人房一般都在厨房的后边，是专门给佣人居住的。对新加坡的中产家庭来说，雇佣一个女佣，并不是什么难事。每个月几百块钱而已。主要是菲律宾、印尼等等地方的佣人，菲佣貌似价格贵一些。不得不感叹，真“腐朽”。</p>\n\n<h2 id=\"\">交通</h2>\n\n<p>新加坡开车的成本很高，因为拥车证很昂贵，并且拥车证还有期限。但是公共交通很发达，舒适。新加坡的马路上是没有交警的，我十分怀疑，他们是否有交警这个职业。这样一个弹丸之地，几乎看不到堵车，因为几乎没有抢道的情况。他们对于马路拥堵的感觉似乎就是，时速 20 公里/时，就是有点堵了。</p>\n\n<p>刚到这里的时候，十分不习惯，因为过马路的时候，尤其是过斑马线的时候，习惯性地让汽车先过，看到汽车远远开过来，都会下意识地停在路边等它过去。然而，这里的剧情是，汽车会直接停下来，等你过去。花了好长时间，才习惯看到汽车开过来之后，不管它，大胆地往前走。</p>\n\n<p>这里坐地铁也好，坐公交也罢，最大的感觉就是很舒服，很方便，在这里生活，我并没有买一辆车的欲望。记得多年以前，有专家谈到北京拥堵，提到的是，先要把公共交通建设好，让人们使用公共交通的时候，感觉到有尊严。我在这里乘地铁或者公交，并不觉得无趣，看看窗外的风景，时间很快就过去了，并且噪音很小，空气清新，速度也快，总而言之吧，我无法说清专家嘴里的尊严到底是什么，但我觉得，这里的公共交通，就是专家说的，该有的感觉。</p>\n\n<p>我们的确也有公共交通，大城市的公共交通也不能说不发达，但是仅仅是有而已，要是说到便捷、舒适、有尊严。乘坐公共交通也有不输于使用私家车的生活品质，还有太长的路要走。</p>","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1449578907890,"created_by":1,"updated_at":1449715776787,"updated_by":1,"published_at":1449665676058,"published_by":1},{"id":23,"uuid":"0d5b5df6-2dcc-4b7b-b75d-82d73c9375d1","title":"在新加坡的所见所感（三）","slug":"singapore3","markdown":"![height=\"300px\" width=\"400px\"](/content/images/2015/12/beijing.jpg)\n\n写点杂七杂八的，观察到的有意思的细节。\n\n在学校里面做 RA 的时候，慢慢发现行政人员基本都在岗位上。上了这么多年学，已经习惯了去找行政人员办事，十次有八次找不到人的情况。然而，在这里，几乎没有找不到人的时候，只要是上班时间，到了行政人员办公室，他们基本都在座位上，即便找不到人，也会有代理人帮你把事情办好，不能说绝对不会吧，但起码在我的经历里面，没有出现过办一件事跑第二次，或者来回跑的情况，办事效率，行政效率，不是一般的高。\n\n坐地铁的时候，观察周围，发现 Kindle 的普及率很高，每天都可以看到拿 Kindle 看书的人，也可以看到拿纸质书阅读的人。他们普遍有阅读的习惯，虽然有不少人是在用手机玩消除类的游戏打发时间，但也有相当比例的人在阅读，读 Kindle、手机电子书、纸质书，甚至是免费的报纸。苹果手机的普及率也很高，在 12 年的时候，苹果在国内还不是街机，但在新加坡的地铁里，我粗略观察，基本 10 个人里面 7 个人拿着苹果，剩下两三个拿的是黑莓或者三星。当我掏出 2.5 寸屏的诺基亚直板机的时候，地铁里就出现了唯一的诺基亚用户。\n\n麦当劳肯德基之类的，没有单独的门脸，只是大商场里面的一个商铺；银行也很少看到独立盖的网点，基本也是大商场里面的一个格子间。银行柜台没有防弹玻璃隔开，甚至根本就没有柜台，办事情就坐在工作人员的旁边。\n\n这里有很多补品类的药铺，有点像香港。有大量的人参、鹿茸之类的出售。普通的小超市，可以看到各种从国内进口的优质农产品，这些东西放到国内，基本都要进高档超市的。然而在这里，就是普通人消费的很廉价的东西。我的工资是每月 2000 新币，超市的盐是 5 毛一带，橄榄油 10 块多一瓶，一桶油、一袋米面，也没几个钱。50 块的钞票是生活中的大票，功能和我们的百元钞一样，100 面值的新币几乎看不见流通，只有离开新加坡的时候在银行取到过，那是我第一次见到 100 的钞票。\n\n大部分人都在外面吃饭，食阁很发达，随便找个地方吃，就十分好吃。或许这是移民国家的特点吧，各个地方的移民，带来了各个地方独特的美食。食阁的饭，大体有杂菜饭（类似学校食堂，自选饭菜）、福建面、炒粿条、老火靓汤、烧腊、马来饭菜、印度饭菜、越南饭菜等等。吃腻了可以去街边小店吃泰国菜、娘惹菜、日料等等。似乎政府特别鼓励大家在外面吃，是否真的鼓励并没有考证过，但个人感觉，随便找个地方都很好吃，而且便宜，真的不值得在家开火。另外就是，这里的房间没有油烟机的烟道，所以除非是自己买的房子，否则一般情况下，不允许租客用中式的煎炒烹炸那种方法“大煮”，即便是自己买的房子，因为没有烟道，估计也忍不了这样做饭吧。\n\n最关键的是，我一日三餐在外面吃，饭量比别人大，吃的多，各种吃，租的房子也比较好，即便这样，每月消费也就一千二三，两千的工资还能剩七八百。更为关键的是，我这是低收入，新加坡人的平均收入是四五千，生活水平可想而知。\n\n电子产品包括家电，品牌格局和国内不同，比如这里经常见到松下的空调，也有很多日系品牌的其他家电出售，国内品牌很少见到，或者说，根本没有。笔记本电脑卖宏碁的特别多，联想也占有一席之地，然后华硕也有卖，其余国内能看到的品牌都很少见到。最常见的基本都是日系和欧美的家电。真正在这里有自己一块地方的，应该就是联想和海尔吧。\n\n人们的心态很好，我觉得这是我最喜欢的一点，简而言之就是没有戾气，不躁。在这里一年了，没看到过谁急急火火。没看到过交通事故，没看到过吵架，没听说过大妈逼人让座，最常听到的词是 sorry。我没看到过不代表没有，但是总有个多与少的问题，总体上看，人们的心态真的是很平和，在这样的环境里生活，整个人感觉很放松，不累。\n\n动物园的动物非常自由，如果谁来新加坡旅游，我一般都会推荐他去逛一逛动物园，真是设计的非常非常好。猴子就从你头顶上过去，鸟在树上蹲着，动物们都很自由，几乎没有铁笼子，他们是用人工的河流把动物圈在一块地方，非常自然。有很多那种类似大雁的鸟，他们的窝就在大树的最顶端，我还问了工作人员，你们这样撒着，这些动物跑了怎么办。然后人家的回答是，他们往哪里跑，他们的家在这里，为啥要跑呀？我去。。。听起来真是好有道理，感觉也是无言以对。逛完动物园出来，我有点儿感叹，不光是人，连动物投胎都是个技术活儿。\n\n逛动物园的时候，这只鸟（某种鸽子？）蹲在树上呆着，一点儿不怕人，坐看来来往往的游客。没有笼子，没有铭牌，到现在也不知道它是什么。\n\n![](/content/images/2015/12/dongwu1.jpg)\n\n偶尔会在树上看到松鼠，这里的松鼠比北美还是少多了，但在动物园碰到的概率还是很高的，松鼠没人管，蹿的特别快，拍照片很不容易。\n\n![](/content/images/2015/12/dongwu2.jpg)\n![](/content/images/2015/12/dongwu3.jpg)\n\n在去新加坡植物园玩儿的时候，里面有一个小小的湖泊，然后居然有只黑天鹅。嗯，是在植物园，然后有一只没人管的黑天鹅，也不怕人，从没这么近距离地看过黑天鹅。左下角那个黑黑的东西不是石头，而是一只大乌龟，水很浅很清，里面好多龟。\n\n![](/content/images/2015/12/dongwu4.jpg)\n\n在去河川动物园的时候，在门口售票处看到一只出来溜达的孔雀，然后就比较震精，这是在外面啊。还没进园呢。然后问工作人员它怎么在外面，然后工作人员说它自己喜欢出来溜溜，一会儿就溜达回去了。然后我也是比较无语，我刚想问一句它要是跑了怎么办，想想还是算了，估计人家又会回答它的家在这里，为啥要跑。\n\n![](/content/images/2015/12/dongwu5.jpg)\n\n新加坡有没有不好的地方呢，自然也有。比如其实也不是那么自由，毕竟是威权；比如对外国人的政策真是比较苛刻，处处能感受到 PR 和本地人身份的便利；比如对中国人其实不是那么友好；比如也面临着人才流失，大量的优秀学生拿这里当跳板，去了北美，去了澳洲，总之，各种各样的问题也有，哪个国家没有问题，有人的地方就有利益，就有矛盾，就有问题。\n\n没有什么地方是最好的，适合自己的地方就是最好的。","html":"<p><img src=\"/content/images/2015/12/beijing.jpg\" alt=\"height=\"300px\" width=\"400px\"\" /></p>\n\n<p>写点杂七杂八的，观察到的有意思的细节。</p>\n\n<p>在学校里面做 RA 的时候，慢慢发现行政人员基本都在岗位上。上了这么多年学，已经习惯了去找行政人员办事，十次有八次找不到人的情况。然而，在这里，几乎没有找不到人的时候，只要是上班时间，到了行政人员办公室，他们基本都在座位上，即便找不到人，也会有代理人帮你把事情办好，不能说绝对不会吧，但起码在我的经历里面，没有出现过办一件事跑第二次，或者来回跑的情况，办事效率，行政效率，不是一般的高。</p>\n\n<p>坐地铁的时候，观察周围，发现 Kindle 的普及率很高，每天都可以看到拿 Kindle 看书的人，也可以看到拿纸质书阅读的人。他们普遍有阅读的习惯，虽然有不少人是在用手机玩消除类的游戏打发时间，但也有相当比例的人在阅读，读 Kindle、手机电子书、纸质书，甚至是免费的报纸。苹果手机的普及率也很高，在 12 年的时候，苹果在国内还不是街机，但在新加坡的地铁里，我粗略观察，基本 10 个人里面 7 个人拿着苹果，剩下两三个拿的是黑莓或者三星。当我掏出 2.5 寸屏的诺基亚直板机的时候，地铁里就出现了唯一的诺基亚用户。</p>\n\n<p>麦当劳肯德基之类的，没有单独的门脸，只是大商场里面的一个商铺；银行也很少看到独立盖的网点，基本也是大商场里面的一个格子间。银行柜台没有防弹玻璃隔开，甚至根本就没有柜台，办事情就坐在工作人员的旁边。</p>\n\n<p>这里有很多补品类的药铺，有点像香港。有大量的人参、鹿茸之类的出售。普通的小超市，可以看到各种从国内进口的优质农产品，这些东西放到国内，基本都要进高档超市的。然而在这里，就是普通人消费的很廉价的东西。我的工资是每月 2000 新币，超市的盐是 5 毛一带，橄榄油 10 块多一瓶，一桶油、一袋米面，也没几个钱。50 块的钞票是生活中的大票，功能和我们的百元钞一样，100 面值的新币几乎看不见流通，只有离开新加坡的时候在银行取到过，那是我第一次见到 100 的钞票。</p>\n\n<p>大部分人都在外面吃饭，食阁很发达，随便找个地方吃，就十分好吃。或许这是移民国家的特点吧，各个地方的移民，带来了各个地方独特的美食。食阁的饭，大体有杂菜饭（类似学校食堂，自选饭菜）、福建面、炒粿条、老火靓汤、烧腊、马来饭菜、印度饭菜、越南饭菜等等。吃腻了可以去街边小店吃泰国菜、娘惹菜、日料等等。似乎政府特别鼓励大家在外面吃，是否真的鼓励并没有考证过，但个人感觉，随便找个地方都很好吃，而且便宜，真的不值得在家开火。另外就是，这里的房间没有油烟机的烟道，所以除非是自己买的房子，否则一般情况下，不允许租客用中式的煎炒烹炸那种方法“大煮”，即便是自己买的房子，因为没有烟道，估计也忍不了这样做饭吧。</p>\n\n<p>最关键的是，我一日三餐在外面吃，饭量比别人大，吃的多，各种吃，租的房子也比较好，即便这样，每月消费也就一千二三，两千的工资还能剩七八百。更为关键的是，我这是低收入，新加坡人的平均收入是四五千，生活水平可想而知。</p>\n\n<p>电子产品包括家电，品牌格局和国内不同，比如这里经常见到松下的空调，也有很多日系品牌的其他家电出售，国内品牌很少见到，或者说，根本没有。笔记本电脑卖宏碁的特别多，联想也占有一席之地，然后华硕也有卖，其余国内能看到的品牌都很少见到。最常见的基本都是日系和欧美的家电。真正在这里有自己一块地方的，应该就是联想和海尔吧。</p>\n\n<p>人们的心态很好，我觉得这是我最喜欢的一点，简而言之就是没有戾气，不躁。在这里一年了，没看到过谁急急火火。没看到过交通事故，没看到过吵架，没听说过大妈逼人让座，最常听到的词是 sorry。我没看到过不代表没有，但是总有个多与少的问题，总体上看，人们的心态真的是很平和，在这样的环境里生活，整个人感觉很放松，不累。</p>\n\n<p>动物园的动物非常自由，如果谁来新加坡旅游，我一般都会推荐他去逛一逛动物园，真是设计的非常非常好。猴子就从你头顶上过去，鸟在树上蹲着，动物们都很自由，几乎没有铁笼子，他们是用人工的河流把动物圈在一块地方，非常自然。有很多那种类似大雁的鸟，他们的窝就在大树的最顶端，我还问了工作人员，你们这样撒着，这些动物跑了怎么办。然后人家的回答是，他们往哪里跑，他们的家在这里，为啥要跑呀？我去。。。听起来真是好有道理，感觉也是无言以对。逛完动物园出来，我有点儿感叹，不光是人，连动物投胎都是个技术活儿。</p>\n\n<p>逛动物园的时候，这只鸟（某种鸽子？）蹲在树上呆着，一点儿不怕人，坐看来来往往的游客。没有笼子，没有铭牌，到现在也不知道它是什么。</p>\n\n<p><img src=\"/content/images/2015/12/dongwu1.jpg\" alt=\"\" /></p>\n\n<p>偶尔会在树上看到松鼠，这里的松鼠比北美还是少多了，但在动物园碰到的概率还是很高的，松鼠没人管，蹿的特别快，拍照片很不容易。</p>\n\n<p><img src=\"/content/images/2015/12/dongwu2.jpg\" alt=\"\" />\n<img src=\"/content/images/2015/12/dongwu3.jpg\" alt=\"\" /></p>\n\n<p>在去新加坡植物园玩儿的时候，里面有一个小小的湖泊，然后居然有只黑天鹅。嗯，是在植物园，然后有一只没人管的黑天鹅，也不怕人，从没这么近距离地看过黑天鹅。左下角那个黑黑的东西不是石头，而是一只大乌龟，水很浅很清，里面好多龟。</p>\n\n<p><img src=\"/content/images/2015/12/dongwu4.jpg\" alt=\"\" /></p>\n\n<p>在去河川动物园的时候，在门口售票处看到一只出来溜达的孔雀，然后就比较震精，这是在外面啊。还没进园呢。然后问工作人员它怎么在外面，然后工作人员说它自己喜欢出来溜溜，一会儿就溜达回去了。然后我也是比较无语，我刚想问一句它要是跑了怎么办，想想还是算了，估计人家又会回答它的家在这里，为啥要跑。</p>\n\n<p><img src=\"/content/images/2015/12/dongwu5.jpg\" alt=\"\" /></p>\n\n<p>新加坡有没有不好的地方呢，自然也有。比如其实也不是那么自由，毕竟是威权；比如对外国人的政策真是比较苛刻，处处能感受到 PR 和本地人身份的便利；比如对中国人其实不是那么友好；比如也面临着人才流失，大量的优秀学生拿这里当跳板，去了北美，去了澳洲，总之，各种各样的问题也有，哪个国家没有问题，有人的地方就有利益，就有矛盾，就有问题。</p>\n\n<p>没有什么地方是最好的，适合自己的地方就是最好的。</p>","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1449667413461,"created_by":1,"updated_at":1460097562710,"updated_by":1,"published_at":1449751177027,"published_by":1},{"id":24,"uuid":"21129867-6046-4a3f-8e2f-5aff4b877eaf","title":"DDoS 攻击与防范读书笔记","slug":"ddosnote","markdown":"##DDoS 的历史\n\n* 1996 年 9 月 6 日，Panix 遭遇 SYN FLOOD\n* 1996 年 9 月 19 日，CERT 发布“CA-1996-21”，提出缓解 SYN FLOOD 和 IP 欺骗攻击的建议。\n* 1997 年，Trinoo 攻击工具发布，SMURF 源码发布\n* 2000 年，Yahoo 遭遇 DDoS，攻击者是黑手党男孩\n* 2000 年，IETF 发布 RFC 2827，\"Network Ingress Filtering：Defeating Denial of Service Attacks which employ IP Source Address Spoofing\"\n* 2001 年，IRC 服务 EFNet 遭到 3 Gbits/s DDoS 攻击\n* 2002 年，13 台根域名服务器受攻击\n\n......\n\n* 2010 年，Anonymous 宣布开展阿桑奇复仇行动\n* 2011 年，CIA 网站遭到 LulzSec 的 DDoS\n* 2013 年，Spamhaus 受到史上最大规模 DDoS，峰值 300 Gbits/s\n* 2013 年，互联网系统协会宣布在新版 BIND 中增加 RRL 模块用来防范 DDoS\n\n## DDoS 的攻击来源\n\n绝大多数攻击来源于僵尸网络（Botnet），书中主要介绍了僵尸网络的演化。僵尸网络最早可追溯到 IRC 的 Bot 工具 Eggdrop，这是个良性 Bot。这种 Bot 启发了黑客的思路，进而产生了僵尸网络，并一发不可收拾。\n\n根据僵尸网络所依赖的协议，其演进流程从 IRC 到 HTTP 再到 P2P，Zeus 为典型的 HTTP 僵尸网络，主机感染数量庞大的 Zeroaccess 为 P2P 僵尸网络。\n\nZeus 的泄露对互联网影响深远，目前有黑客为 Zeus 添加了 P2P 模块。另外，目前以互联网中的高性能服务器作为 Bot 的趋势正在上升，因为受感染的服务器无论在系统资源，在线时间等各方面，都优于传统 PC，移动设备作为僵尸机也是一个趋势。\n\n利用僵尸网络进行 DDoS 的基本原理如图所示。\n\n![](/content/images/2016/01/botnet.JPG)\n\n最后，Anonymous 组织基于黑客行动主义，采用十分特殊的自愿型僵尸网络，即由大量的人在同一时间，有意识地组成僵尸网络，使用工具对目标进行攻击。\n\n## DDoS 的攻击方法\nDDoS 攻击主要有以下几大类：攻击带宽资源、攻击系统资源、攻击应用资源，目前常见的反射攻击，属于攻击带宽。\n###攻击带宽资源\n####直接攻击\n1. ICMP/IGMP Flood\n攻击者向目标发送大量 ICMP/IGMP 报文，用来消耗目标的带宽资源，可以使用 hping 等工具发起此类攻击，但被攻击目标可以在网络边界直接过滤此类攻击包，所以目前很少使用，也没什么效果。\n\n2. UDP Flood\n攻击原理与 ICMP 相同，攻击者发送大量 UDP 包来消耗目标的带宽资源。UDP Flood 攻击可以分为小包攻击和大包攻击。小包是 64B，这样可以增大 pps，给对方网络设备增加压力；大包是大于 1500B 的数据包，能有效占用带宽，并且逼迫对方做分片重组运算，拖慢响应。\nUDP Flood 历史悠久，hping，LOIC 等工具可以发动此攻击，对自身的消耗大，对对方的消耗不大。\n####反射攻击\n这种攻击称为 DRDoS，主要特点是利用反射流量对目标进行攻击，并隐藏了攻击来源。如果做个比喻的话，原始的 DDoS 是拿机关枪直接打人，而 DRDoS 则是拿机关枪打墙，利用从墙上反弹回的弹壳伤人。\n\n在反射攻击中，攻击者将源 IP 伪造成要攻击的目标主机，向反射器发送数据包，而反射器对数据包根据源 IP 进行回复的时候，海量的数据包就发送到了目标主机上，以达到攻击目的。这里面有个关键就是，反射器必须具有放大的作用，即一个较小的请求包，会引发一个较大的回复包，这样攻击者才能以一个较小的请求，反射并放大给目标主机，使目标主机受到攻击，其原理如图所示。\n\n![](/content/images/2016/01/drdosyuanli.JPG)\n\n***因为反射攻击中源 IP 地址是伪造的，所以攻击者和被攻击者之间无法进行多次交互，因此发动反射攻击通常使用不需要认证或者握手的协议，即绝大多数反射攻击都是基于 UDP 协议的。***\n\n###攻击系统资源\n攻击系统资源不是通过占用带宽，而是通过促使目标主机的系统资源快速消耗，进而拖慢响应速度。包括：TCP Flood，SYN Flood，PSH + ACK Flood，RST Flood，SockStress，THC SSL DoS，SSL Flood\n###攻击应用资源\n攻击应用资源包括：DNS Query，DNS NXDOMAIN Flood，HTTP Flood，Slowloris，慢速 POST。\n\n最终总结如下：\n\n![](/content/images/2016/01/ddossummary.JPG)\n\n##DDoS 主要攻击工具\n![](/content/images/2016/01/ddostool.JPG)\n\n##DDoS 的缓解和治理\n1. 由多方出面，治理僵尸网络，治理反射点。\n2. CDN 和 Anycast，以及流量稀释和流量清洗。\n\n文章参考提取自：《破坏之王：DDoS 攻击与防范深度剖析》\n\n其余有用相关资料：\n\n1. http://blog.aliyun.com/author/aliyun_blog?spm=0.0.0.0.pQw3zi\n2. http://blog.nsfocus.net/2015-h1-nsfocus-ddos-threat-report/","html":"<h2 id=\"ddos\">DDoS 的历史</h2>\n\n<ul>\n<li>1996 年 9 月 6 日，Panix 遭遇 SYN FLOOD</li>\n<li>1996 年 9 月 19 日，CERT 发布“CA-1996-21”，提出缓解 SYN FLOOD 和 IP 欺骗攻击的建议。</li>\n<li>1997 年，Trinoo 攻击工具发布，SMURF 源码发布</li>\n<li>2000 年，Yahoo 遭遇 DDoS，攻击者是黑手党男孩</li>\n<li>2000 年，IETF 发布 RFC 2827，\"Network Ingress Filtering：Defeating Denial of Service Attacks which employ IP Source Address Spoofing\"</li>\n<li>2001 年，IRC 服务 EFNet 遭到 3 Gbits/s DDoS 攻击</li>\n<li>2002 年，13 台根域名服务器受攻击</li>\n</ul>\n\n<p>......</p>\n\n<ul>\n<li>2010 年，Anonymous 宣布开展阿桑奇复仇行动</li>\n<li>2011 年，CIA 网站遭到 LulzSec 的 DDoS</li>\n<li>2013 年，Spamhaus 受到史上最大规模 DDoS，峰值 300 Gbits/s</li>\n<li>2013 年，互联网系统协会宣布在新版 BIND 中增加 RRL 模块用来防范 DDoS</li>\n</ul>\n\n<h2 id=\"ddos\">DDoS 的攻击来源</h2>\n\n<p>绝大多数攻击来源于僵尸网络（Botnet），书中主要介绍了僵尸网络的演化。僵尸网络最早可追溯到 IRC 的 Bot 工具 Eggdrop，这是个良性 Bot。这种 Bot 启发了黑客的思路，进而产生了僵尸网络，并一发不可收拾。</p>\n\n<p>根据僵尸网络所依赖的协议，其演进流程从 IRC 到 HTTP 再到 P2P，Zeus 为典型的 HTTP 僵尸网络，主机感染数量庞大的 Zeroaccess 为 P2P 僵尸网络。</p>\n\n<p>Zeus 的泄露对互联网影响深远，目前有黑客为 Zeus 添加了 P2P 模块。另外，目前以互联网中的高性能服务器作为 Bot 的趋势正在上升，因为受感染的服务器无论在系统资源，在线时间等各方面，都优于传统 PC，移动设备作为僵尸机也是一个趋势。</p>\n\n<p>利用僵尸网络进行 DDoS 的基本原理如图所示。</p>\n\n<p><img src=\"/content/images/2016/01/botnet.JPG\" alt=\"\" /></p>\n\n<p>最后，Anonymous 组织基于黑客行动主义，采用十分特殊的自愿型僵尸网络，即由大量的人在同一时间，有意识地组成僵尸网络，使用工具对目标进行攻击。</p>\n\n<h2 id=\"ddos\">DDoS 的攻击方法</h2>\n\n<p>DDoS 攻击主要有以下几大类：攻击带宽资源、攻击系统资源、攻击应用资源，目前常见的反射攻击，属于攻击带宽。  </p>\n\n<h3 id=\"\">攻击带宽资源</h3>\n\n<h4 id=\"\">直接攻击</h4>\n\n<ol>\n<li><p>ICMP/IGMP Flood <br />\n攻击者向目标发送大量 ICMP/IGMP 报文，用来消耗目标的带宽资源，可以使用 hping 等工具发起此类攻击，但被攻击目标可以在网络边界直接过滤此类攻击包，所以目前很少使用，也没什么效果。</p></li>\n<li><p>UDP Flood <br />\n攻击原理与 ICMP 相同，攻击者发送大量 UDP 包来消耗目标的带宽资源。UDP Flood 攻击可以分为小包攻击和大包攻击。小包是 64B，这样可以增大 pps，给对方网络设备增加压力；大包是大于 1500B 的数据包，能有效占用带宽，并且逼迫对方做分片重组运算，拖慢响应。\nUDP Flood 历史悠久，hping，LOIC 等工具可以发动此攻击，对自身的消耗大，对对方的消耗不大。  </p></li>\n</ol>\n\n<h4 id=\"\">反射攻击</h4>\n\n<p>这种攻击称为 DRDoS，主要特点是利用反射流量对目标进行攻击，并隐藏了攻击来源。如果做个比喻的话，原始的 DDoS 是拿机关枪直接打人，而 DRDoS 则是拿机关枪打墙，利用从墙上反弹回的弹壳伤人。</p>\n\n<p>在反射攻击中，攻击者将源 IP 伪造成要攻击的目标主机，向反射器发送数据包，而反射器对数据包根据源 IP 进行回复的时候，海量的数据包就发送到了目标主机上，以达到攻击目的。这里面有个关键就是，反射器必须具有放大的作用，即一个较小的请求包，会引发一个较大的回复包，这样攻击者才能以一个较小的请求，反射并放大给目标主机，使目标主机受到攻击，其原理如图所示。</p>\n\n<p><img src=\"/content/images/2016/01/drdosyuanli.JPG\" alt=\"\" /></p>\n\n<p><strong><em>因为反射攻击中源 IP 地址是伪造的，所以攻击者和被攻击者之间无法进行多次交互，因此发动反射攻击通常使用不需要认证或者握手的协议，即绝大多数反射攻击都是基于 UDP 协议的。</em></strong></p>\n\n<h3 id=\"\">攻击系统资源</h3>\n\n<p>攻击系统资源不是通过占用带宽，而是通过促使目标主机的系统资源快速消耗，进而拖慢响应速度。包括：TCP Flood，SYN Flood，PSH + ACK Flood，RST Flood，SockStress，THC SSL DoS，SSL Flood</p>\n\n<h3 id=\"\">攻击应用资源</h3>\n\n<p>攻击应用资源包括：DNS Query，DNS NXDOMAIN Flood，HTTP Flood，Slowloris，慢速 POST。</p>\n\n<p>最终总结如下：</p>\n\n<p><img src=\"/content/images/2016/01/ddossummary.JPG\" alt=\"\" /></p>\n\n<h2 id=\"ddos\">DDoS 主要攻击工具</h2>\n\n<p><img src=\"/content/images/2016/01/ddostool.JPG\" alt=\"\" /></p>\n\n<h2 id=\"ddos\">DDoS 的缓解和治理</h2>\n\n<ol>\n<li>由多方出面，治理僵尸网络，治理反射点。  </li>\n<li>CDN 和 Anycast，以及流量稀释和流量清洗。</li>\n</ol>\n\n<p>文章参考提取自：《破坏之王：DDoS 攻击与防范深度剖析》</p>\n\n<p>其余有用相关资料：</p>\n\n<ol>\n<li><a href=\"http://blog.aliyun.com/author/aliyun_blog?spm=0.0.0.0.pQw3zi\">http://blog.aliyun.com/author/aliyun_blog?spm=0.0.0.0.pQw3zi</a>  </li>\n<li><a href=\"http://blog.nsfocus.net/2015-h1-nsfocus-ddos-threat-report/\">http://blog.nsfocus.net/2015-h1-nsfocus-ddos-threat-report/</a></li>\n</ol>","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1452068831436,"created_by":1,"updated_at":1452077274719,"updated_by":1,"published_at":1452077274722,"published_by":1},{"id":25,"uuid":"4bd9a82e-3853-4c19-b1f8-181f3081d0b2","title":"在新加坡的所见所感（四）","slug":"singapore4","markdown":"![height=\"300px\" width=\"400px\"](/content/images/2015/12/beijing.jpg)\n\n继续写点杂七杂八的东西。\n\n入职的时候，学校给上了一个医保。效果是门诊看病不要钱，大病也能报很多。我做了一个手术，花了一万多人民币，报了 90% 多，自付不到一千块钱。\n私人诊所的服务很好，全程前台妹子都笑盈盈的，我的卡是新卡，她不清楚报销政策和手续，我也不清楚，结果我没想到的是，她打各种电话打了一个小时，最后弄清了全部手续上的问题，这个真的让我没有想到。\n手术时特意观察了一下清单，大部分钱都是医生和麻醉师的劳务费，药费和医院各种服务费几乎可以忽略，医生的待遇真的是非常高。\n\n平时的日常生活以中文为主，因为好多国内的同胞过去做生意，他们不会说英语，有一次买饭还帮卖饭的小妹充当了一下翻译，而工作中则以英文为主。或者可以说底层生活说华语，上层生活说英语。说的不好听一些，有这样一种感觉，说英语的看不起说粤语、说闽南语的，而说粤语闽南语的则看不起说普通话的。\n\nMacbook 的普及率很高，网银和各种官网对 Mac 系统支持的非常好。而且有意思的是，我办的银行卡每月 ATM 取两次钱是免费的，取第三次开始收手续费，似乎是鼓励刷卡消费。\n\n每天出门都能看到残疾人和孕妇，我一度很奇怪为啥这里这么多孕妇，这么多坐轮椅的。后来也是想明白了，我们国家应该也很多，只是大家没事都在家里闷着。这里无障碍设施比较到位，所以大家都出来，进而有这种错觉。\n\n这里对中国传统的东西有一种不知道该如何形容的态度。有一次我在报纸上看到，《步步惊心》获得了广泛赞誉，好像是获得了什么优秀引进电视剧的奖励，报纸上还说以后要多引进这类好片，能够了解历史文化什么的，记不清楚了。我感觉也是有点哭笑不得。包括中医也好，或者其他的什么也好，东南亚这边推崇的这些，可能在我们看来，连正统的边儿都沾不上，他们却还蛮喜欢的。更奇葩的是，我们在玩命扔掉这些东西，拆拆拆、毁毁毁、废废废。\n\n感觉歧视还蛮厉害的，前房东就向我吐槽，孩子上学好贵。新加坡人学费多少多少，PR 的学费多少多少，一下子贵了好多。各种招聘岗位，没有 PR 就几乎免谈了，因为公司雇佣外国人都是有配额的，总之吧，越来越难以留下了。\n\n现在回头想想，还是很喜欢这个地方的，优点缺点都很明显的地方，有同学依然在这里工作和奋斗，曾问过他，将来还回国不，他的答案是不知道，因为想留不知何年能真正留下，想走也不知回国如何开始。","html":"<p><img src=\"/content/images/2015/12/beijing.jpg\" alt=\"height=\"300px\" width=\"400px\"\" /></p>\n\n<p>继续写点杂七杂八的东西。</p>\n\n<p>入职的时候，学校给上了一个医保。效果是门诊看病不要钱，大病也能报很多。我做了一个手术，花了一万多人民币，报了 90% 多，自付不到一千块钱。\n私人诊所的服务很好，全程前台妹子都笑盈盈的，我的卡是新卡，她不清楚报销政策和手续，我也不清楚，结果我没想到的是，她打各种电话打了一个小时，最后弄清了全部手续上的问题，这个真的让我没有想到。\n手术时特意观察了一下清单，大部分钱都是医生和麻醉师的劳务费，药费和医院各种服务费几乎可以忽略，医生的待遇真的是非常高。</p>\n\n<p>平时的日常生活以中文为主，因为好多国内的同胞过去做生意，他们不会说英语，有一次买饭还帮卖饭的小妹充当了一下翻译，而工作中则以英文为主。或者可以说底层生活说华语，上层生活说英语。说的不好听一些，有这样一种感觉，说英语的看不起说粤语、说闽南语的，而说粤语闽南语的则看不起说普通话的。</p>\n\n<p>Macbook 的普及率很高，网银和各种官网对 Mac 系统支持的非常好。而且有意思的是，我办的银行卡每月 ATM 取两次钱是免费的，取第三次开始收手续费，似乎是鼓励刷卡消费。</p>\n\n<p>每天出门都能看到残疾人和孕妇，我一度很奇怪为啥这里这么多孕妇，这么多坐轮椅的。后来也是想明白了，我们国家应该也很多，只是大家没事都在家里闷着。这里无障碍设施比较到位，所以大家都出来，进而有这种错觉。</p>\n\n<p>这里对中国传统的东西有一种不知道该如何形容的态度。有一次我在报纸上看到，《步步惊心》获得了广泛赞誉，好像是获得了什么优秀引进电视剧的奖励，报纸上还说以后要多引进这类好片，能够了解历史文化什么的，记不清楚了。我感觉也是有点哭笑不得。包括中医也好，或者其他的什么也好，东南亚这边推崇的这些，可能在我们看来，连正统的边儿都沾不上，他们却还蛮喜欢的。更奇葩的是，我们在玩命扔掉这些东西，拆拆拆、毁毁毁、废废废。</p>\n\n<p>感觉歧视还蛮厉害的，前房东就向我吐槽，孩子上学好贵。新加坡人学费多少多少，PR 的学费多少多少，一下子贵了好多。各种招聘岗位，没有 PR 就几乎免谈了，因为公司雇佣外国人都是有配额的，总之吧，越来越难以留下了。</p>\n\n<p>现在回头想想，还是很喜欢这个地方的，优点缺点都很明显的地方，有同学依然在这里工作和奋斗，曾问过他，将来还回国不，他的答案是不知道，因为想留不知何年能真正留下，想走也不知回国如何开始。</p>","image":null,"featured":0,"page":0,"status":"published","language":"zh_CN","meta_title":null,"meta_description":null,"author_id":1,"created_at":1460097576038,"created_by":1,"updated_at":1460099542836,"updated_by":1,"published_at":1460099542839,"published_by":1}],"users":[{"id":1,"uuid":"c4b7220c-77da-4150-9e0e-da5ab05bbbf4","name":"宗楠","slug":"zong","password":"$2a$10$Vum1Zts/YQdkXnp.leLJd.h3JIPoNEeqY3btuqhF0FV9wGl8r872u","email":"zongnan1989@gmail.com","image":null,"cover":null,"bio":null,"website":null,"location":null,"accessibility":null,"status":"active","language":"zh_CN","meta_title":null,"meta_description":null,"last_login":1460096747069,"created_at":1435926990012,"created_by":1,"updated_at":1460096747070,"updated_by":1}],"roles":[{"id":1,"uuid":"2073cd93-2cf6-4876-a314-e600aa5f565a","name":"Administrator","description":"管理员","created_at":1435926988751,"created_by":1,"updated_at":1435926988751,"updated_by":1},{"id":2,"uuid":"8228d8d4-48b3-4510-b08b-96ef5270ca17","name":"Editor","description":"编辑","created_at":1435926988751,"created_by":1,"updated_at":1435926988751,"updated_by":1},{"id":3,"uuid":"6e80f804-94f0-4010-8159-8dff1007eb4b","name":"Author","description":"作者","created_at":1435926988751,"created_by":1,"updated_at":1435926988751,"updated_by":1},{"id":4,"uuid":"037cefc8-6b99-4b9d-b206-395e99479174","name":"Owner","description":"博客所有者","created_at":1435926988752,"created_by":1,"updated_at":1435926988752,"updated_by":1}],"roles_users":[{"id":1,"role_id":4,"user_id":1}],"permissions":[{"id":1,"uuid":"00fefe84-ecc5-4e99-8590-5d8e58fc4b5b","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":1435926988856,"created_by":1,"updated_at":1435926988856,"updated_by":1},{"id":2,"uuid":"dcb5463a-7bc1-41d3-9569-3e324d5dd452","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":1435926988861,"created_by":1,"updated_at":1435926988861,"updated_by":1},{"id":3,"uuid":"2eecd0c6-658f-4f97-b35d-3c91f4b019d9","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":1435926988871,"created_by":1,"updated_at":1435926988871,"updated_by":1},{"id":4,"uuid":"e5ecc140-a479-4f00-a6a9-ea9cdaafc9ec","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":1435926988879,"created_by":1,"updated_at":1435926988879,"updated_by":1},{"id":5,"uuid":"26bc61ad-e392-4f01-8911-14be8ddf0212","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":1435926988896,"created_by":1,"updated_at":1435926988896,"updated_by":1},{"id":6,"uuid":"710ac495-3f8e-47ed-afd5-8905457f7bcb","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":1435926988908,"created_by":1,"updated_at":1435926988908,"updated_by":1},{"id":7,"uuid":"accf2b90-71d9-4eec-8aac-2fd90285778e","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":1435926988916,"created_by":1,"updated_at":1435926988916,"updated_by":1},{"id":8,"uuid":"1db3add0-b889-437a-81a1-01b6b3bfed3e","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":1435926988926,"created_by":1,"updated_at":1435926988926,"updated_by":1},{"id":9,"uuid":"86ab6bef-e59d-4403-baab-d6b401aacf9b","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":1435926988933,"created_by":1,"updated_at":1435926988933,"updated_by":1},{"id":10,"uuid":"090752ef-b136-4d7e-a0ae-3d2dbad894a3","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":1435926988941,"created_by":1,"updated_at":1435926988941,"updated_by":1},{"id":11,"uuid":"d54269cf-844f-4a17-b126-b72ce8fd20bf","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":1435926988949,"created_by":1,"updated_at":1435926988949,"updated_by":1},{"id":12,"uuid":"548249fb-7abb-4138-8ece-8f2e1a267b92","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":1435926988962,"created_by":1,"updated_at":1435926988962,"updated_by":1},{"id":13,"uuid":"e0c8fc89-781d-4dc3-aea3-8d5fd85c54a5","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":1435926988968,"created_by":1,"updated_at":1435926988968,"updated_by":1},{"id":14,"uuid":"9428c967-2d7d-4a5f-a76a-107e507daaa3","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":1435926988976,"created_by":1,"updated_at":1435926988976,"updated_by":1},{"id":15,"uuid":"1446b8ba-e4c4-492d-8071-b98a51628c24","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":1435926988981,"created_by":1,"updated_at":1435926988981,"updated_by":1},{"id":16,"uuid":"1b2399fd-bdd5-481d-8756-faded781dc2c","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":1435926988989,"created_by":1,"updated_at":1435926988989,"updated_by":1},{"id":17,"uuid":"e43da0c4-c2ab-419e-bb35-d31170a483d1","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":1435926988997,"created_by":1,"updated_at":1435926988997,"updated_by":1},{"id":18,"uuid":"6abcb17f-2260-433d-bbf8-4cba5392ea4d","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":1435926989003,"created_by":1,"updated_at":1435926989003,"updated_by":1},{"id":19,"uuid":"f75b142a-f41e-453a-b525-5199f3f22190","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":1435926989009,"created_by":1,"updated_at":1435926989009,"updated_by":1},{"id":20,"uuid":"14ebe226-0bec-4198-9e05-189475fef851","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":1435926989015,"created_by":1,"updated_at":1435926989015,"updated_by":1},{"id":21,"uuid":"14b970c6-be78-4908-bbaa-53f54f06d73b","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":1435926989022,"created_by":1,"updated_at":1435926989022,"updated_by":1},{"id":22,"uuid":"6e665b74-c74a-42ca-81b9-8bc317902047","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":1435926989028,"created_by":1,"updated_at":1435926989028,"updated_by":1},{"id":23,"uuid":"2ed6a9e1-f281-40d7-8538-8134e519ea7c","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":1435926989034,"created_by":1,"updated_at":1435926989034,"updated_by":1},{"id":24,"uuid":"413bc7d3-9318-420d-ac2d-4feff7cf28ce","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":1435926989041,"created_by":1,"updated_at":1435926989041,"updated_by":1},{"id":25,"uuid":"858296f3-dd8d-4217-a0ed-a38c32e4609a","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":1435926989048,"created_by":1,"updated_at":1435926989048,"updated_by":1},{"id":26,"uuid":"34762513-0d3c-4020-b77c-34c1a30c08c6","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":1435926989055,"created_by":1,"updated_at":1435926989055,"updated_by":1},{"id":27,"uuid":"212d13bd-f905-426a-96dc-9a9319a5b48e","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":1435926989066,"created_by":1,"updated_at":1435926989066,"updated_by":1},{"id":28,"uuid":"61578695-d01f-456d-b4a1-3cb71591da7a","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":1435926989075,"created_by":1,"updated_at":1435926989075,"updated_by":1},{"id":29,"uuid":"a0a4e0fb-7797-401c-9248-8fd653f99bf5","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":1435926989084,"created_by":1,"updated_at":1435926989084,"updated_by":1},{"id":30,"uuid":"fbdb8f88-490a-438b-94fb-73a3c10ffa32","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":1435926989091,"created_by":1,"updated_at":1435926989091,"updated_by":1}],"permissions_users":[],"permissions_roles":[{"id":1,"role_id":1,"permission_id":1},{"id":2,"role_id":1,"permission_id":2},{"id":3,"role_id":1,"permission_id":3},{"id":4,"role_id":1,"permission_id":4},{"id":5,"role_id":1,"permission_id":5},{"id":6,"role_id":1,"permission_id":6},{"id":7,"role_id":1,"permission_id":7},{"id":8,"role_id":1,"permission_id":8},{"id":9,"role_id":1,"permission_id":9},{"id":10,"role_id":1,"permission_id":10},{"id":11,"role_id":1,"permission_id":11},{"id":12,"role_id":1,"permission_id":12},{"id":13,"role_id":1,"permission_id":13},{"id":14,"role_id":1,"permission_id":14},{"id":15,"role_id":1,"permission_id":15},{"id":16,"role_id":1,"permission_id":16},{"id":17,"role_id":1,"permission_id":17},{"id":18,"role_id":1,"permission_id":18},{"id":19,"role_id":1,"permission_id":19},{"id":20,"role_id":1,"permission_id":20},{"id":21,"role_id":1,"permission_id":21},{"id":22,"role_id":1,"permission_id":22},{"id":23,"role_id":1,"permission_id":23},{"id":24,"role_id":1,"permission_id":24},{"id":25,"role_id":1,"permission_id":25},{"id":26,"role_id":1,"permission_id":26},{"id":27,"role_id":1,"permission_id":27},{"id":28,"role_id":1,"permission_id":28},{"id":29,"role_id":1,"permission_id":29},{"id":30,"role_id":1,"permission_id":30},{"id":31,"role_id":2,"permission_id":8},{"id":32,"role_id":2,"permission_id":9},{"id":33,"role_id":2,"permission_id":10},{"id":34,"role_id":2,"permission_id":11},{"id":35,"role_id":2,"permission_id":12},{"id":36,"role_id":2,"permission_id":13},{"id":37,"role_id":2,"permission_id":14},{"id":38,"role_id":2,"permission_id":16},{"id":39,"role_id":2,"permission_id":17},{"id":40,"role_id":2,"permission_id":18},{"id":41,"role_id":2,"permission_id":19},{"id":42,"role_id":2,"permission_id":20},{"id":43,"role_id":2,"permission_id":21},{"id":44,"role_id":2,"permission_id":24},{"id":45,"role_id":2,"permission_id":25},{"id":46,"role_id":2,"permission_id":26},{"id":47,"role_id":2,"permission_id":27},{"id":48,"role_id":2,"permission_id":28},{"id":49,"role_id":2,"permission_id":29},{"id":50,"role_id":2,"permission_id":30},{"id":51,"role_id":3,"permission_id":8},{"id":52,"role_id":3,"permission_id":9},{"id":53,"role_id":3,"permission_id":11},{"id":54,"role_id":3,"permission_id":13},{"id":55,"role_id":3,"permission_id":14},{"id":56,"role_id":3,"permission_id":16},{"id":57,"role_id":3,"permission_id":17},{"id":58,"role_id":3,"permission_id":18},{"id":59,"role_id":3,"permission_id":20},{"id":60,"role_id":3,"permission_id":24},{"id":61,"role_id":3,"permission_id":25},{"id":62,"role_id":3,"permission_id":30}],"permissions_apps":[],"settings":[{"id":1,"uuid":"7fab5ef7-eade-4f68-8366-662f5f155b27","key":"databaseVersion","value":"003","type":"core","created_at":1435926990034,"created_by":1,"updated_at":1435926990034,"updated_by":1},{"id":2,"uuid":"ffb50410-da69-4c86-9fa8-f3376137030b","key":"dbHash","value":"26d42de5-1f6e-4185-9426-a0b687e4273e","type":"core","created_at":1435926990043,"created_by":1,"updated_at":1435926990194,"updated_by":1},{"id":3,"uuid":"0ca69a3a-29fa-4ca6-bb88-224091f76c1a","key":"nextUpdateCheck","value":"1460183102","type":"core","created_at":1435926990044,"created_by":1,"updated_at":1460096739495,"updated_by":1},{"id":4,"uuid":"421f1de5-6ad1-4210-b6ba-4c7d132eb82e","key":"displayUpdateNotification","value":"0.7.0","type":"core","created_at":1435926990044,"created_by":1,"updated_at":1460096739511,"updated_by":1},{"id":5,"uuid":"a1b6382c-20b6-466e-bf7e-e116aec20749","key":"title","value":"Nolan ZONG 的小屋","type":"blog","created_at":1435926990044,"created_by":1,"updated_at":1436157875747,"updated_by":1},{"id":6,"uuid":"9540e68c-ef3a-4032-9b9c-806cabd6cf58","key":"description","value":"吃的是粗茶淡饭，穿的是朴素衣裳。住的是单身陋室，走的是荆棘泥塘。读的是杂书万卷，写的是代码千行。求学于津沽大地，就职于鹏城鹅厂。回首廿载寒窗，顺逆各半；遥望未竟之志，仍在远方。","type":"blog","created_at":1435926990044,"created_by":1,"updated_at":1436157875748,"updated_by":1},{"id":7,"uuid":"70f87694-08df-4b93-93e2-b6e38c55dcd1","key":"email","value":"zongnan1989@gmail.com","type":"blog","created_at":1435926990045,"created_by":1,"updated_at":1436157875749,"updated_by":1},{"id":8,"uuid":"fdf1f18a-0741-45a8-9238-b741f65fae60","key":"logo","value":"/content/images/2015/07/touxiang.jpg","type":"blog","created_at":1435926990045,"created_by":1,"updated_at":1436157875750,"updated_by":1},{"id":9,"uuid":"a13f47ce-2a9f-4ca6-adf8-74627ecee520","key":"cover","value":"","type":"blog","created_at":1435926990045,"created_by":1,"updated_at":1436157875751,"updated_by":1},{"id":10,"uuid":"9dd5c662-9235-4a0e-9325-6b2803038d01","key":"defaultLang","value":"zh_CN","type":"blog","created_at":1435926990045,"created_by":1,"updated_at":1436157875751,"updated_by":1},{"id":11,"uuid":"2501f32d-e049-4ff8-850d-6d7a39c52e5c","key":"postsPerPage","value":"10","type":"blog","created_at":1435926990046,"created_by":1,"updated_at":1436157875752,"updated_by":1},{"id":12,"uuid":"1b60f7f0-54ca-49e0-900e-f224326b4686","key":"forceI18n","value":"true","type":"blog","created_at":1435926990046,"created_by":1,"updated_at":1436157875753,"updated_by":1},{"id":13,"uuid":"d3c39b7b-1da2-4117-8218-e11150266481","key":"permalinks","value":"/:year/:month/:day/:slug/","type":"blog","created_at":1435926990046,"created_by":1,"updated_at":1436157875754,"updated_by":1},{"id":14,"uuid":"b38c0d4e-3c03-41a6-bae2-f2d7ace656e2","key":"ghost_head","value":"","type":"blog","created_at":1435926990046,"created_by":1,"updated_at":1436157875756,"updated_by":1},{"id":15,"uuid":"4730d330-09f7-4c4a-bb2a-6f1573e93bc7","key":"ghost_foot","value":"","type":"blog","created_at":1435926990046,"created_by":1,"updated_at":1436157875756,"updated_by":1},{"id":16,"uuid":"3290e26d-febf-4e24-abcc-d9aefcabb8d5","key":"labs","value":"{}","type":"blog","created_at":1435926990046,"created_by":1,"updated_at":1436157875757,"updated_by":1},{"id":17,"uuid":"7735a579-d37e-4d8e-8e76-8f3a08e2d82a","key":"navigation","value":"[{\"label\":\"首页\", \"url\":\"/\"}]","type":"blog","created_at":1435926990046,"created_by":1,"updated_at":1436157875758,"updated_by":1},{"id":18,"uuid":"81c07b10-36bc-4f43-89f6-a7a228d0c3d2","key":"isPrivate","value":"false","type":"blog","created_at":1435926990046,"created_by":1,"updated_at":1436157875759,"updated_by":1},{"id":19,"uuid":"2bbf4276-f429-4e9a-aa60-f50af3e31ac8","key":"password","value":"","type":"blog","created_at":1435926990046,"created_by":1,"updated_at":1436157875759,"updated_by":1},{"id":20,"uuid":"1048ae82-3932-40f7-a1b6-69042ccc0a04","key":"activeApps","value":"[]","type":"app","created_at":1435926990047,"created_by":1,"updated_at":1435926990047,"updated_by":1},{"id":21,"uuid":"c9e4a307-9d59-461a-b492-2527218424d8","key":"installedApps","value":"[]","type":"app","created_at":"2015-07-03 12:36:30","created_by":1,"updated_at":"2016-11-27 08:21:22","updated_by":1},{"id":22,"uuid":"7149b2f1-a083-423a-826e-948e38ff9425","key":"activeTheme","value":"vno","type":"theme","created_at":1435926990047,"created_by":1,"updated_at":1436157875755,"updated_by":1},{"id":23,"uuid":"d69dd90e-cbf1-473e-a6a4-fe5cf6f015fa","key":"seenNotifications","value":"[]","type":"core","created_at":"2016-11-27 08:21:22","created_by":1,"updated_at":"2016-11-27 08:21:22","updated_by":1},{"id":24,"uuid":"2a9ecb90-32cd-497d-9cb5-b9b3c10cb1bd","key":"migrations","value":"{}","type":"core","created_at":"2016-11-27 08:21:22","created_by":1,"updated_at":"2016-11-27 08:21:22","updated_by":1},{"id":25,"uuid":"41b03c3f-f91b-48d7-9727-63bb71a799cc","key":"activeTimezone","value":"Etc/UTC","type":"blog","created_at":"2016-11-27 08:21:22","created_by":1,"updated_at":"2016-11-27 08:21:22","updated_by":1},{"id":26,"uuid":"0ebaabd7-6c3d-4fa7-a765-4d7e51481f90","key":"facebook","value":"","type":"blog","created_at":"2016-11-27 08:21:22","created_by":1,"updated_at":"2016-11-27 08:21:22","updated_by":1},{"id":27,"uuid":"df9285b2-f253-4f0d-a8c0-1340e0bd3e40","key":"twitter","value":"","type":"blog","created_at":"2016-11-27 08:21:22","created_by":1,"updated_at":"2016-11-27 08:21:22","updated_by":1},{"id":28,"uuid":"f72a6d20-d055-4f4d-b4a9-208f42849fc7","key":"slack","value":"[{\"url\":\"\"}]","type":"blog","created_at":"2016-11-27 08:21:22","created_by":1,"updated_at":"2016-11-27 08:21:22","updated_by":1}],"tags":[{"id":2,"uuid":"48dde2fe-a268-4e2b-b61a-282020f2b8a0","name":"给学霸幼苗浇水","slug":"goddess","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1435996405456,"created_by":1,"updated_at":1435996692308,"updated_by":1},{"id":3,"uuid":"46858bad-faa2-46e7-9d5f-8fbe6e8726fd","name":"小屋起源","slug":"origin","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1436157903701,"created_by":1,"updated_at":1436157913420,"updated_by":1},{"id":4,"uuid":"04e249fc-08f9-435d-b8f7-b47d7e8418fc","name":"应聘经验","slug":"interview","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1436449821119,"created_by":1,"updated_at":1436449845182,"updated_by":1},{"id":5,"uuid":"b3f5910c-01cd-43a7-b443-8bb02a8cc77f","name":"岛国见闻","slug":"japan","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1449299451295,"created_by":1,"updated_at":1449299466031,"updated_by":1},{"id":6,"uuid":"b60d3196-4501-4100-98c9-c6c7eaf9da82","name":"坡县见闻","slug":"singapore","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1449299502837,"created_by":1,"updated_at":1449299511410,"updated_by":1},{"id":7,"uuid":"c481ad39-0ae5-4579-99d2-d9a940f59b79","name":"黑客技术","slug":"hacker","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1449315671627,"created_by":1,"updated_at":1449315678605,"updated_by":1}],"posts_tags":[{"id":211,"post_id":5,"tag_id":2},{"id":212,"post_id":4,"tag_id":2},{"id":213,"post_id":6,"tag_id":2},{"id":232,"post_id":10,"tag_id":3},{"id":234,"post_id":9,"tag_id":3},{"id":248,"post_id":11,"tag_id":2},{"id":409,"post_id":12,"tag_id":2},{"id":425,"post_id":15,"tag_id":2},{"id":437,"post_id":16,"tag_id":2},{"id":438,"post_id":8,"tag_id":3},{"id":487,"post_id":19,"tag_id":7},{"id":488,"post_id":18,"tag_id":7},{"id":491,"post_id":20,"tag_id":7},{"id":493,"post_id":7,"tag_id":3},{"id":647,"post_id":21,"tag_id":6},{"id":907,"post_id":22,"tag_id":6},{"id":1124,"post_id":24,"tag_id":7},{"id":1126,"post_id":17,"tag_id":4},{"id":1127,"post_id":14,"tag_id":4},{"id":1128,"post_id":23,"tag_id":6},{"id":1129,"post_id":25,"tag_id":6}],"apps":[],"app_settings":[],"app_fields":[]}}